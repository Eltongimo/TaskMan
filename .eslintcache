[{"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js":"1","C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js":"2","C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js":"3","C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx":"4","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx":"5","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx":"6","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx":"7","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx":"8","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx":"9","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx":"10","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx":"11","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ShowDashboard.jsx":"12","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx":"13","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx":"14","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx":"15","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx":"16","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx":"17","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx":"18","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\EditHomeContent.jsx":"19","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx":"20","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProducts.jsx":"21","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx":"22","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx":"23","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateActivity.jsx":"24","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateMacroActivity.jsx":"25","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProject.jsx":"26","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx":"27","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx":"28","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx":"29","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx":"30","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx":"31","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx":"32","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx":"33","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js":"34","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js":"35","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js":"36","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx":"37","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx":"38","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx":"39","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Newsletter\\NewsletterHome.jsx":"40","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateNewsletter.jsx":"41","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateUser.jsx":"42","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ShowLats.jsx":"43"},{"size":517,"mtime":1674736802982,"results":"44","hashOfConfig":"45"},{"size":285,"mtime":1672311493009,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1672311493142,"results":"47","hashOfConfig":"45"},{"size":559,"mtime":1675779831619,"results":"48","hashOfConfig":"45"},{"size":1468,"mtime":1675846692339,"results":"49","hashOfConfig":"45"},{"size":2230,"mtime":1672311493086,"results":"50","hashOfConfig":"45"},{"size":868,"mtime":1673343647705,"results":"51","hashOfConfig":"45"},{"size":4017,"mtime":1676322963180,"results":"52","hashOfConfig":"45"},{"size":4063,"mtime":1676322683689,"results":"53","hashOfConfig":"45"},{"size":6566,"mtime":1676042740267,"results":"54","hashOfConfig":"45"},{"size":8606,"mtime":1676040956883,"results":"55","hashOfConfig":"45"},{"size":3579,"mtime":1676322234590,"results":"56","hashOfConfig":"45"},{"size":3095,"mtime":1676322483150,"results":"57","hashOfConfig":"45"},{"size":6050,"mtime":1676313001892,"results":"58","hashOfConfig":"45"},{"size":14599,"mtime":1675929046717,"results":"59","hashOfConfig":"45"},{"size":2631,"mtime":1676042478510,"results":"60","hashOfConfig":"45"},{"size":2169,"mtime":1676314219867,"results":"61","hashOfConfig":"45"},{"size":21181,"mtime":1675851685348,"results":"62","hashOfConfig":"45"},{"size":3718,"mtime":1675159650066,"results":"63","hashOfConfig":"45"},{"size":7198,"mtime":1676310749263,"results":"64","hashOfConfig":"45"},{"size":9827,"mtime":1675762904358,"results":"65","hashOfConfig":"45"},{"size":4540,"mtime":1673531832235,"results":"66","hashOfConfig":"45"},{"size":13320,"mtime":1675778558276,"results":"67","hashOfConfig":"45"},{"size":21651,"mtime":1675856102272,"results":"68","hashOfConfig":"45"},{"size":3835,"mtime":1676044925697,"results":"69","hashOfConfig":"45"},{"size":13630,"mtime":1675781671613,"results":"70","hashOfConfig":"45"},{"size":6891,"mtime":1675920424870,"results":"71","hashOfConfig":"45"},{"size":5434,"mtime":1676311086113,"results":"72","hashOfConfig":"45"},{"size":3401,"mtime":1673030749553,"results":"73","hashOfConfig":"45"},{"size":7265,"mtime":1676309626335,"results":"74","hashOfConfig":"45"},{"size":6566,"mtime":1675778044649,"results":"75","hashOfConfig":"45"},{"size":3476,"mtime":1676321100670,"results":"76","hashOfConfig":"45"},{"size":7739,"mtime":1676297009474,"results":"77","hashOfConfig":"45"},{"size":953,"mtime":1672311493054,"results":"78","hashOfConfig":"45"},{"size":561,"mtime":1674842020000,"results":"79","hashOfConfig":"45"},{"size":772,"mtime":1672311493055,"results":"80","hashOfConfig":"45"},{"size":2561,"mtime":1676319236316,"results":"81","hashOfConfig":"45"},{"size":1851,"mtime":1674226084695,"results":"82","hashOfConfig":"45"},{"size":2121,"mtime":1673531797050,"results":"83","hashOfConfig":"45"},{"size":4017,"mtime":1676030185540,"results":"84","hashOfConfig":"45"},{"size":6938,"mtime":1676134223589,"results":"85","hashOfConfig":"45"},{"size":5533,"mtime":1675930478224,"results":"86","hashOfConfig":"45"},{"size":613,"mtime":1676322832132,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"ihrqs0",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"90"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"90"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"90"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js",[],["200","201"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx",["202"],"import React from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport Board from '../components/Board'\r\nimport Menu from '../components/Menu'\r\nimport './Main.css'\r\nimport Login from '../components/loginpage/Login'\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className='main'>\r\n            <Header/>\r\n                <div className='main-content'>\r\n                    <Menu />\r\n                    <Board/>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Main\r\n  ","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx",["203"],"import React from 'react'\r\nimport './Header.css'\r\nimport logo from '../assets/logo/logo.png'\r\n//import {useState} from 'react'\r\n//import Menu from './Menu'\r\n\r\nfunction Header() {\r\n\r\n     return (\r\n               <header className='header'>\r\n                {/*    <div className=\"home\">\r\n                         <a href='/'>\r\n                              <i class=\"bi bi-house-door-fill\" style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}></i>\r\n                         </a>\r\n     </div> */}\r\n                    <div className='search-input'>\r\n                         <div class=\"form-outline\">\r\n                              <input type=\"search\" id=\"form1\" class=\"form-control\" placeholder=\"Search...\"/>\r\n                         </div>    \r\n                    </div>\r\n                    <div className='logo'>\r\n                         <img src={logo}  width='125' height='50'/>\r\n                    </div>\r\n               <div>\r\n                    <label id='welcome' style={{\r\n                         color: 'white',\r\n                         fontSize: '1rem',\r\n                         padding: '10px',\r\n                         fontWeight: '500'\r\n\r\n                    }}/>\r\n               </div> \r\n               <a href='/'>\r\n                     <div style={{'cursor':'pointer','fontSize': '1.1rem', 'color': 'white',fontWeight: '500'}}>Log out</div>\r\n                </a>\r\n          </header>\r\n     )\r\n}\r\n\r\n\r\nexport default Header\r\n   ","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx",["204"],"import React from 'react'\r\nimport './Login.css'\r\n\r\nclass FluidInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        focused: false,\r\n        value: \"\"\r\n      };\r\n    }\r\n    focusField() {\r\n      const { focused } = this.state;\r\n      this.setState({\r\n        focused: !focused\r\n      });\r\n    }\r\n    handleChange(event) {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      this.setState({\r\n        value: value\r\n      });\r\n    }\r\n    render() {\r\n      const { type, label, style, id } = this.props;\r\n      const { focused, value } = this.state;\r\n      \r\n      let inputClass = \"fluid-input\";\r\n      if (focused) {\r\n        inputClass += \" fluid-input--focus\";\r\n      } else if (value != \"\") {\r\n        inputClass += \" fluid-input--open\";\r\n      }\r\n      \r\n      return (\r\n        <div className={inputClass} style={style}>\r\n          <div className=\"fluid-input-holder\">\r\n            \r\n            <input \r\n              className=\"fluid-input-input\"\r\n              type={type}\r\n              id={id}\r\n              onFocus={this.focusField.bind(this)}\r\n              onBlur={this.focusField.bind(this)}\r\n              onChange={this.handleChange.bind(this)}\r\n              autocomplete=\"off\"\r\n            />\r\n            <label className=\"fluid-input-label\" forHtml={id}>{label}</label>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Button extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className={`button ${this.props.buttonClass}`} onClick={this.props.onClick}>\r\n          {this.props.buttonText}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Login extends React.Component {\r\n    render() {\r\n      \r\n      const style = {\r\n        margin: \"15px 0\"\r\n      };\r\n      return (\r\n        <div className=\"login-container\">\r\n          <div className=\"title\">\r\n           Login\r\n          </div>\r\n          <FluidInput type=\"text\" label=\"name\" id=\"name\" style={style} />\r\n          <FluidInput type=\"password\" label=\"password\" id=\"password\" style={style} />\r\n          <Button buttonText=\"log in\" buttonClass=\"login-button\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Login","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx",["205","206"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx",["207","208","209","210","211","212","213"],"import React from 'react'\r\nimport './NewsLetter.css'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref,remove,update, } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction NewsLetter (){\r\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'Newsletter/')\r\n    const history = useHistory()\r\n    const dbRef = ref(db)\r\n\r\n      useEffect( () => {\r\n        getNewsletterImages()\r\n        getNewsletter()\r\n         }\r\n     ,[])\r\n \r\n     function getNewsletterImages(){\r\n        listAll(listOfImages).then((response) => {\r\n            let urls = []\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                urls.push(url)\r\n                setImageList(urls)\r\n            }))\r\n         })\r\n     }\r\n\r\n     function getNewsletter(){\r\n        get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n            if (snapshot.exists())\r\n                setnewsLetter(snapshot.val())\r\n            else\r\n                alert('Sem newsletter para mostrar')\r\n        })\r\n    }\r\n\r\n     function seeMore(e){\r\n        history.push({\r\n            pathname: '/readnewsletter',\r\n            search: `?key=${e.target.id.split('.')[1]}`\r\n        })\r\n     }\r\n\r\n     function updateNewsletter(e){\r\n        history.push({\r\n            pathname: '/updatenewsletter',\r\n            search: `?key=${e.target.id}`\r\n        })\r\n     }\r\n\r\n     function deleteNewsLetter(e){\r\n\r\n        remove(ref(db, `NewsLetter/${e.target.value}`)).then(() => {\r\n            alert('Newsletter apagado com sucesso')\r\n            getNewsletter()\r\n        }).catch(() => {\r\n            alert('Erro ao apagar a Newsletter')\r\n        })\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click()\r\n     }\r\n \r\n     function buildTable(){\r\n         \r\n         var values  = []     \r\n         let count = 0\r\n         let index = 0\r\n \r\n         if (newsLetter !== null ){\r\n             for(let key in newsLetter){\r\n                for (let innerKey in newsLetter[key]){\r\n                        values.push(\r\n                            <button   style={{background: 'transparent',\r\n                                           border: 'none',\r\n                                           width: '100%',\r\n                                           outline: 'none',\r\n                                       }}>\r\n                               <div className=\"card card-container\" style={{width: '18rem', marginTop: '10px'}}>\r\n                               <div style={{display: 'flex',flexDirection: 'row',width: '100%',padding: '10px'}}>\r\n                                    <button type='button' className='btn btn-danger' data-toggle=\"modal\" data-target={`#exampleModal${key}`} > Apagar </button> \r\n                                    <button type='button' className='btn btn-secondary' onClick={updateNewsletter} id={key} > Editar </button>\r\n                               </div>\r\n                                   <div className=\"card-body\">\r\n                                       <h5 className=\"card-title\" style={{textAlign: 'justify'}}>{newsLetter[key][innerKey].Title}</h5>\r\n                                       <p className=\"card-text\" style={{textAlign: 'justify'}}>\r\n                                           {newsLetter[key][innerKey].Body.split(\" \").splice(0, 20).join(\" \")} ...\r\n                                       </p>\r\n                                       <a className=\"btn btn-primary\" onClick={seeMore} id={`${count++}.${key}`}>Ver Mais</a>\r\n                                   </div>\r\n                               </div>\r\n                               <div className=\"modal fade\" id={`exampleModal${key}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                               <div className=\"modal-dialog\" role=\"document\">\r\n                                   <div className=\"modal-content\">\r\n                                   <div className=\"modal-header\">\r\n                                       <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                       <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                       <span aria-hidden=\"true\">&times;</span>\r\n                                       </button>\r\n                                   </div>\r\n                                   <div className=\"modal-body\">\r\n                                   <form>\r\n                                       <div className=\"form-group\" >\r\n                                           <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Newsletter ?</label>\r\n                                       </div>\r\n                                   </form>\r\n                                       </div>\r\n                                           <div className=\"modal-footer\">\r\n                                               <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                               <button type=\"button\" value ={key} id={count} onClick={deleteNewsLetter} className=\"btn btn-primary\">Sim</button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               </div>  \r\n                       </button>\r\n                       )\r\n                        break\r\n                }\r\n            }\r\n         }\r\n\r\n         function add(e){\r\n            const key = e.target.id.split('.')\r\n            history.push({\r\n                pathname: '/addnewsletter',\r\n              })\r\n         }\r\n\r\n         return( \r\n         <div className='table-container'>\r\n            <div className='title' id='title'>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            {values}\r\n         </div>\r\n         ) \r\n     }\r\n\r\n    return buildTable()\r\n }\r\n\r\nexport default NewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx",["214","215"],"import React from 'react'\r\nimport './Home.css'\r\nimport {db} from './database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get,ref } from \"firebase/database\"\r\nimport Carousel from './projectviews/Carousel'\r\nimport logo from '../assets/logo/logo.png'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction Home(){\r\n    const [user, setUser ] = useState({})\r\n    const [projects, setProjects] = useState({})\r\n    const [typedUser, setTypedUser] = useState({})\r\n    const [aboutPomar, setAboutPomar] = useState({})\r\n    const history = useHistory()\r\n    \r\n    \r\n    function getUsername(e){\r\n        setTypedUser({username: e.target.value, password:typedUser.password})\r\n    }\r\n\r\n    function getPassword(e){\r\n        setTypedUser({username: typedUser.username, password: e.target.value})\r\n    }\r\n\r\n\r\n    function editContent(e){\r\n        history.push({\r\n            pathname: '/edithomecontent',\r\n          })\r\n    }\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n            get(child(dbRef,'HomeContent')).then((snapshot) => {\r\n\r\n                if (snapshot.exists())\r\n                 for (let key in snapshot.val()){\r\n                    setAboutPomar({About: snapshot.val()[key].About})        \r\n                 }\r\n                }\r\n            )\r\n\r\n            get(child(dbRef, `User`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                        setUser({users: snapshot.val()})\r\n                    else\r\n                        alert('No Users')\r\n            })\r\n            get(child(dbRef, 'Project')).then( snapshot => {\r\n                if (snapshot.exists()){\r\n                    setProjects({p: snapshot.val()})\r\n                }\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function login(e){\r\n        \r\n        for (let u in user.users){\r\n\r\n            if ( user.users[u].Username === typedUser.username && user.users[u].Password === typedUser.password){\r\n                e.target.isVisible = false\r\n                document.getElementById('welcome').innerHTML = `${typedUser.username}, Bem vindo  ao POMAR!`\r\n                document.getElementById('closemodal').click()\r\n                document.getElementById('newsletterhome').hidden = true\r\n                enableMenus()\r\n                clearForm()\r\n                \r\n                return \r\n            }\r\n        }    \r\n        \r\n        alert('username and Password not correct')\r\n    }\r\n\r\n    function enableMenus(){\r\n        document.getElementsByClassName('dashboard')[0].hidden = false\r\n        document.getElementsByClassName('projects')[0].hidden = false\r\n        document.getElementsByClassName('newsletter')[0].hidden = false\r\n        document.getElementsByClassName('relatorios')[0].hidden = false\r\n        document.getElementsByClassName('usuarios')[0].hidden = false\r\n        document.getElementsByClassName('navigation')[0].hidden = false\r\n        document.getElementsByClassName('conteudo')[0].hidden = false\r\n   \r\n    }\r\n\r\n    function clearForm(){\r\n        document.getElementById('username').value = ''\r\n        document.getElementById('password').value = ''\r\n    }\r\n\r\n    function loadprojects(){\r\n        let a = []\r\n        let count = 0\r\n        for (let key in projects.p){\r\n            a.push(\r\n                <li>\r\n                    <button type=\"button\" className='btn btn-outline-secondary' data-toggle=\"modal\" data-target={`#exampleModal${count}`} style={{marginBottom: '10px'}}> {projects.p[key].ProjectName}     </button>\r\n                      <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Projecto{projects.p[key].ProjectName}</h5>\r\n                                        <button type=\"button\" id='closebutton' className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                <div className=\"modal-body\">\r\n                                    <strong>Tipo de Actividade</strong>\r\n                                    <p> \r\n                                        {projects.p[key].TypeOfActivity}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Geral do Projecto</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].GeneralObjective}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Especifico</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].SpecificObjective}\r\n                                    </p>\r\n                                \r\n                                    <strong>Resultado Esperado</strong>\r\n                                    <p> \r\n                                        {projects.p[key].Result}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n            count++\r\n        }\r\n        return a\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='homeContainer'>\r\n\r\n            <div className='carousel-home'>\r\n                <Carousel/>\r\n            </div>\r\n        \r\n            <div className='image' style={{textAlign: 'justify', padding: '10px', marginTop: '15px'}}> \r\n                <b>Projectos</b>\r\n                <p/>\r\n                <ul>\r\n                    {loadprojects()} \r\n                </ul>\r\n            </div>\r\n            <div className='text' style={{textAlign: 'justify', padding: '10px'}}>\r\n                <b>Informação sobre o Pomar</b>\r\n                <p>\r\n                    {aboutPomar.About}\r\n                </p>\r\n\r\n            <button type=\"button\" onClick={clearForm} className=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Login\r\n            </button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                            <button type=\"button\" className=\"closebutton\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label >Username</label> \r\n                                <input type=\"email\" id='username' onChange={getUsername} className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Usermane\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label >Password</label>\r\n                                <input type=\"password\" id='password' onChange= {getPassword} className=\"form-control\" placeholder=\"Password\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={login}>Entrar</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Home","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ShowDashboard.jsx",["216","217"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx",["218","219","220","221"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx",["222","223","224","225"],"import { useEffect,useState } from \"react\"\r\nimport React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref, remove} from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './Users.css'\r\n\r\nfunction Users(){\r\n\r\n    const [users, setUsers]  = useState({projs: []})\r\n    const history = useHistory()\r\n    const [projects, setProjects] = useState([])\r\n    const dbRef = ref(db)\r\n\r\n    useEffect( () => {\r\n        getUsers()    \r\n    },[])\r\n\r\n    function SortByUsername(a){\r\n        a.sort((a,b) => {\r\n            let fa = a.Username,\r\n            fb = b.Username\r\n\r\n            if (fa < fb) {\r\n                return -1;\r\n            }\r\n            if (fa > fb) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n        return a\r\n    }\r\n    \r\n    function getUsers(){\r\n     \r\n        let a = []\r\n        get(child(dbRef, `User`)).then((snapshot) => {\r\n            if (snapshot.exists()){\r\n                for (let key in snapshot.val()){\r\n                    a.push(snapshot.val()[key])\r\n                }\r\n                a = SortByUsername(a)\r\n                setUsers(a)\r\n            }\r\n            else\r\n                alert('no data to load from db server')\r\n        })\r\n    }\r\n\r\n    function deleteUser(e){\r\n    \r\n        remove(ref(db, `User/${e.target.value}`)).then(() => {\r\n        \r\n            alert('Usuario eliminado com sucesso')\r\n            document.getElementById(`closemodal${e.target.id}`).click()\r\n            getUsers()\r\n        })\r\n            \r\n    }\r\n    \r\n    function updateUser(e){\r\n        history.push({\r\n            pathname: '/updateuser',\r\n            search: `?key=${e.target.id}`,\r\n        })    \r\n    }\r\n\r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (users !== null ){\r\n            for(let key in users){\r\n               values.push(\r\n                <button\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${users[key].Key}`}>\r\n                        <div className='colmns-report'>\r\n                            <ul >\r\n                                <li >\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li >\r\n                                    {users[key].Username}\r\n                                </li>\r\n                                <li >\r\n                                    {users[key].Role}\r\n                                </li>\r\n                                <li className='project-icons' >\r\n                                     <i className=\"bi bi-trash\" data-toggle=\"modal\" data-target={`#exampleModal${count}`} />\r\n                                </li>\r\n                                <li className='project-icons' >\r\n                                    <i className=\"bi bi-pencil\" id={`${key}`} onClick={updateUser}/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n               \r\n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação </h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                                Apagar Usuario ?\r\n                        </div>\r\n                        <div className='modal-footer'>\r\n                                <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                <button type='button'  id={count} className='btn btn-primary' value={`${key}`}onClick={deleteUser}> Sim</button>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div >\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/adduser',\r\n            })\r\n        }\r\n\r\n        function searchUsers(e){\r\n    \r\n            let a = []\r\n            if (e.target.value === ''){\r\n                getUsers()\r\n            }\r\n            else{\r\n                a = users.filter(element => element.Username.includes(e.target.value))  \r\n                setUsers(a)\r\n            }\r\n        }\r\n        \r\n        return( \r\n        <div className='users-container'>\r\n            <div className='title' id='title'>\r\n                <input type='tex'  onChange={searchUsers} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Usuario</div>\r\n                <div className='report-header'>Tipo</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Actualizar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n}\r\n\r\nexport default Users","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx",["226","227","228","229","230","231"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref, remove, update} from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport {useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './Activity.css'\r\nimport ActivitySinglePDF from '../ReportsPDF/ActivitySinglePDF'\r\nimport Projects from './Projects'\r\n\r\nfunction Activities (){\r\n    \r\n    const [activity, setActivity ] = useState({activities: []})\r\n    const [keys, setKeys ] = useState([])\r\n    const history =  useHistory()\r\n        \r\n    useEffect(() => {\r\n        getActivities()\r\n        },[]\r\n    )\r\n\r\n    function getActivities(){\r\n        const dbRef = ref(db)\r\n            \r\n        get(child(dbRef,`Activity`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                {\r\n                    let acts = []\r\n                    let aa = []\r\n                    const vals = snapshot.val()\r\n                    \r\n                  for (let a in vals){\r\n                        if (document.URL.split('=')[1] == vals[a].MacroActivityKey){\r\n                            acts.push(vals[a])\r\n                            aa.push(a)\r\n                        }\r\n                    } \r\n                    \r\n                    setActivity({activities: acts})\r\n                    setKeys(aa)\r\n                }            \r\n                else{\r\n                    alert('Sem actividades para carregar')\r\n                }\r\n        })\r\n    }\r\n    \r\n    function handleButtonEvent(e){\r\n\r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n \r\n        if (key[0] === 'delete'){\r\n            // alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            history.push({\r\n                pathname: '/updateactivity',\r\n                search: `?key=${key[2]}`,\r\n            })    \r\n        } \r\n   }\r\n\r\n   // create single page report with details from acticit\r\n   function createPDF(e){\r\n\r\n        ActivitySinglePDF(activity.activities[e.target.id.split('.')[1]])\r\n    \r\n    }\r\n\r\n    function deleteActivity(e){\r\n    \r\n        console.log()\r\n        remove(ref(db, `Activity/${e.target.value}`)).then(\r\n            () => {\r\n                document.getElementById(`closemodal${e.target.id}`).click()\r\n                getActivities()\r\n                alert('Actividade Apagada com sucesso')\r\n            }\r\n        ).catch(() => {\r\n            alert('Erro ao apagar a actividade')\r\n        })\r\n    }\r\n\r\n    function buildTable (){\r\n        \r\n        var values = []\r\n\r\n        if (activity.activities !== null ){\r\n            let count = 0\r\n            let index = 0\r\n            let deleteIndex = count + 1000\r\n\r\n            for(let key in activity.activities){\r\n              console.log(keys[key])\r\n\r\n               values.push( \r\n                <div>\r\n                    <button onClick={handleButtonEvent}\r\n                        style={{background: 'transparent',\r\n                                border: 'none',\r\n                                width: '100%',\r\n                                outline: 'none',\r\n                            }}\r\n                        >\r\n                        <div className='rows-report' id={`${count++}.${activity.activities[key].Key}`}>\r\n                            <div className='colmns-report'id={`${count++}.${activity.activities[key].Key}`} >\r\n                                <ul id={`${count++}.${activity.activities[key].Key}`}>\r\n                                    {/*\r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {++index}\r\n                                    </li> */}\r\n                                   \r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {activity.activities[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-pencil\" id={`update.${count++}.${key}`}\r\n                                          />\r\n                                    </li>\r\n\r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-trash\" id={`delete.${count++}.${activity.activities[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} />\r\n                                    </li>\r\n                                \r\n                                    <li className='project-icons' id={`${count}`} >\r\n                                        <i className=\"bi bi-info\" data-toggle=\"modal\" data-target={`#exampleModal${key}`}/>                                 </li> \r\n                                    <li id={`${count + 1}.${key}`}>\r\n                                        <i class=\"bi bi-file-earmark-arrow-down\" style={{\r\n                                                fontSize: '1.3rem',\r\n                                                color: 'blue'\r\n                                            }}\r\n                                            onClick={createPDF}\r\n                                            id={`${count + 10}.${key}`}\r\n                                        />   \r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                \r\n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação </h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                 Apagar Actividade ?\r\n                            </div>\r\n                            <div className='modal-footer'>\r\n                                 <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                 <button type='button'  id={count} className='btn btn-primary' value= {keys[key]} onClick={deleteActivity}> Sim</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                    \r\n\r\n                    <div className=\"modal fade\" id={`exampleModal${key}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Detalhes da actividade</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form>\r\n                                        <ul >\r\n                                            <li className='modal-details-row'>\r\n                                                <label>Actividade </label> <div className='activity-detail'>{activity.activities[key].Name} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Descrição </label> <div className='activity-detail'>{activity.activities[key].Description} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Lugar </label> <div className='activity-detail'>{activity.activities[key].Location} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Data de Inicio </label> <div className='activity-detail'>{activity.activities[key].StartTime} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Data Final </label> <div className='activity-detail'>{activity.activities[key].DeadLine} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Hora </label> <div className='activity-detail'>{activity.activities[key].Time} </div> \r\n                                            </li > \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Duração </label> <div className='activity-detail'>{activity.activities[key].Duration} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Homens </label>  <div className='activity-detail'>{activity.activities[key].Men} </div> \r\n                                            </li > \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Mulher </label> <div className='activity-detail'>{activity.activities[key].Women} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Meninos </label> <div className='activity-detail'>{activity.activities[key].Boys} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Meninas </label> <div className='activity-detail'>{activity.activities[key].Girls} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Esperado </label>  <div className='activity-detail'>{activity.activities[key].Waited} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Etereonidade </label> <div className='activity-detail'>{activity.activities[key].Heterogenity} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Proximos passos </label> <div className='activity-detail'>{activity.activities[key].NextSteps} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Comentarios </label>  <div className='activity-detail'>{activity.activities[key].Comments} </div> \r\n                                            </li> \r\n                                        </ul>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        \r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div classNameName='table-container'>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='header-container'>\r\n                {/*<div className='report-header'>Nr</div>*/}\r\n                <div className='report-header'>Actividade</div>\r\n                <div className='report-header'>Editar</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Mostrar</div>\r\n                <div className='report-header'>Relatorio</div>\r\n                \r\n                <i className=\"bi bi-info-circle-fill\"\r\n                              style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}\r\n                              />  \r\n              </div>\r\n            {values}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Activities","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx",["232","233"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction ReadNewsNetter(){\r\n\r\n    const [newsletter, setnewsLetter] = useState({})\r\n    const [imageList, setImageList] = useState([])\r\n    const newsletterKey = document.URL.split('=')[1]\r\n    const listOfImages = storageRef(Storage, `Newsletter/${newsletterKey}`)\r\n   \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n\r\n        listAll(listOfImages).then((response) => {\r\n         let urls = []\r\n         response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n             urls.push(url)\r\n             setImageList(urls)\r\n         }))\r\n        })\r\n\r\n\r\n        get(child(dbRef, `NewsLetter/${newsletterKey}`)).then((snapshot) => {\r\n                if (snapshot.exists()){\r\n                        setnewsLetter(snapshot.val())\r\n                }\r\n            }\r\n        )},[])\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        function buildNewsLetter(){\r\n           \r\n            let a = []\r\n\r\n            for(let key in newsletter){\r\n                for (let innerKey in newsletter[key]){\r\n\r\n                    console.log(innerKey)\r\n\r\n                    a.push(<div>\r\n                        <div className='title' style={{fontWeight: '500',marginTop: '15px' }}>\r\n                            {newsletter[key].Title}\r\n                        </div>\r\n\r\n                        <div className='body'>\r\n                            {newsletter[key].Body}\r\n                        </div>\r\n                        <div className='images' style={{marginTop: '20px'}}>\r\n                            <img src={imageList} className=\"card-img-top\" alt=\"...\"/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            }\r\n            return a \r\n        }\r\n     \r\n        return (\r\n                    <div className='container'>\r\n                        <div className='title' id='title'>\r\n                            <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                marginRight: '20px'\r\n                            }} onClick={back}/>\r\n                        </div>\r\n                        {buildNewsLetter()}        \r\n                    </div>\r\n            )\r\n     \r\n}\r\n\r\nexport default ReadNewsNetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx",["234","235","236","237"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\nimport { child, get, ref } from \"firebase/database\"\r\n\r\n\r\nfunction Carousel(){\r\n\r\n    const [images, setImages] = useState([])\r\n    const listOfImages = storageRef(Storage, 'HomeContent')\r\n\r\n    useEffect(()=> {\r\n        listAll(listOfImages).then((response) => {\r\n         let urls = []\r\n         response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n             urls.push(url)\r\n             setImages(urls)\r\n         }))\r\n      })\r\n\r\n    },[])\r\n\r\n    function getImage(){\r\n        let img = []\r\n\r\n        for (let element in images){\r\n            img.push(\r\n                <div className=\"carousel-item active\">\r\n                    <img className=\"d-block w-100\" height={300} src={images[element]} alt=\"Slide\"/>\r\n                </div>\r\n            ) \r\n        }\r\n        return img\r\n    }\r\n\r\n    return (\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n            <ol className=\"carousel-indicators\">\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n            </ol>\r\n            <div className=\"carousel-inner\">\r\n                {getImage()}\r\n            </div>\r\n            <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                <span className=\"carousel-control-prev-icon\" aria-hidden=\"false\"></span>\r\n                <span className=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                <span className=\"carousel-control-next-icon\" aria-hidden=\"false\"></span>\r\n                <span className=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\EditHomeContent.jsx",["238","239","240"],"import React from 'react' \r\nimport './EditHomeContent.css'\r\nimport {useState, useEffect} from 'react'\r\nimport {set,ref} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { child, get } from \"firebase/database\"\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction EditHomeContent(){\r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'HomeContent/')\r\n    const [image, setImages] = useState({})\r\n\r\n    const [aboutPomar, setPomar] = useState({\r\n            Key: uuidv4(),\r\n            About: ''}\r\n        )\r\n        \r\n    useEffect(()=>{\r\n        const dbRef = ref(db)\r\n        \r\n        listAll(listOfImages).then((response) => {\r\n            let urls = []\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                urls.push(url)\r\n                setImageList(urls)\r\n            }))\r\n         })\r\n    \r\n        get(child(dbRef,'HomeContent')).then((snapshot) => {\r\n            if (snapshot.exists())\r\n             for (let key in snapshot.val())\r\n                setPomar({Key: aboutPomar.Key, About: snapshot.val()[key].About})\r\n            }\r\n        )\r\n    }, [])\r\n    \r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function setFile(e){\r\n            setPomar({\r\n                Key: aboutPomar.Key,\r\n                About: aboutPomar.About,\r\n                File: e.target.files\r\n            })\r\n    }\r\n\r\n    function submitText(e){\r\n        set(ref(db, 'HomeContent/' + uuidv4()), aboutPomar).then(()=>\r\n            {\r\n                alert('Texto alterado com sucesso')\r\n            }\r\n        )\r\n  \r\n    }\r\n    function submit(e){\r\n\r\n        if (image !== null){\r\n            uploadBytes( refStorage(Storage,`HomeContent/${aboutPomar.Key}`),image)\r\n            .then(() => {\r\n                alert('Imagem adicionada com Sucesso')\r\n            })\r\n        }\r\n    }\r\n\r\n    function setAboutPomar(e){\r\n        setPomar({About: e.target.value, Key: aboutPomar.Key})\r\n    }\r\n\r\n    function setFile(e){\r\n        setImages(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className='edit-container'>\r\n              <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                        <p>Modificar Conteudo do Home</p>\r\n              </div> \r\n              \r\n            <div className='about-pomar'>\r\n                <label for=\"exampleInputEmail1\">Sobre o Pomar</label>\r\n                <textarea rows='10' type='text' onChange={setAboutPomar} \r\n                    className=\"form-control\" aria-describedby=\"emailHelp\"  value={aboutPomar.About}/>\r\n                <div className='submit-info'>\r\n                    <button className='btn btn-primary' onClick={submitText}>\r\n                        Gravar Texto\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='upload-pic'>\r\n                <label for=\"exampleInputEmail1\">Carregar Imagem</label>\r\n                <input type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className='submit-info'>\r\n                <button className='btn btn-primary' onClick={submit}>\r\n                    Gravar Imagem\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditHomeContent\r\n","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx",["241","242"],"import React, { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref, remove } from \"firebase/database\"\r\nimport './Projects.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nfunction Projects (){\r\n    \r\n    const [projects, setProjects]  = useState({projs: []})\r\n    const history = useHistory()\r\n    const dbRef = ref(db)\r\n\r\n    function getProject(){\r\n\r\n        get(child(dbRef, `Project`)).then((snapshot) => {\r\n            let a = []\r\n            if (snapshot.exists())\r\n            {\r\n                for (let key in snapshot.val())\r\n                    a.push(snapshot.val()[key])\r\n                setProjects(a)\r\n            }\r\n            else\r\n                alert('no data to load from db server')\r\n        })\r\n    }\r\n\r\n    function handleButtonEvent(e){\r\n       \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        \r\n        if (key[0] === 'delete'){\r\n\r\n        }\r\n        else if (key[0] === 'update'){\r\n            history.push({\r\n                pathname: '/updateproject',\r\n                search: `?key=${key[2]}`,\r\n              })\r\n        }   \r\n        else if (key[1] !== undefined){\r\n            history.push({\r\n                pathname: '/products',\r\n                search: `?key=${key[1]}`,\r\n              })\r\n        }    \r\n     }\r\n\r\n     function searchProject(e){\r\n\r\n        let a = []\r\n        if (e.target.value === ''){\r\n            getProject()\r\n        }\r\n        else{\r\n            a = projects.filter(element => element.ProjectName.includes(e.target.value))  \r\n            setProjects(a)\r\n        }\r\n     }\r\n\r\n     function deleteProject(e){\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click()\r\n        \r\n        remove(ref(db, `Project/${e.target.value}`)).then(() => {\r\n            const dbRef = ref(db)\r\n            get(child(dbRef, `Project`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProjects({projs: snapshot.val()})\r\n        \r\n            })\r\n            alert('Projecto eliminado com sucesso')\r\n        \r\n        }).catch(() => {\r\n            alert('Erro ao eliminar o projecto')\r\n        })\r\n    }\r\n \r\n    useEffect( () => {\r\n        getProject()    \r\n    },[])\r\n\r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (projects !== null ){\r\n            for(let key in projects){\r\n               values.push(\r\n                <button \r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                        onClick={handleButtonEvent}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${projects[key].Key}`}>\r\n                        <div className='colmns-report'id={`${count++}.${projects[key].Key}`} >\r\n                            <ul id={`${count++}.${projects[key].Key}`}>\r\n                                <li id={`${count++}.${key}`}>\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li id={`${count++}.${projects[key].Key}`}>\r\n                                    {projects[key].ProjectName}\r\n                                </li>\r\n                                <li id={`${count++}.${projects[key].Key}`}>\r\n                                    {projects[key].TypeOfActivity}\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects[key].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${key}`}\r\n                                    />\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects[key].Key}`}>\r\n                                    <i className=\"bi bi-trash\" id={`delete.${count}.${projects[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} \r\n                                    />    \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\" >\r\n                                        <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Projecto ?</label>\r\n                                    </div>\r\n                                </form>\r\n                                    </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                            <button type=\"button\" value={key} id={count} onClick={deleteProject} className=\"btn btn-primary\">Sim</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>    \r\n\r\n                    </div>\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproject',\r\n            })\r\n        }\r\n        \r\n        return( \r\n        <div >\r\n            <div className='title' id='title'>\r\n                \r\n                <input type='tex' onChange={searchProject} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Nome do Projecto</div>\r\n                <div className='report-header'>Tipo de Actividade</div>\r\n                <div className='report-header'>Actualizar</div>\r\n                <div className='report-header'>Apagar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n    return buildTable()\r\n}\r\n\r\nexport default Projects","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProducts.jsx",["243","244"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {set,ref,get,child,update} from 'firebase/database'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction UpdateProduct(){\r\n\r\n    const [product, setProduct] = useState({\r\n        Area: '',\r\n        LatKey: '',\r\n        Name: '',\r\n        ProjectKey: '',\r\n        Status: 'Não Iniciado',\r\n        Key: ''\r\n    })\r\n\r\n    const [nodeKey, setNodeKey] = useState('')\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `Product`)).then((snapshot) => {\r\n            if (snapshot.exists())\r\n                for (let key in snapshot.val())\r\n                    if (document.URL.split('=')[1] === key){\r\n                        setProduct(snapshot.val()[key])\r\n                        setNodeKey(key)\r\n                    }\r\n        })},[])\r\n\r\n    function setProductName(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function setStatus(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: e.target.value,\r\n            Key: product.Key\r\n        })\r\n    }   \r\n\r\n    function setArea(e){\r\n        setProduct({\r\n            Area: e.target.value,\r\n            LatKey: product.LatKey,\r\n            Name: product.Name,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function updateProduct (e){\r\n        const dbRef = ref(db)\r\n\r\n        update(child(dbRef, `Product/${nodeKey}`),product).then(() => {\r\n            alert('Producto Actualizado com Sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao actualizar o Producto')\r\n        })\r\n        window.history.back()\r\n        document.getElementById('closemodal').click()\r\n    }\r\n\r\n    function back(){\r\n        window.history.back()\r\n    }\r\n\r\n    function setLATs(){\r\n\r\n        let a = []\r\n\r\n        if (product.Area === 'Urbanização e Regeneração Urbana'){\r\n            a.push(<option selected value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }\r\n        if (product.Area === 'Recursos Hídricos e Resiliência'){\r\n            a.push(<option selected value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Ambiente e Resíduos Sólidos'){\r\n            a.push(<option selected value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Educação Primária e Pré-Escolar'){\r\n            a.push(<option selected value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Sustentabilidade'){\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n        }\r\n\r\n        return a\r\n    }\r\n\r\n    function setStates(){\r\n\r\n        let a = []\r\n\r\n        if (product.Status === 'Não Iniciado' ){\r\n            a.push(<option selected value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        } else if (product.Status === 'Em progresso'){\r\n            a.push(<option selected value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        }else if ( product.Status === 'Cancelado'){\r\n            a.push(<option selected value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option  value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        }else if (product.Status === 'Concluido'){\r\n            a.push(<option selected value=\"Concluido\">Concluido</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n        }\r\n        return a\r\n    }\r\n    \r\n    return (    \r\n        <div className='form-container'>\r\n              <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Actualizar Producto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\r\n                <input type=\"text\" value={product.Name} onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">LAT</label>\r\n                <select className=\"form-select\" onChange={setArea} aria-label=\"Default select example\">\r\n                    {setLATs()}\r\n                </select>\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\r\n                    {setStates()}\r\n                </select>\r\n            </div>\r\n        \r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Actualizar   </button>\r\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Actualizar Producto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" onClick={updateProduct} className=\"btn btn-primary\">Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx",["245","246","247","248","249","250","251"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ActivityPDF from '../ReportsPDF/ActivityPDF'\r\n\r\nfunction Reports(){\r\n\r\n    const [macroActivities, setmacroActivities ] = useState({mcs: []})\r\n    const [activities, setActivities ] = useState({acts: []})\r\n    const [activitiesCount, setActivitiesCount] = useState({})\r\n    const [mActivities, setMActivities] = useState({})\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setmacroActivities({mcs: snapshot.val()})\r\n                    }\r\n                    else\r\n                        alert('no data to load from db server')\r\n            }).catch(()=>{\r\n                alert('Verifique a conexão com a internet')\r\n            })\r\n\r\n            get(child(dbRef, 'Activity')).then( snapshot => {\r\n\r\n                if (snapshot.exists()){\r\n                    setActivities({acts: snapshot.val()})\r\n                }\r\n                console.log(activities)\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function getActivities(mcs){\r\n\r\n        let a = []\r\n        let count = 0\r\n        for (let index in activities.acts){\r\n            if (mcs.Key === activities.acts[index].MacroActivityKey){\r\n                a.push(activities.acts[index])\r\n            }\r\n        }\r\n        \r\n        console.log(a)\r\n\r\n        return a\r\n    }\r\n\r\n    function handleButtonEvent(){\r\n\r\n    }\r\n\r\n    function generatePDF(e){\r\n        \r\n        const key = e.target.id.split('.')[1]\r\n        \r\n        const macroAct = macroActivities.mcs[key]\r\n        \r\n        const acts = getActivities(macroAct)\r\n\r\n        ActivityPDF(acts, macroAct)\r\n\r\n    }\r\n\r\n    function getRows(){\r\n        let values = []\r\n        let index = 0\r\n        let count = 0\r\n\r\n        for(let key in macroActivities.mcs){\r\n                values.push(                 \r\n                 <div> \r\n                    <button onClick={handleButtonEvent}\r\n                                style={{background: 'transparent',\r\n                                    border: 'none',\r\n                                    width: '100%',\r\n                                    outline: 'none',\r\n                                }}>\r\n\r\n                        <div className='rows-report' id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                            <div className='colmns-report'>\r\n                                <ul id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {++index}\r\n                                    </li>\r\n                                \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {macroActivities.mcs[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`}>\r\n                                        <i id={`${count++}.${key}`} className=\"bi bi-file-earmark-arrow-down\" style={{color: 'blue', fontSize: '1.2rem'}}\r\n                                            onClick={generatePDF}\r\n                                        />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </div>)\r\n             }\r\n        return values    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-container'>\r\n                <div className='title' id='title'>\r\n                    <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                </div>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nr</div>\r\n                    <div className='report-header'>Macro Actividade</div>\r\n                    <div className='report-header'>Baixar Relatorio</div>\r\n                </div>\r\n                {\r\n                    getRows()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx",["252"],"import React from 'react'\r\nimport './AddProject.css'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { ref,set } from \"firebase/database\"\r\nimport { useState } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction AddProjectForm(){\r\n    \r\n    const [project, setProject] = useState({     \r\n            ProjectName: '',\r\n            DeadLine: '',\r\n            GeneralObjective: '',\r\n            Key: uuidv4(),\r\n            OperatorName: '',\r\n            PeopleInvolved: '',\r\n            Result: '',\r\n            SpecificObjective: '',\r\n            TypeOfActivity: '',\r\n            Implementadores: '',\r\n            Parceiros: '',\r\n            Financiadores: ''\r\n\r\n    })\r\n\r\n    function setProjectName(e){\r\n        setProject({\r\n                    ProjectName: e.target.value,\r\n                    DeadLine: project.DeadLine,\r\n                    GeneralObjective: project.GeneralObjective,\r\n                    Key: project.Key,\r\n                    OperatorName: project.OperatorName,\r\n                    PeopleInvolved: project.PeopleInvolved,\r\n                    Result: project.Result,\r\n                    SpecificObjective: project.SpecificObjective,\r\n                    TypeOfActivity: project.TypeOfActivity,\r\n                    Implementadores: project.Implementadores,\r\n                    Parceiros: project.Parceiros,\r\n                    Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: e.target.value,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setResult(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: e.target.value,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    function setOperatorName(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setTypeOfActivity(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: e.target.value,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setSpecificObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: e.target.value,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setPeopleInvolved(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: e.target.value,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    \r\n    function setDeadLine(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: e.target.value,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setImplementadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: e.target.value,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setParceiros(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: e.target.value,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setFinanciadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: e.target.value\r\n        })\r\n    }\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function submitProject(e){\r\n\r\n        set(ref(db, 'Project/' + uuidv4()), project).then(() => {\r\n            alert('Projecto adicionado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao adicionar o Projecto')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='form-container'>\r\n\r\n            <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Adicionar Projecto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Projecto</label>\r\n                <input type=\"text\" onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">DeadLine</label>\r\n                <input type=\"date\" onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Objecto do projecto</label>\r\n                <input type=\"text\" onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Resultado</label>\r\n                <input type=\"text\" onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do operador</label>\r\n                <input type=\"text\" onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Tipo de actividade</label>\r\n                <input type=\"text\" onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\r\n                <input type=\"text\" onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n\r\n{/*\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Pessoal Envolvolvido</label>\r\n                <input type=\"text\" onChange={setPeopleInvolved} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n                    */}\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Implementadores</label>\r\n                <input type=\"text\" onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n          \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Parceiros</label>\r\n                <input type=\"text\" onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Financiadores</label>\r\n                <input type=\"text\" onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Gravar Projecto         </button>\r\n            <button type=\"button\" className=\"btn btn-secondary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Submeter Projecto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={submitProject}>Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectForm","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateActivity.jsx",["253"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set,child,get,update} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { useEffect } from 'react'\r\n\r\nfunction UpdateActivity(){\r\n\r\n    const [activity, setActivity] = useState({\r\n        Key: uuidv4(),\r\n        Id: uuidv4(),\r\n        MacroActivityKey: document.URL.split('=')[1],\r\n        Name: '',\r\n        Boys: '',\r\n        Comments: '',\r\n        DeadLine: '',\r\n        Description: '',\r\n        Duration: '',\r\n        Girls: '',\r\n        Heterogenity:'Sim',\r\n        Location: '',\r\n        Men: '',\r\n        NextSteps: '',\r\n        StartTime: '',\r\n        Time: '',\r\n        Total: '',\r\n        Waited: 'Sim',\r\n        Women: '',\r\n        User: ''\r\n    })\r\n\r\n    \r\n    useEffect (() => {\r\n\r\n        const dbRef = ref(db)\r\n\r\n        get(child(dbRef,`Activity/${document.URL.split('=')[1]}`)).then( (snapshot => {\r\n            setActivity(snapshot.val())\r\n        }))\r\n\r\n    },[])\r\n\r\n    function UpdateActivity(e){\r\n\r\n        activity.Total = parseInt(activity.Men) + parseInt(activity.Boys) + parseInt(activity.Women) + parseInt(activity.Girls)\r\n\r\n        update(ref(db, `Activity/${document.URL.split('=')[1]}`), activity).then(()=>\r\n            {\r\n                alert('Actividade actualizada com Sucesso')\r\n            }\r\n        )\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n    function setName(e){\r\n\r\n        setActivity({\r\n            Name: e.target.value,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setDescription(e){\r\n\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: e.target.value,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setLugar(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: e.target.value,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: e.target.value,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setStartTime(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: e.target.value,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setFinalDate(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: e.target.value,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setTime(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: e.target.value,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setDuration(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: e.target.value,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: e.target.value,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setMen(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: e.target.value,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: e.target.value,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setWoman(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: e.target.value,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: e.target.value,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setBoys(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: e.target.value,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setGirls(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: e.target.value,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setComments(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: e.target.value,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setEsperado(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: e.target.value,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setEterogenidade(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: e.target.value,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User\r\n        })\r\n    }\r\n\r\n    function setFile(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: activity.NextSteps,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User,\r\n        })\r\n    }\r\n\r\n    function setNextSteps(e){\r\n        setActivity({\r\n            Name: activity.Name,\r\n            Boys: activity.Boys,\r\n            Comments: activity.Comments,\r\n            DeadLine: activity.DeadLine,\r\n            Description: activity.Description,\r\n            Duration: activity.Duration,\r\n            Girls: activity.Girls,\r\n            Heterogenity: activity.Heterogenity,\r\n            Id: activity.Id,\r\n            Key: activity.Key,\r\n            Location: activity.Location,\r\n            MacroActivityKey: activity.MacroActivityKey,\r\n            Men: activity.Men,\r\n            NextSteps: e.target.value,\r\n            StartTime: activity.StartTime,\r\n            Time: activity.Time,\r\n            Total: activity.Total,\r\n            Waited: activity.Waited,\r\n            Women: activity.Women,\r\n            User: activity.User,\r\n        })\r\n    }\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n        \r\n    return (\r\n        <div className='form-container'>\r\n                 <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Actualizar Actividade\r\n                </div>\r\n            </div>\r\n      \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome da actividade</label>\r\n            <input type=\"text\" value={activity.Name} onChange= {setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Breve descrição da actividade</label>\r\n            <input type=\"text\"  value={activity.Description} onChange={setDescription} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Lugar</label>\r\n            <input type=\"text\" value={activity.Location} onChange={setLugar} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Data de Inicio</label>\r\n            <input type=\"date\"  value={activity.StartTime} onChange={setStartTime}className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Data final</label>\r\n            <input type=\"date\" value={activity.DeadLine} onChange={setFinalDate}className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Hora</label>\r\n            <input type=\"time\" value={activity.Time} onChange={setTime} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Duração</label>\r\n            <input type=\"text\"  value={activity.Duration} onChange={setDuration} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Homens</label>\r\n            <input type=\"text\" value={activity.Men} onChange={setMen} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Mulheres</label>\r\n            <input type=\"text\"  value={activity.Women} onChange={setWoman} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Meninos</label>\r\n            <input type=\"text\"  value={activity.Boys} onChange={setBoys} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Meninas</label>\r\n            <input type=\"text\" value={activity.Girls} onChange={setGirls} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Comentarios</label>\r\n            <input type=\"text\"  value={activity.Comments} onChange={setComments}className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Proximos Passos</label>\r\n            <input type=\"text\"  value={activity.NextSteps} onChange={setNextSteps}className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Esperado</label>\r\n            <select className=\"form-select\" aria-label=\"Default select example\" onChange={setEsperado}>\r\n                <option selected value=\"Sim\">Sim</option>\r\n                <option value=\"Não\">Não</option>\r\n            </select>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Eterogenidade</label>\r\n            <select className=\"form-select\" onChange={setEterogenidade} aria-label=\"Default select example\" >\r\n                <option selected value=\"Sim\">Sim</option>\r\n                <option value=\"Não\">Não</option>\r\n            </select>\r\n        </div>\r\n     \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Carregar ficheiro</label>\r\n            <input type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Actualizar Actividade  </button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Actializar Actividade ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={UpdateActivity}> Sim </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UpdateActivity","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateMacroActivity.jsx",["254","255"],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set,child,update,get} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\n\r\nfunction UpdateMacroActivity(){\r\n\r\n    const [macroActivity, setMacroActivity] = useState({\r\n        Key: uuidv4(),\r\n        Name: '',\r\n        ProductKey: document.URL.split('=')[1]\r\n    })\r\n    const dbRef = ref(db)\r\n\r\n    useEffect( () => {\r\n\r\n        get(child(dbRef, `MacroActivity/${document.URL.split('=')[1]}`)).then((snapshot) => {\r\n\r\n            setMacroActivity(snapshot.val())\r\n\r\n        })\r\n\r\n    },[])\r\n\r\n    function setName(e){\r\n        setMacroActivity({\r\n            Key: macroActivity.Key,\r\n            Name: e.target.value,\r\n            ProductKey: macroActivity.ProductKey\r\n        })\r\n    }\r\n    \r\n    function updateMacroAcivity(e){\r\n\r\n\r\n        update(child(dbRef, `MacroActivity/${document.URL.split('=')[1]}`), macroActivity).then(() => {\r\n            alert('Macro Actividade Actualizada com sucesso ')\r\n        }).catch(() => {\r\n            alert('Erro ao actualizar a Macro Actividade ')\r\n        })\r\n        back()\r\n        document.getElementById('closemodal').click()\r\n    }\r\n\r\n    function clear(e){\r\n        document.getElementById('mcs').value = ''\r\n        setMacroActivity({\r\n            Key: macroActivity.Key,\r\n            Name: '',\r\n            ProductKey: macroActivity.ProductKey\r\n        })\r\n    }\r\n\r\n    function back(){\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <div className='form-container'>\r\n              <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Adicionar Macro Actividade\r\n                </div>\r\n            </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome da Macro Actividade</label>\r\n            <input type=\"text\" id='mcs' value={macroActivity.Name}  onChange={setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Actualizar</button>\r\n        <button type=\"button\" className=\"btn btn-light\" onClick={clear}>Limpar</button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Actualizar Macro Actividade ?</label>\r\n                </div>\r\n            </form>\r\n                </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={updateMacroAcivity} >Sim</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    </div>\r\n    )\r\n}\r\nexport default UpdateMacroActivity","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProject.jsx",["256","257"],"import React, { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { ref,set,get,update,child } from \"firebase/database\"\r\nimport { useState } from 'react'\r\n\r\nfunction UpdateProject(){\r\n    \r\n    const [project, setProject] = useState({     \r\n            ProjectName: '',\r\n            DeadLine: '',\r\n            GeneralObjective: '',\r\n            Key: '  ',\r\n            OperatorName: '',\r\n            PeopleInvolved: '',\r\n            Result: '',\r\n            SpecificObjective: '',\r\n            TypeOfActivity: '',\r\n            Implementadores: ' ',\r\n            Parceiros: ' ',\r\n            Financiadores: ' '\r\n    })\r\n\r\n    function setProjectName(e){\r\n        setProject({\r\n                    ProjectName: e.target.value,\r\n                    DeadLine: project.DeadLine,\r\n                    GeneralObjective: project.GeneralObjective,\r\n                    Key: project.Key,\r\n                    OperatorName: project.OperatorName,\r\n                    PeopleInvolved: project.PeopleInvolved,\r\n                    Result: project.Result,\r\n                    SpecificObjective: project.SpecificObjective,\r\n                    TypeOfActivity: project.TypeOfActivity,\r\n                    Implementadores: project.Implementadores,\r\n                    Parceiros: project.Parceiros,\r\n                    Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: e.target.value,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setResult(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: e.target.value,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    function setOperatorName(e){\r\n        setProject(\r\n        {\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setTypeOfActivity(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: e.target.value,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setSpecificObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: e.target.value,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setDeadLine(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: e.target.value,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setImplementadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: e.target.value,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setParceiros(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: e.target.value,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setFinanciadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: e.target.value\r\n        })\r\n    }\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function updateProject(e){\r\n\r\n\r\n        update(ref(db, `Project/${e.target.value}` ), project).then(() => {\r\n            alert('Projecto Actualizado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao Actualizado com sucesso')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n    useEffect( () => {\r\n            const dbRef = ref(db)\r\n            \r\n            get(child(dbRef, `Project`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        for (let key in snapshot.val()){\r\n                            if ( key === document.URL.split('=')[1]){\r\n                                setProject(snapshot.val()[key])\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                setKey()\r\n            }\r\n        ,[])\r\n\r\n    function setKey(){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='form-container'>\r\n\r\n        <div className='title'> \r\n            <div className='back-icon'>\r\n                <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                marginRight: '20px'\r\n                    }} onClick={back}/>\r\n            </div>\r\n            <div className='form-title'>\r\n                Actualizar Projecto\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome do Projecto</label>\r\n            <input type=\"text\" value={project.ProjectName} id='projectName'onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">DeadLine</label>\r\n            <input type=\"date\" id='deadLine' value={project.DeadLine} onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Objecto do projecto</label>\r\n            <input type=\"text\" id='projectObjective' value={project.GeneralObjective} onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Resultado</label>\r\n            <input type=\"text\" id='results' value={project.Result} onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome do operador</label>\r\n            <input type=\"text\" id='operatorName' value={project.OperatorName} onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Tipo de actividade</label>\r\n            <input type=\"text\" id='typeOfActivity' value={project.TypeOfActivity} onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\r\n            <input type=\"text\" id='specificObjective' value={project.SpecificObjective} onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Implementadores</label>\r\n            <input type=\"text\" id='implementadores' value={project.Implementadores} onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n      \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Parceiros</label>\r\n            <input type=\"text\" id='parceiros' value={project.Parceiros} onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Financiadores</label>\r\n            <input type=\"text\" id='finaciadores' value={project.Financiadores} onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n            Actualizar Projecto         </button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Actualizar Projecto ?</label>\r\n                </div>\r\n            </form>\r\n                </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                        <button type=\"button\" value={document.URL.split('=')[1]}className=\"btn btn-primary\" onClick={updateProject}>Sim</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProject","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx",["258","259","260","261"],"import React from 'react'\r\nimport './AddNewsLetter.css'\r\nimport {useState} from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {Storage} from '../database/Storage'\r\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\r\n\r\nfunction AddNewsLetter(){\r\n    const [newsLetter, setNewsLetter] = useState({\r\n        Key: uuidv4(),\r\n        Title: '',\r\n        Body: '',\r\n        File: null \r\n    })\r\n\r\n    const [formElements, setFormElements ] = useState([\r\n        {Title:  '', Body: '', File: null },\r\n    ])\r\n    \r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function saveNewsLetter(e){\r\n        \r\n        const key = uuidv4()\r\n        let count = 0\r\n\r\n        console.log(formElements)\r\n        \r\n        for (let index in formElements){\r\n            if (formElements[index].File !== null)\r\n                uploadBytes( refStorage(Storage,`Newsletter/${key}/${uuidv4()}`),formElements[index].File)\r\n        }\r\n\r\n        set(ref(db, 'NewsLetter/' + key), formElements).then(\r\n            ()=> {\r\n                alert('Newsletter adicionado com sucesso')\r\n            }\r\n        )\r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    const  handleFormChange = (event, index) => {\r\n        const data = [...formElements]\r\n\r\n        console.log(event.target)\r\n\r\n        if (event.target.name === 'File'){\r\n            data[index][event.target.name] = event.target.files[0]\r\n        }\r\n        else{\r\n            data[index][event.target.name] = event.target.value\r\n        }\r\n        setFormElements(data)\r\n        console.log(data)\r\n\r\n    }\r\n\r\n    const removeField = (element) => {\r\n        let data = [...formElements]\r\n        const index = element.target.id\r\n\r\n        data.splice(index,1)\r\n\r\n        setFormElements(data)\r\n    }\r\n\r\n    function addField(e){\r\n        let element =  {Title: '', Body: '', Imagem: null}\r\n        setFormElements([...formElements,element])\r\n    }\r\n\r\n    function setFile(e){\r\n\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className='title-newsletter'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='newsletter-title' style={{fontSize: '1.1rem', fontWeight: '400'}}>\r\n                    Adicionar NewsLetter\r\n                </div>\r\n            </div>\r\n            <div id='newsletter-content'>\r\n                <form>\r\n                    {formElements.map((element, index) => {\r\n                       return ( <div key={index} style={{border: 'solid #ccc 0.1px', marginBottom: '10px'}}>\r\n            \r\n                            <div className=\"form-group\" style={{display: 'flex', flexDirection: 'column'}}>\r\n\r\n                                  <button type=\"button\" id={index} onClick={removeField} style={{width: '10%', marginBottom: '15px', marginLeft: '90%'}}className=\"btn btn-outline-secondary\">\r\n                                        Apagar \r\n                                  </button>\r\n                                <p>\r\n                                     <label for=\"exampleFormControlInput1\">Title</label>\r\n                                </p>\r\n                               \r\n                                <input type=\"text\" name='Title' onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title do Newsletter\"/>\r\n                      \r\n                            </div>\r\n                            <div className=\"form-group\" style={{'margin-top': '20px'}}>\r\n                                <label for=\"exampleFormControlTextarea1\" style={{'font-weight': '400'}}>Body</label>\r\n                                <textarea type=\"text\" name='Body' className=\"form-control\" onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\" placeholder='Body do Newsletter'/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Carregar Fotografia</label>\r\n                                <input name='File' type=\"file\" accept='image/*' onChange={event => handleFormChange(event, index)} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                        </div> )         \r\n                    })}\r\n                \r\n                    <div className='buttons-container' style={{'margin-top': '20px'}}>\r\n                        <button type=\"button\"  className=\"btn btn-secondary\" onClick={addField}>\r\n                            Adicionar Campo \r\n                        </button>\r\n            \r\n                        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                            Gravar Newsletter \r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-secundary\">Descartar</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                               <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Submeter Newsletter ?</label>\r\n                            </div>\r\n                        </form>\r\n                            </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                    <button type=\"button\" onClick={saveNewsLetter} className=\"btn btn-primary\">Sim</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx",["262","263"],"import {useState} from 'react'\r\nimport React from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set,get,child} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\n\r\nfunction back(e){\r\n    window.history.back()\r\n}\r\n\r\nfunction AddUser(){\r\n\r\n    const [user, setUser] = useState({\r\n        Role: 'Operacional',\r\n        Username: '',\r\n        Password: '',\r\n        Area: 'Urbanização e Regeneração Urbana',\r\n        ProjectKey: null,\r\n        LATKey: null\r\n    })\r\n    const [projects, setProjects] = useState([])\r\n    \r\n    const dbRef = ref(db)\r\n\r\n    function getProject(){\r\n\r\n        get(child(dbRef, 'Project')).then(snapshot => {\r\n\r\n            if (snapshot.exists()){\r\n                setProjects(snapshot.val())\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    function setUsername(e){\r\n\r\n        setUser({\r\n            Username: e.target.value,\r\n            Password: user.Password,\r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setPassword(e){\r\n        setUser({\r\n            Password: e.target.value,\r\n            Username: user.Username, \r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setRole(e){\r\n        setUser({\r\n            Username: user.Username,\r\n            Password: user.Password, \r\n            Role: e.target.value,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function setArea(e){\r\n        setUser({\r\n                Username: user.Username,\r\n                Password: user.Password, \r\n                Role: user.Role,\r\n                Area: e.target.value\r\n            })\r\n     }\r\n    function addUser(e){\r\n        console.log(user)\r\n        set(ref(db, 'User/' + uuidv4()), user).then(() => {\r\n            alert('Usuario gravado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao gravar usuario')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n        <div className='title'> \r\n          <div className='back-icon'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                              marginRight: '20px'\r\n                  }} onClick={back}/>\r\n          </div>\r\n          <div className='form-title'>\r\n              Adicionar Usuario\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Username</label>\r\n          <input type=\"text\" onChange={setUsername} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Password</label>\r\n          <input type=\"text\" onChange={setPassword} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Tipo de Usuario</label>\r\n          <select className=\"form-select\"  onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Operacional</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Tatico</option>\r\n          </select>\r\n      </div>\r\n  \r\n      \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Area</label>\r\n          <select className=\"form-select\"  onChange={setArea} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Urbanização e Regeneração Urbana</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n              <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n              <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n              <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n           </select>\r\n      </div>\r\n\r\n      <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Gravar Usuario   </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          <form>\r\n              <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Submeter  Usuario ?</label>\r\n              </div>\r\n          </form>\r\n              </div>\r\n                  <div className=\"modal-footer\">\r\n                      <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                      <button type=\"button\" onClick={addUser} className=\"btn btn-primary\">Sim</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>    \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx",["264","265","266","267"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, getDatabase, ref, remove,update } from \"firebase/database\"\r\nimport '../TaskRow.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction MacroActivity(){\r\n    \r\n    const [macroActivities, setMacroActivities] = useState({mcs: []})\r\n    const [keys, setKeys ] = useState()\r\n    const history = useHistory()\r\n    const dbRef = ref(db)\r\n\r\n    \r\n    function getMCS(){\r\n        get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n            if (snapshot.exists()){\r\n                const mcs = snapshot.val()\r\n                let macroA = []\r\n                let macAkeys = []\r\n                for(let key in mcs){\r\n                    if (mcs[key].ProductKey === document.URL.split('=')[1])\r\n                    macroA.push(mcs[key])\r\n                    macAkeys.push(key)\r\n                }\r\n                setMacroActivities(macroA)\r\n                setKeys(macAkeys)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        getMCS()       \r\n    },[])\r\n\r\n    function deleteMacroActivity(e){\r\n        remove(ref(db, `MacroActivity/${e.target.value}`)).then(()=> {\r\n            alert('Macro Actividade Apagada com Sucesso ')\r\n            getMCS()\r\n        }).catch(() => {\r\n            alert('Erro ao eliminar Macro Actividade')\r\n        })\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click() \r\n\r\n    }\r\n\r\n    \r\n    function searchMcs(e){\r\n        \r\n        let a = []\r\n        if (e.target.value === ''){\r\n            getMCS()\r\n        }\r\n        else{\r\n            a = macroActivities.filter(element => element.Name.includes(e.target.value))  \r\n            setMacroActivities(a)\r\n\r\n        }\r\n    }\r\n   function handleButtonEvent(e){\r\n      \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        history.push({\r\n            pathname: '/activities',\r\n            search: `?key=${key[1]}`,\r\n        })    \r\n\r\n    }\r\n\r\n    function updateMacroActivities(e){\r\n\r\n        history.push({\r\n            pathname: '/updatemacroactivity',\r\n            search: `?key=${e.target.id.split('.')[2]}`,\r\n        })\r\n    \r\n    }\r\n\r\n    function buildTableforMcs(){\r\n    \r\n        var values = []\r\n        let count = 0\r\n        if (macroActivities !== null ){\r\n            for(let data in macroActivities){\r\n                values.push( \r\n                    <div>\r\n                        <button               \r\n                            style={{background: 'transparent',\r\n                                border: 'none',\r\n                                width: '100%',\r\n                                outline: 'none',\r\n                            }}\r\n                            >\r\n                            <div className='rows-report' id={`${count++}.${macroActivities[data].Key}`}>\r\n                                <div className='colmns-report'>\r\n                                    <ul>\r\n                                        <li id={`${count++}.${macroActivities[data].Key}`} onClick={handleButtonEvent}>\r\n                                            {macroActivities[data].Name}\r\n                                        </li>\r\n                                        <li id={`${count++}.${data}`}>\r\n                                            <i className=\"bi bi-pencil\" id={`update.${count++}.${macroActivities[data].Key}`} onClick={updateMacroActivities}/>\r\n                                        </li>\r\n                                        <li id={`delete.${count}.${data}`} >\r\n                                            <i className=\"bi bi-trash\"   data-toggle=\"modal\" data-target={`#exampleModal${count}` }/>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                <div className=\"modal-dialog\" role=\"document\">\r\n                                    <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                        <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <div className=\"form-group\" >\r\n                                            <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Macro Acrividade ?</label>\r\n                                        </div>\r\n                                    </form>\r\n                                        </div>\r\n                                            <div className=\"modal-footer\">\r\n                                                <button type=\"button\" id={`closemodal${data}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                                <button type=\"button\" id={data} value= {macroActivities[data].Key} onClick={deleteMacroActivity} className=\"btn btn-primary\">Sim</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                    </button>\r\n                </div>)\r\n            }\r\n            \r\n        }\r\n\r\n        function add(){\r\n            history.push({\r\n                pathname: '/addmacroactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back()\r\n        {\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' onChange={searchMcs} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nome da Macro Actividade</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                </div>\r\n                    {values}\r\n            </div>\r\n        </div>        \r\n        )\r\n    }\r\n    return buildTableforMcs()\r\n}\r\n\r\nexport default MacroActivity","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx",["268"],"import React from 'react'\r\nimport './AddProducts.css'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {set,ref,get,child} from 'firebase/database'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction AddProducts(){\r\n\r\n    const [product, setProduct] = useState({\r\n        Area: 'Urbanização e Regeneração Urbana',\r\n        LatKey: '',\r\n        Name: '',\r\n        ProjectKey: document.URL.split('=')[1],\r\n        Status: 'Não Iniciado',\r\n        Key: uuidv4()\r\n    })\r\n\r\n    const [lat, setLats] = useState({})\r\n    \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `LAT`)).then((snapshot) => {\r\n                if (snapshot.exists()){\r\n                    setLats({lats: snapshot.val()})\r\n                }\r\n             }\r\n        )},\r\n    [])\r\n    \r\n    function setProductName(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function setStatus(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: e.target.value,\r\n            Key: product.Key\r\n        })\r\n    }   \r\n\r\n    function setArea(e){\r\n\r\n        setProduct({\r\n            Area: e.target.value,\r\n            LatKey: product.LatKey,\r\n            Name: product.Name,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function saveProduct (e){\r\n\r\n        \r\n        console.log(lat)\r\n\r\n        for (let key in lat.lats){\r\n            console.log(lat.lats[key].Description === product.Area)\r\n\r\n            if (lat.lats[key].Description === product.Area ){\r\n \r\n                console.log(lat.lats[key].Key)\r\n                setProduct({\r\n                    Area: product.Area,\r\n                    LatKey: lat.lats[key].Key,\r\n                    Name: product.Name,\r\n                    ProjectKey: product.ProjectKey,\r\n                    Status: product.Status,\r\n                    Key: product.Key\r\n                })        \r\n                break\r\n            }\r\n        }\r\n        \r\n        const id = uuidv4()\r\n\r\n        set(ref(db, 'Product/' + uuidv4()), product).then(() => {\r\n            alert('Producto adicionado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao adicionar o Product')\r\n        })\r\n\r\n        document.getElementById(`closemodal`).click()\r\n        back()\r\n    }\r\n\r\n    function back(){\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n              <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Adicionar Producto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\r\n                <input type=\"text\" onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">LAT</label>\r\n                <select className=\"form-select\" onChange={setArea} aria-label=\"Default select example\">\r\n                    <option selected value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>\r\n                    <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n                    <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n                    <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n                    <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n                </select>\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\r\n                    <option selected value=\"Não Iniciado\">Não Iniciado</option>\r\n                    <option value=\"Em progresso\">Em progresso</option>\r\n                    <option value=\"Cancelado\">Cancelado</option>\r\n                    <option value=\"Concluido\">Concluido</option>\r\n                </select>\r\n            </div>\r\n        \r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Gravar Producto   </button>\r\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Submeter Producto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" onClick={saveProduct} className=\"btn btn-primary\">Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default AddProducts","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx",["269","270","271"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx",["272"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref, remove } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Product (){\r\n   const [products, setProducts] = useState({products:  []}) \r\n   const history = useHistory()\r\n   const dbRef = ref(db)\r\n   const [project, setProject] = useState()\r\n   const projKey = document.URL.split('=')[1]\r\n\r\n   function getProduct(){\r\n\r\n        get(child(dbRef, `Product`)).then((snapshot) => {\r\n            let a = []\r\n            if (snapshot.exists()){\r\n                for(let latKey in snapshot.val()){\r\n                    if (snapshot.val()[latKey].ProjectKey === projKey){\r\n                        a.push(\r\n                            snapshot.val()[latKey]\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n            a = sortByArea(a)\r\n            setProducts(a)\r\n        })\r\n    }\r\n\r\n   \r\n    useEffect( () => {\r\n        getProject()\r\n        getProduct()\r\n\r\n    },[])\r\n\r\n    function sortByArea(a){\r\n        a.sort((a,b) => {\r\n            let fa = a.Area,\r\n            fb = b.Area\r\n\r\n            if (fa < fb) {\r\n                return -1;\r\n            }\r\n            if (fa > fb) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n        return a\r\n    }\r\n\r\n    function getProject (){\r\n            get(child(dbRef, `Project/${projKey}`)).then((snapshot) => {\r\n            if (snapshot.exists())\r\n                setProject(snapshot.val())\r\n        })\r\n        return project\r\n    }\r\n\r\n    function gotoMcs(e){\r\n       \r\n        history.push({\r\n            pathname: '/macroactivities',\r\n            search: `?key=${e.target.id.split('.')[1]}`,\r\n        })\r\n   \r\n    }\r\n\r\n    function searchProduct(e){\r\n        \r\n        let a = []\r\n        if (e.target.value === ''){\r\n            getProduct()\r\n        }\r\n        else{\r\n            a = products.filter(element => element.Name.includes(e.target.value))  \r\n            setProducts(a)\r\n        }\r\n    }\r\n\r\n    function updateProduct(e){\r\n\r\n        history.push({\r\n            pathname: '/updateproduct',\r\n            search: `?key=${e.target.id.split('.')[2]}`,\r\n        })\r\n    }\r\n    function deleteProduct(e){\r\n\r\n        document.getElementById(`${e.target.id}`).click()\r\n\r\n        remove(ref(db, `Product/${e.target.value}`)).then(() => {\r\n            alert('Producto removido com sucesso')\r\n            const dbRef = ref(db)\r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProducts({projects: snapshot.val()})\r\n        })\r\n        }).catch(() => {\r\n            alert('Erro ao apagar producto')\r\n\r\n        })\r\n\r\n    }\r\n    \r\n    function buildTable(){\r\n        \r\n        var values = []\r\n        let count = 0\r\n\r\n        if (products !== null ){\r\n            for(let key in products){\r\n               values.push(\r\n                <button \r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${products[key].Key}`} >\r\n                        <div className='colmns-report'>\r\n                        <ul id={`${count++}.${products[key].Key}`} >\r\n                            <li id={`${count++}.${products[key].Key}`} >\r\n                                {products[key].Area}\r\n                            </li>\r\n                            <li id={`${count++}.${products[key].Key}`} onClick={gotoMcs}>\r\n                                {products[key].Name}\r\n                            </li>\r\n                            <li id={`${count++}.${products[key].Key}`}>\r\n                                {products[key].Status}\r\n                            </li>\r\n                            <li id={`${count++}.${key}`} onClick={updateProduct}>\r\n                                  <i className=\"bi bi-pencil\" id={`update.${count++}.${key}`}/>\r\n                            </li>\r\n                            <li id={`delete.${count}.${products[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`}>\r\n                                 <i className=\"bi bi-trash\" />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\" >\r\n                                    <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Producto ?</label>\r\n                                </div>\r\n                            </form>\r\n                                </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" id={`${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                        <button type=\"button\" value ={key} id={count} onClick={deleteProduct} className=\"btn btn-primary\">Sim</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                </button>\r\n            )\r\n            }\r\n        }\r\n\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproducts',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div className='product-container'\r\n        >\r\n            <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" onChange={searchProduct} id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"/>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Area</div>\r\n                    <div className='report-header'>Nome do Producto</div>\r\n                    <div className='report-header'>Estado</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                </div>\r\n                {values}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Product","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Newsletter\\NewsletterHome.jsx",["273","274","275","276","277","278","279","280","281"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref,remove,update, } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction NewsLetterHome (){\r\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'Newsletter/')\r\n    const history = useHistory()\r\n  \r\n      useEffect( () => {\r\n         const dbRef = ref(db)\r\n           listAll(listOfImages).then((response) => {\r\n            let urls = []\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                urls.push(url)\r\n                setImageList(urls)\r\n            }))\r\n         })\r\n\r\n             get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                     if (snapshot.exists())\r\n                         setnewsLetter(snapshot.val())\r\n                     else\r\n                         alert('Sem newsletter para mostrar')\r\n             })\r\n         }\r\n     ,[])\r\n \r\n     function seeMore(e){\r\n\r\n        history.push({\r\n            pathname: '/readnewsletter',\r\n            search: `?key=${e.target.id.split('.')[1]}`\r\n        })\r\n     }\r\n\r\n     function deleteNewsLetter(e){\r\n\r\n        remove(ref(db, `NewsLetter/${e.target.value}`)).then(() => {\r\n            alert('Newsletter apagado com sucesso')\r\n          \r\n            const dbRef = ref(db)\r\n\r\n            get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setnewsLetter({newsLetters: snapshot.val()})\r\n                else\r\n                    alert('Sem newsletter para mostrar')\r\n        })\r\n        }).catch(() => {\r\n            alert('Erro ao apagar a Newsletter')\r\n        })\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click()\r\n     }\r\n \r\n     function buildTable(){\r\n\r\n         var values  = []     \r\n         let count = 0\r\n         let index = 0\r\n \r\n         if (newsLetter !== null ){\r\n             for(let key in newsLetter){\r\n                for (let innerKey in newsLetter[key]){\r\n                    values.push(\r\n                        <button   style={{background: 'transparent',\r\n                                        border: 'none',\r\n                                        width: '100%',\r\n                                        outline: 'none',\r\n                                    }}>\r\n                            <div className=\"card card-container\" style={{width: '18rem', marginTop: '10px'}}>\r\n                            {/*    <img src={imageList} className=\"card-img-top\" alt=\"...\"/> */}\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\" style={{textAlign: 'justify'}}>{newsLetter[key][innerKey].Title}</h5>\r\n                                    <p className=\"card-text\" style={{textAlign: 'justify'}}>\r\n                                        {newsLetter[key][innerKey].Body.split(\" \").splice(0, 20).join(\" \")} ...\r\n                                    </p>\r\n                                    <a className=\"btn btn-primary\" onClick={seeMore} id={`${count++}.${key}`}>Ver Mais</a>\r\n                                </div>\r\n                            </div>\r\n                    </button>\r\n                    )\r\n                    break\r\n                }\r\n            }\r\n         }\r\n\r\n         function add(e){\r\n            const key = e.target.id.split('.')\r\n            history.push({\r\n                pathname: '/addnewsletter',\r\n              })\r\n         }\r\n\r\n         return( \r\n         <div className='table-container'>\r\n            {values}\r\n         </div>\r\n         ) \r\n     }\r\n\r\n    return buildTable()\r\n }\r\n\r\nexport default NewsLetterHome","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateNewsletter.jsx",["282","283","284","285","286","287","288","289","290","291","292"],"import React, { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {child, ref,set,get,update} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {Storage} from '../database/Storage'\r\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\r\n\r\nfunction UpdateNewsLetter(){\r\n    const [newsLetter, setNewsLetter] = useState({\r\n        Key: uuidv4(),\r\n        Title: '',\r\n        Body: '',\r\n        File: null \r\n    })\r\n\r\n    const dbRef = ref(db)\r\n\r\n    const newsletterKey = document.URL.split('=')[1]\r\n\r\n    const [formElements, setFormElements ] = useState([\r\n        {Title:  '', Body: '', File: null },\r\n    ])\r\n\r\n    function getNewsletter(){\r\n\r\n        get(child(dbRef, `NewsLetter/${newsletterKey}`)).then((s) => {\r\n           let a = []\r\n            if (s.exists())\r\n                for (let key in s.val()){\r\n                    a.push(s.val()[key])\r\n                }\r\n                \r\n            setFormElements([a])\r\n            console.log(formElements)\r\n        })\r\n    }\r\n\r\n    useEffect(() =>{\r\n        getNewsletter()\r\n    },[])\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function saveNewsLetter(e){\r\n\r\n        update(child(dbRef, `NeswLetter/${newsletterKey}`), formElements).then(() => {\r\n            alert('Newsletter Actualizada com sucesso ')\r\n        }).catch(() => {\r\n            alert('Erro ao actualizar Newsletter')\r\n        })\r\n     \r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    const  handleFormChange = (event, index) => {\r\n        const data = [...formElements]\r\n\r\n        data[index][event.target.name] = event.target.value\r\n        setFormElements(data)\r\n    }\r\n\r\n    const removeField = (element) => {\r\n        let data = [...formElements]\r\n        const index = element.target.id\r\n\r\n        data.splice(index,1)\r\n\r\n        setFormElements(data)\r\n    }\r\n\r\n    function addField(e){\r\n        let element =  {Title: '', Body: '', File: null}\r\n        setFormElements([...formElements,element])\r\n    }\r\n\r\n\r\n    function createForm(){\r\n\r\n        let a = []\r\n\r\n        formElements.map((element,index) => {\r\n            console.log(element[index])\r\n        })\r\n        return (\r\n            <div ></div>\r\n        )\r\n\r\n        formElements.map((element, index) => {\r\n\r\n            a.push( <div key={index} style={{border: 'solid #ccc 0.1px', marginBottom: '10px'}}>\r\n\r\n                 <div className=\"form-group\" style={{display: 'flex', flexDirection: 'column'}}>\r\n\r\n                       <button type=\"button\" id={index} onClick={removeField} style={{width: '10%', marginBottom: '15px', marginLeft: '90%'}}className=\"btn btn-outline-secondary\">\r\n                             Apagar \r\n                       </button>\r\n                     <p>\r\n                          <label for=\"exampleFormControlInput1\">Title</label>\r\n                     </p>\r\n                     <input type=\"email\" value={element[index].Title} name='Title' onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title do Newsletter\"/>\r\n           \r\n                 </div>\r\n                 <div className=\"form-group\" style={{'margin-top': '20px'}}>\r\n                     <label for=\"exampleFormControlTextarea1\" style={{'font-weight': '400'}}>Body</label>\r\n                     <textarea name='Body' value={element[index].Body} className=\"form-control\" onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n                 </div>\r\n                 <div className=\"form-group\">\r\n                     <label for=\"exampleInputEmail1\">Carregar Fotografia</label>\r\n                     <input name='ficheiro' value={element[index].File} type=\"file\" accept='image/*' onChange={event => handleFormChange(event, index)} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n                 </div>\r\n             </div> )         \r\n         })         \r\n         return a\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='title-newsletter'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='newsletter-title' style={{fontSize: '1.1rem', fontWeight: '400'}}>\r\n                    Actualizar NewsLetter\r\n                </div>\r\n            </div>\r\n            <div id='newsletter-content'>\r\n                <form>\r\n                    {createForm()}\r\n                    <div className='buttons-container' style={{'margin-top': '20px'}}>\r\n                        <button type=\"button\"  className=\"btn btn-secondary\" onClick={addField}>\r\n                            Adicionar Campo \r\n                        </button>\r\n            \r\n                        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                            Gravar Newsletter \r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-secundary\">Descartar</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                               <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Actualizar Newsletter ?</label>\r\n                            </div>\r\n                        </form>\r\n                            </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                    <button type=\"button\" onClick={saveNewsLetter} className=\"btn btn-primary\">Sim</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateNewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateUser.jsx",["293","294","295","296"],"import {useEffect, useState} from 'react'\r\nimport React from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set,get} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, update } from 'firebase/database';\r\n\r\nfunction back(e){\r\n    window.history.back()\r\n}\r\n\r\nfunction UpdateUser(){\r\n\r\n    const [user, setUser] = useState({\r\n        Role: 'Operacional',\r\n        Username: '',\r\n        Password: '',\r\n        Area: 'Urbanização e Regeneração Urbana'\r\n    })\r\n    const userKey = document.URL.split('=')[1]\r\n\r\n    useEffect(() => {\r\n        get(child(ref(db), `User/${userKey}`)).then( s => {\r\n            console.log(s.val())\r\n            if (s.exists()){\r\n                setUser(s.val())\r\n            }\r\n        })\r\n    }, [])\r\n    function setUsername(e){\r\n\r\n        setUser({\r\n            Username: e.target.value,\r\n            Password: user.Password,\r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setPassword(e){\r\n        setUser({\r\n            Password: e.target.value,\r\n            Username: user.Username, \r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setRole(e){\r\n        setUser({\r\n            Username: user.Username,\r\n            Password: user.Password, \r\n            Role: e.target.value,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function setArea(e){\r\n        setUser({\r\n                Username: user.Username,\r\n                Password: user.Password, \r\n                Role: user.Role,\r\n                Area: e.target.value\r\n            })\r\n     }\r\n\r\n    function updateUser(e){\r\n      \r\n        update(ref(db, `User/${userKey}`), user).then(()=>\r\n        {\r\n            alert('Actividade actualizada com Sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao eliminar o Usuario, Tenta mais tarde')\r\n        })\r\n    \r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n        <div className='title'> \r\n          <div className='back-icon'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                              marginRight: '20px'\r\n                  }} onClick={back}/>\r\n          </div>\r\n          <div className='form-title'>\r\n              Actualizar Usuario\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Username</label>\r\n          <input type=\"text\" value={user.Username} onChange={setUsername} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Password</label>\r\n          <input type=\"text\" onChange={setPassword} value={user.Password} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Tipo de Usuario</label>\r\n          <select className=\"form-select\"  value={user.Role} onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Operacional</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Tatico</option>\r\n          </select>\r\n      </div>\r\n  \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Area</label>\r\n          <select className=\"form-select\"  value={user.Area} onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Urbanização e Regeneração Urbana</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n              <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n              <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n              <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n           </select>\r\n      </div>\r\n\r\n      <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Gravar Usuario   </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          <form>\r\n              <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Actualizar  Usuario ?</label>\r\n              </div>\r\n          </form>\r\n              </div>\r\n                  <div className=\"modal-footer\">\r\n                      <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                      <button type=\"button\" onClick={updateUser} className=\"btn btn-primary\">Sim</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>    \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default UpdateUser","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ShowLats.jsx",["297","298","299","300","301"],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":7,"column":8,"nodeType":"308","messageId":"309","endLine":7,"endColumn":13},{"ruleId":"310","severity":1,"message":"311","line":22,"column":26,"nodeType":"312","endLine":22,"endColumn":68},{"ruleId":"313","severity":1,"message":"314","line":32,"column":24,"nodeType":"315","messageId":"316","endLine":32,"endColumn":26},{"ruleId":"306","severity":1,"message":"317","line":4,"column":10,"nodeType":"308","messageId":"309","endLine":4,"endColumn":16},{"ruleId":"306","severity":1,"message":"318","line":9,"column":25,"nodeType":"308","messageId":"309","endLine":9,"endColumn":42},{"ruleId":"306","severity":1,"message":"319","line":5,"column":33,"nodeType":"308","messageId":"309","endLine":5,"endColumn":39},{"ruleId":"306","severity":1,"message":"320","line":6,"column":8,"nodeType":"308","messageId":"309","endLine":6,"endColumn":15},{"ruleId":"306","severity":1,"message":"321","line":13,"column":12,"nodeType":"308","messageId":"309","endLine":13,"endColumn":21},{"ruleId":"322","severity":1,"message":"323","line":22,"column":7,"nodeType":"324","endLine":22,"endColumn":9,"suggestions":"325"},{"ruleId":"306","severity":1,"message":"326","line":73,"column":14,"nodeType":"308","messageId":"309","endLine":73,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":94,"column":40,"nodeType":"312","endLine":94,"endColumn":114},{"ruleId":"306","severity":1,"message":"329","line":128,"column":19,"nodeType":"308","messageId":"309","endLine":128,"endColumn":22},{"ruleId":"306","severity":1,"message":"330","line":7,"column":8,"nodeType":"308","messageId":"309","endLine":7,"endColumn":12},{"ruleId":"306","severity":1,"message":"331","line":27,"column":14,"nodeType":"308","messageId":"309","endLine":27,"endColumn":25},{"ruleId":"322","severity":1,"message":"332","line":37,"column":7,"nodeType":"324","endLine":37,"endColumn":9,"suggestions":"333"},{"ruleId":"327","severity":1,"message":"328","line":93,"column":37,"nodeType":"312","endLine":93,"endColumn":137},{"ruleId":"322","severity":1,"message":"334","line":19,"column":7,"nodeType":"324","endLine":19,"endColumn":9,"suggestions":"335"},{"ruleId":"306","severity":1,"message":"336","line":31,"column":13,"nodeType":"308","messageId":"309","endLine":31,"endColumn":14},{"ruleId":"313","severity":1,"message":"337","line":56,"column":46,"nodeType":"315","messageId":"316","endLine":56,"endColumn":48},{"ruleId":"306","severity":1,"message":"338","line":92,"column":14,"nodeType":"308","messageId":"309","endLine":92,"endColumn":17},{"ruleId":"306","severity":1,"message":"339","line":4,"column":22,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},{"ruleId":"306","severity":1,"message":"340","line":12,"column":12,"nodeType":"308","messageId":"309","endLine":12,"endColumn":20},{"ruleId":"306","severity":1,"message":"341","line":12,"column":22,"nodeType":"308","messageId":"309","endLine":12,"endColumn":33},{"ruleId":"322","severity":1,"message":"342","line":17,"column":7,"nodeType":"324","endLine":17,"endColumn":9,"suggestions":"343"},{"ruleId":"306","severity":1,"message":"319","line":3,"column":35,"nodeType":"308","messageId":"309","endLine":3,"endColumn":41},{"ruleId":"306","severity":1,"message":"320","line":4,"column":8,"nodeType":"308","messageId":"309","endLine":4,"endColumn":15},{"ruleId":"306","severity":1,"message":"344","line":9,"column":8,"nodeType":"308","messageId":"309","endLine":9,"endColumn":16},{"ruleId":"313","severity":1,"message":"337","line":33,"column":56,"nodeType":"315","messageId":"316","endLine":33,"endColumn":58},{"ruleId":"306","severity":1,"message":"326","line":91,"column":17,"nodeType":"308","messageId":"309","endLine":91,"endColumn":22},{"ruleId":"306","severity":1,"message":"345","line":92,"column":17,"nodeType":"308","messageId":"309","endLine":92,"endColumn":28},{"ruleId":"306","severity":1,"message":"346","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":20},{"ruleId":"322","severity":1,"message":"347","line":33,"column":12,"nodeType":"324","endLine":33,"endColumn":14,"suggestions":"348"},{"ruleId":"306","severity":1,"message":"349","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":15},{"ruleId":"306","severity":1,"message":"350","line":5,"column":17,"nodeType":"308","messageId":"309","endLine":5,"endColumn":20},{"ruleId":"306","severity":1,"message":"351","line":5,"column":22,"nodeType":"308","messageId":"309","endLine":5,"endColumn":25},{"ruleId":"322","severity":1,"message":"352","line":22,"column":7,"nodeType":"324","endLine":22,"endColumn":9,"suggestions":"353"},{"ruleId":"306","severity":1,"message":"321","line":13,"column":12,"nodeType":"308","messageId":"309","endLine":13,"endColumn":21},{"ruleId":"322","severity":1,"message":"354","line":39,"column":8,"nodeType":"324","endLine":39,"endColumn":10,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":75,"column":14,"nodeType":"308","messageId":"358","endLine":75,"endColumn":21},{"ruleId":"306","severity":1,"message":"339","line":3,"column":22,"nodeType":"308","messageId":"309","endLine":3,"endColumn":33},{"ruleId":"322","severity":1,"message":"359","line":84,"column":7,"nodeType":"324","endLine":84,"endColumn":9,"suggestions":"360"},{"ruleId":"306","severity":1,"message":"361","line":5,"column":9,"nodeType":"308","messageId":"309","endLine":5,"endColumn":12},{"ruleId":"306","severity":1,"message":"362","line":6,"column":15,"nodeType":"308","messageId":"309","endLine":6,"endColumn":21},{"ruleId":"306","severity":1,"message":"346","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":20},{"ruleId":"306","severity":1,"message":"363","line":12,"column":12,"nodeType":"308","messageId":"309","endLine":12,"endColumn":27},{"ruleId":"306","severity":1,"message":"364","line":12,"column":29,"nodeType":"308","messageId":"309","endLine":12,"endColumn":47},{"ruleId":"306","severity":1,"message":"365","line":13,"column":12,"nodeType":"308","messageId":"309","endLine":13,"endColumn":23},{"ruleId":"306","severity":1,"message":"366","line":13,"column":25,"nodeType":"308","messageId":"309","endLine":13,"endColumn":39},{"ruleId":"322","severity":1,"message":"367","line":35,"column":6,"nodeType":"324","endLine":35,"endColumn":8,"suggestions":"368"},{"ruleId":"306","severity":1,"message":"369","line":40,"column":13,"nodeType":"308","messageId":"309","endLine":40,"endColumn":18},{"ruleId":"306","severity":1,"message":"370","line":129,"column":14,"nodeType":"308","messageId":"309","endLine":129,"endColumn":31},{"ruleId":"306","severity":1,"message":"361","line":4,"column":13,"nodeType":"308","messageId":"309","endLine":4,"endColumn":16},{"ruleId":"306","severity":1,"message":"361","line":4,"column":13,"nodeType":"308","messageId":"309","endLine":4,"endColumn":16},{"ruleId":"322","severity":1,"message":"371","line":24,"column":7,"nodeType":"324","endLine":24,"endColumn":9,"suggestions":"372"},{"ruleId":"306","severity":1,"message":"361","line":3,"column":14,"nodeType":"308","messageId":"309","endLine":3,"endColumn":17},{"ruleId":"322","severity":1,"message":"373","line":227,"column":10,"nodeType":"324","endLine":227,"endColumn":12,"suggestions":"374"},{"ruleId":"306","severity":1,"message":"375","line":11,"column":12,"nodeType":"308","messageId":"309","endLine":11,"endColumn":22},{"ruleId":"306","severity":1,"message":"376","line":11,"column":24,"nodeType":"308","messageId":"309","endLine":11,"endColumn":37},{"ruleId":"306","severity":1,"message":"369","line":29,"column":13,"nodeType":"308","messageId":"309","endLine":29,"endColumn":18},{"ruleId":"306","severity":1,"message":"377","line":77,"column":14,"nodeType":"308","messageId":"309","endLine":77,"endColumn":21},{"ruleId":"306","severity":1,"message":"340","line":21,"column":12,"nodeType":"308","messageId":"309","endLine":21,"endColumn":20},{"ruleId":"306","severity":1,"message":"378","line":25,"column":14,"nodeType":"308","messageId":"309","endLine":25,"endColumn":24},{"ruleId":"306","severity":1,"message":"339","line":4,"column":22,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},{"ruleId":"306","severity":1,"message":"319","line":4,"column":47,"nodeType":"308","messageId":"309","endLine":4,"endColumn":53},{"ruleId":"306","severity":1,"message":"379","line":11,"column":12,"nodeType":"308","messageId":"309","endLine":11,"endColumn":16},{"ruleId":"322","severity":1,"message":"380","line":36,"column":7,"nodeType":"324","endLine":36,"endColumn":9,"suggestions":"381"},{"ruleId":"306","severity":1,"message":"382","line":90,"column":15,"nodeType":"308","messageId":"309","endLine":90,"endColumn":17},{"ruleId":"306","severity":1,"message":"339","line":4,"column":22,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},{"ruleId":"306","severity":1,"message":"320","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":15},{"ruleId":"306","severity":1,"message":"383","line":28,"column":14,"nodeType":"308","messageId":"309","endLine":28,"endColumn":31},{"ruleId":"322","severity":1,"message":"384","line":38,"column":7,"nodeType":"324","endLine":38,"endColumn":9,"suggestions":"385"},{"ruleId":"306","severity":1,"message":"319","line":4,"column":33,"nodeType":"308","messageId":"309","endLine":4,"endColumn":39},{"ruleId":"306","severity":1,"message":"320","line":5,"column":8,"nodeType":"308","messageId":"309","endLine":5,"endColumn":15},{"ruleId":"306","severity":1,"message":"321","line":12,"column":12,"nodeType":"308","messageId":"309","endLine":12,"endColumn":21},{"ruleId":"322","severity":1,"message":"352","line":33,"column":7,"nodeType":"324","endLine":33,"endColumn":9,"suggestions":"386"},{"ruleId":"306","severity":1,"message":"387","line":43,"column":15,"nodeType":"308","messageId":"309","endLine":43,"endColumn":31},{"ruleId":"306","severity":1,"message":"326","line":67,"column":14,"nodeType":"308","messageId":"309","endLine":67,"endColumn":19},{"ruleId":"327","severity":1,"message":"328","line":85,"column":37,"nodeType":"312","endLine":85,"endColumn":111},{"ruleId":"306","severity":1,"message":"338","line":95,"column":19,"nodeType":"308","messageId":"309","endLine":95,"endColumn":22},{"ruleId":"306","severity":1,"message":"329","line":96,"column":19,"nodeType":"308","messageId":"309","endLine":96,"endColumn":22},{"ruleId":"306","severity":1,"message":"361","line":4,"column":20,"nodeType":"308","messageId":"309","endLine":4,"endColumn":23},{"ruleId":"306","severity":1,"message":"388","line":6,"column":9,"nodeType":"308","messageId":"309","endLine":6,"endColumn":16},{"ruleId":"306","severity":1,"message":"389","line":7,"column":10,"nodeType":"308","messageId":"309","endLine":7,"endColumn":21},{"ruleId":"306","severity":1,"message":"390","line":7,"column":30,"nodeType":"308","messageId":"309","endLine":7,"endColumn":40},{"ruleId":"306","severity":1,"message":"375","line":10,"column":12,"nodeType":"308","messageId":"309","endLine":10,"endColumn":22},{"ruleId":"306","severity":1,"message":"376","line":10,"column":24,"nodeType":"308","messageId":"309","endLine":10,"endColumn":37},{"ruleId":"322","severity":1,"message":"391","line":41,"column":7,"nodeType":"324","endLine":41,"endColumn":9,"suggestions":"392"},{"ruleId":"393","severity":1,"message":"394","line":85,"column":42,"nodeType":"395","messageId":"396","endLine":85,"endColumn":44},{"ruleId":"397","severity":1,"message":"398","line":92,"column":9,"nodeType":"399","messageId":"400","endLine":116,"endColumn":12},{"ruleId":"393","severity":1,"message":"394","line":92,"column":43,"nodeType":"395","messageId":"396","endLine":92,"endColumn":45},{"ruleId":"397","severity":1,"message":"398","line":117,"column":10,"nodeType":"401","messageId":"400","endLine":117,"endColumn":18},{"ruleId":"306","severity":1,"message":"362","line":3,"column":15,"nodeType":"308","messageId":"309","endLine":3,"endColumn":21},{"ruleId":"306","severity":1,"message":"361","line":4,"column":13,"nodeType":"308","messageId":"309","endLine":4,"endColumn":16},{"ruleId":"322","severity":1,"message":"402","line":29,"column":8,"nodeType":"324","endLine":29,"endColumn":10,"suggestions":"403"},{"ruleId":"306","severity":1,"message":"404","line":60,"column":14,"nodeType":"308","messageId":"309","endLine":60,"endColumn":21},{"ruleId":"306","severity":1,"message":"405","line":1,"column":8,"nodeType":"308","messageId":"309","endLine":1,"endColumn":13},{"ruleId":"306","severity":1,"message":"339","line":4,"column":22,"nodeType":"308","messageId":"309","endLine":4,"endColumn":33},{"ruleId":"306","severity":1,"message":"406","line":4,"column":40,"nodeType":"308","messageId":"309","endLine":4,"endColumn":46},{"ruleId":"306","severity":1,"message":"346","line":5,"column":10,"nodeType":"308","messageId":"309","endLine":5,"endColumn":20},{"ruleId":"322","severity":1,"message":"407","line":19,"column":7,"nodeType":"324","endLine":19,"endColumn":9,"suggestions":"408"},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'setMenuVisibility' is assigned a value but never used.","'update' is defined but never used.","'TaskRow' is defined but never used.","'imageList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getNewsletter' and 'getNewsletterImages'. Either include them or remove the dependency array.","ArrayExpression",["411"],"'index' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'key' is assigned a value but never used.","'logo' is defined but never used.","'editContent' is defined but never used.","React Hook useEffect has missing dependencies: 'getLATS' and 'getProject'. Either include them or remove the dependency array.",["412"],"React Hook useEffect has missing dependencies: 'getLATs', 'getProducts', and 'getProject'. Either include them or remove the dependency array.",["413"],"'a' is assigned a value but never used.","Expected '===' and instead saw '=='.","'add' is defined but never used.","'getDatabase' is defined but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["414"],"'Projects' is defined but never used.","'deleteIndex' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'listOfImages' and 'newsletterKey'. Either include them or remove the dependency array.",["415"],"'child' is defined but never used.","'get' is defined but never used.","'ref' is defined but never used.","React Hook useEffect has a missing dependency: 'listOfImages'. Either include it or remove the dependency array.",["416"],"React Hook useEffect has missing dependencies: 'aboutPomar.Key' and 'listOfImages'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPomar' needs the current value of 'aboutPomar.Key'.",["417"],"no-redeclare","'setFile' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.",["418"],"'set' is defined but never used.","'uuidv4' is defined but never used.","'activitiesCount' is assigned a value but never used.","'setActivitiesCount' is assigned a value but never used.","'mActivities' is assigned a value but never used.","'setMActivities' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activities'. Either include it or remove the dependency array.",["419"],"'count' is assigned a value but never used.","'setPeopleInvolved' is defined but never used.","React Hook useEffect has a missing dependency: 'dbRef'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'setKey'. Either include it or remove the dependency array.",["421"],"'newsLetter' is assigned a value but never used.","'setNewsLetter' is assigned a value but never used.","'setFile' is defined but never used.","'getProject' is defined but never used.","'keys' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMCS'. Either include it or remove the dependency array.",["422"],"'id' is assigned a value but never used.","'handleButtonEvent' is defined but never used.","React Hook useEffect has missing dependencies: 'getProduct' and 'getProject'. Either include them or remove the dependency array.",["423"],["424"],"'deleteNewsLetter' is defined but never used.","'Storage' is defined but never used.","'uploadBytes' is defined but never used.","'refStorage' is defined but never used.","React Hook useEffect has a missing dependency: 'getNewsletter'. Either include it or remove the dependency array.",["425"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","ReturnStatement","React Hook useEffect has a missing dependency: 'userKey'. Either include it or remove the dependency array.",["426"],"'setArea' is defined but never used.","'React' is defined but never used.","'remove' is defined but never used.","React Hook useEffect has missing dependencies: 'dbRef' and 'lats'. Either include them or remove the dependency array.",["427"],"no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"438","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},"Update the dependencies array to be: [getNewsletter, getNewsletterImages]",{"range":"461","text":"462"},"Update the dependencies array to be: [getLATS, getProject]",{"range":"463","text":"464"},"Update the dependencies array to be: [getLATs, getProducts, getProject]",{"range":"465","text":"466"},"Update the dependencies array to be: [getUsers]",{"range":"467","text":"468"},"Update the dependencies array to be: [listOfImages, newsletterKey]",{"range":"469","text":"470"},"Update the dependencies array to be: [listOfImages]",{"range":"471","text":"472"},"Update the dependencies array to be: [aboutPomar.Key, listOfImages]",{"range":"473","text":"474"},"Update the dependencies array to be: [getProject]",{"range":"475","text":"476"},"Update the dependencies array to be: [activities]",{"range":"477","text":"478"},"Update the dependencies array to be: [dbRef]",{"range":"479","text":"480"},"Update the dependencies array to be: [setKey]",{"range":"481","text":"482"},"Update the dependencies array to be: [getMCS]",{"range":"483","text":"484"},"Update the dependencies array to be: [getProduct, getProject]",{"range":"485","text":"486"},{"range":"487","text":"472"},"Update the dependencies array to be: [getNewsletter]",{"range":"488","text":"489"},"Update the dependencies array to be: [userKey]",{"range":"490","text":"491"},"Update the dependencies array to be: [dbRef, lats]",{"range":"492","text":"493"},[816,818],"[getNewsletter, getNewsletterImages]",[939,941],"[getLATS, getProject]",[526,528],"[getLATs, getProducts, getProject]",[525,527],"[getUsers]",[1161,1163],"[listOfImages, newsletterKey]",[649,651],"[listOfImages]",[1362,1364],"[aboutPomar.Key, listOfImages]",[2330,2332],"[getProject]",[1302,1304],"[activities]",[633,635],"[dbRef]",[8153,8155],"[setKey]",[1138,1140],"[getMCS]",[1096,1098],"[getProduct, getProject]",[1279,1281],[1132,1134],"[getNewsletter]",[771,773],"[userKey]",[580,582],"[dbRef, lats]"]