[{"/workspace/taskMan/src/index.js":"1","/workspace/taskMan/src/App.js":"2","/workspace/taskMan/src/reportWebVitals.js":"3","/workspace/taskMan/src/main/Main.jsx":"4","/workspace/taskMan/src/components/Board.jsx":"5","/workspace/taskMan/src/components/Header.jsx":"6","/workspace/taskMan/src/components/Footer.jsx":"7","/workspace/taskMan/src/components/Menu.jsx":"8","/workspace/taskMan/src/components/Report.jsx":"9","/workspace/taskMan/src/components/Sticky.jsx":"10","/workspace/taskMan/src/components/TaskRow.js":"11","/workspace/taskMan/src/components/modalforms/AddNewTask.jsx":"12","/workspace/taskMan/src/components/projectviews/Projects.jsx":"13","/workspace/taskMan/src/components/database/DatabaseHelper.js":"14","/workspace/taskMan/src/components/Charts.jsx":"15"},{"size":500,"mtime":1670234785000,"results":"16","hashOfConfig":"17"},{"size":270,"mtime":1670234785000,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1670234785000,"results":"19","hashOfConfig":"17"},{"size":487,"mtime":1670234785000,"results":"20","hashOfConfig":"17"},{"size":932,"mtime":1670324080955,"results":"21","hashOfConfig":"17"},{"size":1902,"mtime":1670240395000,"results":"22","hashOfConfig":"17"},{"size":1012,"mtime":1670234785000,"results":"23","hashOfConfig":"17"},{"size":1157,"mtime":1670324638858,"results":"24","hashOfConfig":"17"},{"size":1386,"mtime":1670234785000,"results":"25","hashOfConfig":"17"},{"size":3051,"mtime":1670234924000,"results":"26","hashOfConfig":"17"},{"size":554,"mtime":1670300783000,"results":"27","hashOfConfig":"17"},{"size":2167,"mtime":1670234785000,"results":"28","hashOfConfig":"17"},{"size":1272,"mtime":1670301211000,"results":"29","hashOfConfig":"17"},{"size":751,"mtime":1670235901000,"results":"30","hashOfConfig":"17"},{"size":852,"mtime":1670325160258,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"13nomt5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/taskMan/src/index.js",[],["66","67"],"/workspace/taskMan/src/App.js",[],"/workspace/taskMan/src/reportWebVitals.js",[],"/workspace/taskMan/src/main/Main.jsx",[],"/workspace/taskMan/src/components/Board.jsx",["68","69"],"import './Board.css'\nimport  Sticky from './Sticky'\nimport Report from './Report'\nimport React from 'react'\nimport Projects from  './projectviews/Projects'\nimport Charts from './Charts'\n\nimport {Switch, Route} from 'react-router-dom'\n\nfunction content(){\n    return ([<p>task1</p>, <p>task2</p>,<p>task3</p>,])\n}\n\nfunction Board() {\n    return (\n        <section className='container'>\n            <div className='board'>\n                <Switch>\n                    <Route path='/report' exact>\n                        <Report/>\n                    </Route>\n                    <Route path='/projects' exact>\n                        <Projects/>\n                    </Route>                        \n                    <Route path='' exact>\n                        <Charts />\n                    </Route>                        \n                </Switch>\n            </div>\n        </section>\n\n    )\n}\n\nexport default Board\n        ","/workspace/taskMan/src/components/Header.jsx",[],"/workspace/taskMan/src/components/Footer.jsx",[],"/workspace/taskMan/src/components/Menu.jsx",[],"/workspace/taskMan/src/components/Report.jsx",[],"/workspace/taskMan/src/components/Sticky.jsx",["70"],"import React, { useState } from 'react'\nimport './Sticky.css'\nimport Modal from 'react-modal'\nimport AddNewTaskForm from './modalforms/AddNewTask'\n\nfunction getTaskElements(elements, leftArrow, rightArrow){\n    let result = []\n    for (let element in elements){\n        result.push(\n            <div className='icon-container'>\n                <div className='taskDescription'>\n                    {elements[element]}\n                </div>\n                \n                <div className='leftArrow'>\n                    <i className={leftArrow}></i>\n                </div>\n            \n                <div className='rightArrow'>\n                    <i className={rightArrow}></i>\n                </div>\n\n                <div className='deleteItem'>\n                    <i className='bi bi-trash'></i>\n                </div>\n        </div>\n        )\n    }\n    return result\n}\n\n\nfunction Sticky(props){\n    const [showModalForm, setShowModalForm] = useState(false)\n  \n    return (\n        <div className='sticky-notes'>\n            <div className='items'>\n                <div className='note-header'>\n                    <div className='note-header-title'>\n                        {props.header}\n                    </div>\n                    <div className='note-header-icon'>\n                        <button className='call-modal-button' onClick={() => setShowModalForm(true)}\n                            style={{'border':'none', 'background-color':'white'}}\n                        >\n                             <i className=\"bi bi-plus-square\"/>\n                       </button>\n\n                       <Modal  isOpen={showModalForm} \n                              onRequestClose={() => setShowModalForm(false)}\n                              style={\n                                    {\n                                        overlay:{\n                                            backgroundColor: 'rgb(204, 204, 204,0.9)'\n                                        },\n                                        \n                                    } \n                            }\n                        >\n                        <div className='modal-form-footer'>\n                            <div className='footer-btn'>\n                                <button className='btn btn-success' onClick= {() => setShowModalForm(false)}>Submit</button>\n                            </div>\n                            <div style={{'margin': '5px'}}/>\n                            <div className='footer-btn'>\n                                <button className='btn btn-danger' onClick= {() => setShowModalForm(false)}>close</button>\n                            </div>\n                        </div> \n                    </Modal>\n                </div>        \n            </div>\n            <div className='content'>\n                {getTaskElements(props.content,\n                                props.leftArrow,\n                                props.rigthArrow)}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Sticky\n   ","/workspace/taskMan/src/components/TaskRow.js",[],"/workspace/taskMan/src/components/modalforms/AddNewTask.jsx",[],"/workspace/taskMan/src/components/projectviews/Projects.jsx",["71","72","73"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Projects extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({projects: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef, `Project`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({projects: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.projects){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].ProjectName}\n                         LAT = {this.state.projects[key].LAT}\n                         DeadLine = {this.state.projects[key].Deadline}\n                         />)\n            }\n        }\n        return values\n    }\n\n}\n\nexport default Projects","/workspace/taskMan/src/components/database/DatabaseHelper.js",[],"/workspace/taskMan/src/components/Charts.jsx",["74","75","76","77","78","79","80","81","82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":15},{"ruleId":"88","severity":1,"message":"92","line":10,"column":10,"nodeType":"90","messageId":"91","endLine":10,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":22},{"ruleId":"88","severity":1,"message":"94","line":3,"column":9,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"88","severity":1,"message":"95","line":3,"column":19,"nodeType":"90","messageId":"91","endLine":3,"endColumn":28},{"ruleId":"88","severity":1,"message":"96","line":4,"column":22,"nodeType":"90","messageId":"91","endLine":4,"endColumn":33},{"ruleId":"88","severity":1,"message":"97","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":30},{"ruleId":"88","severity":1,"message":"98","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"99","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":19},{"ruleId":"88","severity":1,"message":"100","line":3,"column":21,"nodeType":"90","messageId":"91","endLine":3,"endColumn":25},{"ruleId":"88","severity":1,"message":"101","line":3,"column":27,"nodeType":"90","messageId":"91","endLine":3,"endColumn":32},{"ruleId":"88","severity":1,"message":"102","line":3,"column":34,"nodeType":"90","messageId":"91","endLine":3,"endColumn":39},{"ruleId":"88","severity":1,"message":"103","line":3,"column":41,"nodeType":"90","messageId":"91","endLine":3,"endColumn":54},{"ruleId":"88","severity":1,"message":"104","line":3,"column":56,"nodeType":"90","messageId":"91","endLine":3,"endColumn":63},{"ruleId":"88","severity":1,"message":"105","line":3,"column":65,"nodeType":"90","messageId":"91","endLine":3,"endColumn":71},{"ruleId":"88","severity":1,"message":"106","line":5,"column":7,"nodeType":"90","messageId":"91","endLine":5,"endColumn":11},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Sticky' is defined but never used.","Identifier","unusedVar","'content' is defined but never used.","'AddNewTaskForm' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getDatabase' is defined but never used.","'PureComponent' is defined but never used.","'ResponsiveContainer' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Tooltip' is defined but never used.","'Legend' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]