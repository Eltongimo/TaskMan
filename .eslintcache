[{"/workspace/taskMan/src/index.js":"1","/workspace/taskMan/src/App.js":"2","/workspace/taskMan/src/reportWebVitals.js":"3","/workspace/taskMan/src/main/Main.jsx":"4","/workspace/taskMan/src/components/Header.jsx":"5","/workspace/taskMan/src/components/Board.jsx":"6","/workspace/taskMan/src/components/Footer.jsx":"7","/workspace/taskMan/src/components/loginpage/Login.jsx":"8","/workspace/taskMan/src/components/Menu.jsx":"9","/workspace/taskMan/src/components/Home.jsx":"10","/workspace/taskMan/src/components/Dashboard.jsx":"11","/workspace/taskMan/src/components/ShowDashboard.jsx":"12","/workspace/taskMan/src/components/projectviews/Products.jsx":"13","/workspace/taskMan/src/components/projectviews/Projects.jsx":"14","/workspace/taskMan/src/components/projectviews/Activities.jsx":"15","/workspace/taskMan/src/components/projectviews/NewsLetter.jsx":"16","/workspace/taskMan/src/components/projectviews/Users.jsx":"17","/workspace/taskMan/src/components/projectviews/ReadNewsLetter.jsx":"18","/workspace/taskMan/src/components/projectviews/Reports.jsx":"19","/workspace/taskMan/src/components/projectviews/LAT.jsx":"20","/workspace/taskMan/src/components/projectviews/EditHomeContent.jsx":"21","/workspace/taskMan/src/components/projectviews/ShowLats.jsx":"22","/workspace/taskMan/src/components/forms/AddActivitiy.jsx":"23","/workspace/taskMan/src/components/forms/AddMacroActivities.jsx":"24","/workspace/taskMan/src/components/forms/AddProducts.jsx":"25","/workspace/taskMan/src/components/forms/AddNewsLetter.jsx":"26","/workspace/taskMan/src/components/projectviews/Carousel.jsx":"27","/workspace/taskMan/src/components/forms/AddUser.jsx":"28","/workspace/taskMan/src/components/forms/AddLAT.jsx":"29","/workspace/taskMan/src/components/forms/AddProject.jsx":"30","/workspace/taskMan/src/components/updateForms/UpdateProducts.jsx":"31","/workspace/taskMan/src/components/updateForms/UpdateMacroActivity.jsx":"32","/workspace/taskMan/src/components/updateForms/UpdateProject.jsx":"33","/workspace/taskMan/src/components/updateForms/UpdateActivity.jsx":"34","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx":"35","/workspace/taskMan/src/components/updateForms/UpdateNewsletter.jsx":"36","/workspace/taskMan/src/components/updateForms/UpdateUser.jsx":"37","/workspace/taskMan/src/components/Newsletter/NewsletterHome.jsx":"38","/workspace/taskMan/src/components/database/DatabaseHelper.js":"39","/workspace/taskMan/src/components/database/Storage.js":"40","/workspace/taskMan/src/components/TaskRow.js":"41","/workspace/taskMan/src/components/Sticky.jsx":"42","/workspace/taskMan/src/components/ReportsPDF/ActivitySinglePDF.jsx":"43","/workspace/taskMan/src/components/ReportsPDF/ActivityPDF.jsx":"44","/workspace/taskMan/src/components/ReportsPDF/LATReport.jsx":"45","/workspace/taskMan/src/components/ReportsPDF/MacroActivityPDF.jsx":"46","/workspace/taskMan/src/components/ReportsPDF/ProductPDF.jsx":"47","/workspace/taskMan/src/components/database/CRUDOperations.js":"48","/workspace/taskMan/src/components/ReportsPDF/LATProjectReportPDF.jsx":"49","/workspace/taskMan/src/components/projectviews/Item.jsx":"50"},{"size":500,"mtime":1676628022000,"results":"51","hashOfConfig":"52"},{"size":270,"mtime":1676628022000,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1676628022000,"results":"54","hashOfConfig":"52"},{"size":538,"mtime":1676628022000,"results":"55","hashOfConfig":"52"},{"size":1720,"mtime":1676628022000,"results":"56","hashOfConfig":"52"},{"size":4083,"mtime":1676628022000,"results":"57","hashOfConfig":"52"},{"size":836,"mtime":1676628022000,"results":"58","hashOfConfig":"52"},{"size":2145,"mtime":1676628022000,"results":"59","hashOfConfig":"52"},{"size":3937,"mtime":1676640790000,"results":"60","hashOfConfig":"52"},{"size":8802,"mtime":1677053925000,"results":"61","hashOfConfig":"52"},{"size":2983,"mtime":1676641206000,"results":"62","hashOfConfig":"52"},{"size":4773,"mtime":1676872928000,"results":"63","hashOfConfig":"52"},{"size":9480,"mtime":1676977453000,"results":"64","hashOfConfig":"52"},{"size":8494,"mtime":1676630200000,"results":"65","hashOfConfig":"52"},{"size":15068,"mtime":1677070277000,"results":"66","hashOfConfig":"52"},{"size":6419,"mtime":1676628022000,"results":"67","hashOfConfig":"52"},{"size":5619,"mtime":1677235079879,"results":"68","hashOfConfig":"52"},{"size":2553,"mtime":1676628022000,"results":"69","hashOfConfig":"52"},{"size":6406,"mtime":1676638597000,"results":"70","hashOfConfig":"52"},{"size":3145,"mtime":1676628022000,"results":"71","hashOfConfig":"52"},{"size":3607,"mtime":1676628022000,"results":"72","hashOfConfig":"52"},{"size":5917,"mtime":1676628022000,"results":"73","hashOfConfig":"52"},{"size":20727,"mtime":1677070210000,"results":"74","hashOfConfig":"52"},{"size":3314,"mtime":1676628022000,"results":"75","hashOfConfig":"52"},{"size":6166,"mtime":1676628022000,"results":"76","hashOfConfig":"52"},{"size":6678,"mtime":1677143304000,"results":"77","hashOfConfig":"52"},{"size":2410,"mtime":1677125744000,"results":"78","hashOfConfig":"52"},{"size":8450,"mtime":1677235023679,"results":"79","hashOfConfig":"52"},{"size":5113,"mtime":1676628022000,"results":"80","hashOfConfig":"52"},{"size":12987,"mtime":1676628022000,"results":"81","hashOfConfig":"52"},{"size":6989,"mtime":1676976185000,"results":"82","hashOfConfig":"52"},{"size":3821,"mtime":1676634024000,"results":"83","hashOfConfig":"52"},{"size":13293,"mtime":1676628022000,"results":"84","hashOfConfig":"52"},{"size":21312,"mtime":1677069628000,"results":"85","hashOfConfig":"52"},{"size":8426,"mtime":1676962816000,"results":"86","hashOfConfig":"52"},{"size":6512,"mtime":1677049735000,"results":"87","hashOfConfig":"52"},{"size":9631,"mtime":1677235225002,"results":"88","hashOfConfig":"52"},{"size":3906,"mtime":1676628022000,"results":"89","hashOfConfig":"52"},{"size":751,"mtime":1676628022000,"results":"90","hashOfConfig":"52"},{"size":543,"mtime":1676628022000,"results":"91","hashOfConfig":"52"},{"size":912,"mtime":1676628022000,"results":"92","hashOfConfig":"52"},{"size":2723,"mtime":1676641147000,"results":"93","hashOfConfig":"52"},{"size":2335,"mtime":1677070326000,"results":"94","hashOfConfig":"52"},{"size":2047,"mtime":1676628022000,"results":"95","hashOfConfig":"52"},{"size":2675,"mtime":1676813565000,"results":"96","hashOfConfig":"97"},{"size":2449,"mtime":1676822507000,"results":"98","hashOfConfig":"52"},{"size":3262,"mtime":1677070336000,"results":"99","hashOfConfig":"52"},{"size":857,"mtime":1676871919219,"results":"100","hashOfConfig":"97"},{"size":4151,"mtime":1676882395000,"results":"101","hashOfConfig":"52"},{"size":226,"mtime":1677118413000,"results":"102","hashOfConfig":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"zarlao",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"105"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"105"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"105"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"105"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"105"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},"p1glc6",{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"105"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"105"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"105"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/workspace/taskMan/src/index.js",[],["239","240"],"/workspace/taskMan/src/App.js",[],"/workspace/taskMan/src/reportWebVitals.js",[],"/workspace/taskMan/src/main/Main.jsx",["241"],"import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Board from '../components/Board'\nimport Menu from '../components/Menu'\nimport './Main.css'\nimport Login from '../components/loginpage/Login'\n\nfunction Main() {\n    return (\n        <div className='main'>\n            <Header/>\n                <div className='main-content'>\n                    <Menu />\n                    <Board/>\n                </div>\n            <Footer/>\n        </div>\n    )\n}\nexport default Main\n  ","/workspace/taskMan/src/components/Header.jsx",["242"],"import React from 'react'\nimport './Header.css'\nimport logo from '../assets/logo/logo.png'\n//import {useState} from 'react'\n//import Menu from './Menu'\n\nfunction Header() {\n\n     return (\n               <header className='header'>\n                {/*    <div className=\"home\">\n                         <a href='/'>\n                              <i class=\"bi bi-house-door-fill\" style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}></i>\n                         </a>\n     </div> */}\n                \n                    <div className='search-input'>\n                         <div class=\"form-outline\">\n                              <input type=\"search\" id=\"form1\" class=\"form-control\" placeholder=\"Search...\"/>\n                         </div>    \n                    </div>\n                    <div className='logo'>\n                         <img src={logo}  width='125' height='50'/>\n                    </div>\n               <div>\n                    <label id='welcome' style={{\n                         color: 'white',\n                         fontSize: '1rem',\n                         padding: '10px',\n                         fontWeight: '500'\n\n                    }}/>\n               </div> \n               <div>\n                    <label id='role' hidden={true}></label>\n               </div>\n               <div>\n                   <label id='userprojects' hidden={true}></label>\n                   <label id='userarea' hidden={true}></label>\n               </div>\n               <a href='/'>\n                     <div style={{'cursor':'pointer','fontSize': '1.1rem', 'color': 'white',fontWeight: '500'}}>Log out</div>\n                </a>\n          </header>\n     )\n}\n\n\nexport default Header\n   ","/workspace/taskMan/src/components/Board.jsx",[],"/workspace/taskMan/src/components/Footer.jsx",[],"/workspace/taskMan/src/components/loginpage/Login.jsx",["243"],"import React from 'react'\nimport './Login.css'\n\nclass FluidInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        focused: false,\n        value: \"\"\n      };\n    }\n    focusField() {\n      const { focused } = this.state;\n      this.setState({\n        focused: !focused\n      });\n    }\n    handleChange(event) {\n      const { target } = event;\n      const { value } = target;\n      this.setState({\n        value: value\n      });\n    }\n    render() {\n      const { type, label, style, id } = this.props;\n      const { focused, value } = this.state;\n      \n      let inputClass = \"fluid-input\";\n      if (focused) {\n        inputClass += \" fluid-input--focus\";\n      } else if (value != \"\") {\n        inputClass += \" fluid-input--open\";\n      }\n      \n      return (\n        <div className={inputClass} style={style}>\n          <div className=\"fluid-input-holder\">\n            \n            <input \n              className=\"fluid-input-input\"\n              type={type}\n              id={id}\n              onFocus={this.focusField.bind(this)}\n              onBlur={this.focusField.bind(this)}\n              onChange={this.handleChange.bind(this)}\n              autocomplete=\"off\"\n            />\n            <label className=\"fluid-input-label\" forHtml={id}>{label}</label>\n            \n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Button extends React.Component {\n    render() {\n      return (\n        <div className={`button ${this.props.buttonClass}`} onClick={this.props.onClick}>\n          {this.props.buttonText}\n        </div>\n      );\n    }\n  }\n  \n  class Login extends React.Component {\n    render() {\n      \n      const style = {\n        margin: \"15px 0\"\n      };\n      return (\n        <div className=\"login-container\">\n          <div className=\"title\">\n           Login\n          </div>\n          <FluidInput type=\"text\" label=\"name\" id=\"name\" style={style} />\n          <FluidInput type=\"password\" label=\"password\" id=\"password\" style={style} />\n          <Button buttonText=\"log in\" buttonClass=\"login-button\" />\n        </div>\n      );\n    }\n  }\n  \nexport default Login","/workspace/taskMan/src/components/Menu.jsx",["244","245"],"import React from 'react'\nimport './Menu.css'\nimport {Link} from 'react-router-dom'\nimport { Button } from 'bootstrap'\nimport { useState } from 'react'\n\nfunction Menu(props) {\n\n    const [menuVisible, setMenuVisibility ] = useState(true)\n\n    const menuKeys = ['home','dahboard','menu-projects','newsletter'/*,'relatorios'*/,'usuarios','conteudo','lat','newsletterhome']\n    let a = []\n\n    function activeBackGroud(e){\n        \n        const selectedId = e.target.id\n\n        for (let key in menuKeys){\n            \n            if ( menuKeys[key] === selectedId){\n                document.getElementById(selectedId).parentElement.style.backgroundColor = '#001489'\n                document.getElementById(selectedId).style.color = 'white'\n            }else{\n                document.getElementById(menuKeys[key]).parentElement.style.backgroundColor = 'transparent'\n                document.getElementById(menuKeys[key]).style.color = 'black'\n\n            }\n        }\n\n    }\n      a.push(\n            <div className='navigation'>\n                <nav >\n                    <ul>\n                        <li className='home'>\n                            <Link id={menuKeys[0]} onClick={activeBackGroud}  className='link' to=\"/\" exact=\"true\" > \n                                Home\n                            </Link>\n                        </li>\n                        <li  className='dashboard' hidden = {menuVisible} >\n                            <Link id={menuKeys[1]} onClick={activeBackGroud}  className='link' to=\"/showdashboard\" exact=\"true\"> \n                                Dashboard\n                            </Link>\n                        </li>\n                        <li  className='projects' hidden={menuVisible}>\n                            <Link id={menuKeys[2]} onClick={activeBackGroud} className='link' to=\"/projects\" exact=\"true\" >\n                                Projectos\n                            </Link>\n                        </li>\n                        <li className='newsletter' hidden={menuVisible}>\n                            <Link id={menuKeys[3]} onClick={activeBackGroud}  className='link' to=\"/newsletter\" exact=\"true\"> \n                                NewsLetter\n                            </Link>\n                        </li>\n                   {/*     <li className='relatorios' hidden={menuVisible}>\n                            <Link id={menuKeys[4]} onClick={activeBackGroud}  className='link' to='/relatorios' exact=\"true\"> \n                                Relatorios\n                            </Link>\n                    </li>*/}\n                        <li className='usuarios' hidden={menuVisible}>\n                            <Link id={menuKeys[4]} onClick={activeBackGroud}  className='link' to='/usuarios' exact=\"true\"> \n                                Usuarios\n                            </Link>\n                        </li>\n                        <li className='conteudo' hidden={menuVisible}>\n                            <Link id={menuKeys[5]} onClick={activeBackGroud}  className='link' to='/edithomecontent' exact=\"true\"> \n                                Gerir Conteudo\n                            </Link>\n                        </li>\n                        \n                        <li className='lat' hidden={menuVisible}>\n                            <Link id={menuKeys[6]} onClick={activeBackGroud}  className='link' to=\"/showlats\" exact=\"true\"> \n                                LAT\n                            </Link>\n                        </li>\n\n                        <li className='newsletterhome'>\n                            <Link id={menuKeys[7]} onClick={activeBackGroud}  className='link' to=\"/newsletterhome\" exact=\"true\"> \n                                Newsletter\n                            </Link>\n                        </li>\n                        \n                    </ul>\n            </nav>\n        </div>)\n\n    return a\n}\nexport default Menu","/workspace/taskMan/src/components/Home.jsx",["246"],"import React from 'react'\nimport './Home.css'\nimport {db} from './database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get,ref } from \"firebase/database\"\nimport CarouselHome from './projectviews/Carousel'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\n\nfunction Home(){\n    const [user, setUser ] = useState({})\n    const [projects, setProjects] = useState({})\n    const [typedUser, setTypedUser] = useState({})\n    const [aboutPomar, setAboutPomar] = useState({})\n    const history = useHistory()\n    \n    function getUsername(e){\n        setTypedUser({username: e.target.value, password:typedUser.password})\n    }\n\n    function getPassword(e){\n        setTypedUser({username: typedUser.username, password: e.target.value})\n    }\n\n\n    function editContent(e){\n        history.push({\n            pathname: '/edithomecontent',\n          })\n    }\n\n    useEffect( () => {\n        const dbRef = ref(db)\n            get(child(dbRef,'HomeContent')).then((snapshot) => {\n\n                if (snapshot.exists())\n                 for (let key in snapshot.val()){\n                    setAboutPomar({About: snapshot.val()[key].About})        \n                 }\n                }\n            )\n\n            get(child(dbRef, `User`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        setUser({users: snapshot.val()})\n                    else\n                        alert('No Users')\n            })\n            get(child(dbRef, 'Project')).then( snapshot => {\n                if (snapshot.exists()){\n                    setProjects({p: snapshot.val()})\n                }\n            })\n        }\n    ,[])\n\n    function login(e){\n        \n        for (let u in user.users){\n\n            if ( user.users[u].Username === typedUser.username && user.users[u].Password === typedUser.password){\n                console.log(user.users[u].Project)\n                e.target.isVisible = false\n                document.getElementById('welcome').innerHTML = `${typedUser.username}, Bem vindo  ao POMAR!`\n                document.getElementById('closemodal').click()\n                document.getElementById('role').value = user.users[u].Role\n                document.getElementById('userprojects').innerHTML = user.users[u].Project\n                document.getElementById('userarea').innerHTML = user.users[u].Area\n                enableMenus(user.users[u])\n                clearForm()\n                return \n            }\n        }    \n        \n   }\n\n    function enableMenus(u){\n\n\n        if (u.Role === 'operacional'){\n            //document.getElementsByClassName('relatorios')[0].hidden = false\n            document.getElementsByClassName('usuarios')[0].hidden = false\n            document.getElementsByClassName('lat')[0].hidden = false\n            document.getElementsByClassName('newsletter')[0].hidden = false\n            document.getElementById('newsletterhome').hidden = true\n            document.getElementsByClassName('conteudo')[0].hidden = false\n        }\n        document.getElementsByClassName('navigation')[0].hidden = false\n        document.getElementsByClassName('dashboard')[0].hidden = false\n        document.getElementsByClassName('projects')[0].hidden = false\n    }\n\n    function clearForm(){\n        document.getElementById('username').value = ''\n        document.getElementById('password').value = ''\n    }\n\n    function loadprojects(){\n        let a = []\n        let count = 0\n        for (let key in projects.p){\n            a.push(\n                <li>\n                    <button type=\"button\" data-toggle=\"modal\" data-target={`#exampleModal${count}`} style={{marginBottom: '10px',color: 'white', borderRadius: '10px', height: '3.5rem', border: 'solid 0.1px', background: '#001489'}}> {projects.p[key].ProjectName}     </button>\n                      <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\n                            <div className=\"modal-dialog\" role=\"document\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Projecto{projects.p[key].ProjectName}</h5>\n                                        <button type=\"button\" id='closebutton' className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                <div className=\"modal-body\">\n                                    <strong>Tipo de Actividade</strong>\n                                    <p> \n                                        {projects.p[key].TypeOfActivity}\n                                    </p>\n\n                                    <strong>Objectivo Geral do Projecto</strong>\n\n                                    <p> \n                                          {projects.p[key].GeneralObjective}\n                                    </p>\n\n                                    <strong>Objectivo Especifico</strong>\n\n                                    <p> \n                                          {projects.p[key].SpecificObjective}\n                                    </p>\n                                \n                                    <strong>Resultado Esperado</strong>\n                                    <p> \n                                        {projects.p[key].Result}\n                                    </p>\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            )\n            count++\n        }\n        return a\n    }\n\n    return (\n        \n        <div className='homeContainer'>\n\n            <div className='carousel-home'>\n                <CarouselHome/>\n            </div>\n        \n            <div className='image' style={{textAlign: 'justify', padding: '10px', marginTop: '15px'}}> \n                <b>Projectos</b>\n                <p/>\n                <ul>\n                    {loadprojects()} \n                </ul>\n            </div>\n            <div className='text' style={{textAlign: 'justify', padding: '10px'}}>\n                <b>Informação sobre o Pomar</b>\n                <p>\n                    {aboutPomar.About}\n                </p>\n\n            <button type=\"button\" onClick={clearForm} className=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Login\n            </button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\n                            <button type=\"button\" className=\"closebutton\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                    <div className=\"modal-body\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label >Username</label> \n                                <input type=\"email\" id='username' onChange={getUsername} className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Usermane\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label >Password</label>\n                                <input type=\"password\" id='password' onChange= {getPassword} className=\"form-control\" placeholder=\"Password\"/>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={login}>Entrar</button>\n                    </div>\n                    </div>\n                </div>\n            </div>    \n            </div>\n        </div>)\n}\n\nexport default Home","/workspace/taskMan/src/components/Dashboard.jsx",["247","248","249","250"],"import './Dashboard.css'\nimport Stricky from './Sticky'\nimport React from 'react'\nimport {db} from './database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref } from \"firebase/database\"\n\nfunction Dashboard  (){\n\n    const [lats, setLats] = useState({})\n    const [products, setProducts ] = useState({})\n    const [project, setProject] = useState({})\n    const dbRef = ref(db)\n      \n    useEffect( () => {\n        getProject()\n        getLATs()\n        getProducts()\n    },[])\n\n    function getProject(){\n\n        get(child(dbRef, `Project/${document.URL.split('=')[1]}`)).then((snapshot) => {\n\n            if (snapshot.exists())\n                setProject(snapshot.val())\n        })\n    }\n\n    function getLATs(){\n        let a = []\n        get(child(dbRef, `LAT`)).then((snapshot) => {\n                if (snapshot.exists()){\n                    setLats(snapshot.val())\n                }\n            })\n        }\n    \n    function getProducts(){\n        get(child(dbRef, `Product`)).then((snapshot) => {\n            if (snapshot.exists()){\n                setProducts(snapshot.val())\n            }\n        })\n    }\n\n    function buildCards(){\n        \n        let cards = []\n        for(let key in lats){\n            let prods = []\n            let fullProdsArray = []\n            let cont = 0\n            let signal = false\n            for(let prodsKey in products){\n                if ( products[prodsKey].Area == lats[key].Description && lats[key].ProjectKey === project.Key){\n                    if (cont < 5 ){\n                        prods.push(products[prodsKey])   \n                    }\n                    cont++\n                    fullProdsArray.push(products[prodsKey].Status)\n                    signal = true\n                }\n            }\n\n            if (signal ){\n                \n                let row = ''\n\n                if (cont % 2 !== 0)\n                    row = 'row-1'\n                else\n                    row = 'row-2'\n                    \n                cards.push(\n                    <Stricky rownum={row} header={lats[key].Description}\n                        products={prods}        \n                        fullProds = {fullProdsArray}\n                        Key={lats[key].Key}\n                />)\n            }\n            signal = false\n        }\n\n        return cards\n    }\n\n    function back (e){\n        window.history.back()\n    }\n\n    function add(){\n\n    }\n\n    return (\n        <div  style={{\n            border: 'solid #ccc red '\n        }}>\n             <div className='title' id='title'>\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                         marginRight: '20px'\n                                                     }} \n                onClick={back}/>\n            </div>\n            <div className='home-container'>\n                {buildCards()}\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","/workspace/taskMan/src/components/ShowDashboard.jsx",["251","252"],"import React from 'react'\nimport {db} from './database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref } from \"firebase/database\"\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\nimport './ShowDashboard.css'\nimport LATProjectReportPDF from './ReportsPDF/LATProjectReportPDF'\n\nfunction ShowDashboard(){\n    const history = useHistory()\n    const [projects, setProjects ] = useState()\n    const [lats, setLats ] = useState()\n    const [products, setProducts] = useState()\n    const [macroActivities, setMacroActivities] = useState()\n    const [activities, setActivities] = useState()\n    const dbRef = ref(db)\n\n    function getProject(){\n\n        get(child(dbRef, 'Project'),[]).then(snapshot => {\n            if (snapshot.exists()){\n                setProjects(snapshot.val())\n            }\n        })\n        get(child(dbRef, 'Product'),[]).then(snapshot => {\n            if (snapshot.exists()){\n                setProducts (snapshot.val())\n            }\n        })\n\n        get(child(dbRef, 'MacroActivity'),[]).then(snapshot => {\n            if (snapshot.exists()){\n                setMacroActivities (snapshot.val())\n            }\n        })\n\n        get(child(dbRef, 'Activity'),[]).then(snapshot => {\n            if (snapshot.exists()){\n                setActivities (snapshot.val())\n            }\n        })\n        \n    }\n    \n    function getLATS(){\n\n        get(child(dbRef, `LAT`),[]).then((snapshot) => {\n            if (snapshot.exists()){\n                setLats(snapshot.val())\n            }\n        })\n    }\n\n    useEffect( () => {\n        getProject()\n        getLATS()\n    },[])\n\n    function gotoDashboardProduct(e){\n\n        const a = e.target.id.split('.')\n\n        if ( a[0] === '0')\n        {\n            alert('Sem LAT para Mostrar neste projecto')\n        }else{\n            history.push({\n                pathname: '/dashboard',\n                search: `?key=${a[1]}`\n            })\n        }\n    }\n\n    function generateProjectReport(e){\n        \n        LATProjectReportPDF(lats,projects[e.target.id], products,macroActivities,activities)\n    }\n\n    function createCard(){\n\n        let cards = []\n        let count = 0\n        for(let key in projects){\n                let la = []\n                count = 0\n                for (let latKey in lats){\n                    if (lats[latKey].ProjectKey === projects[key].Key){\n                        la.push ( <div className='card-content'>   \n                                         {lats[latKey].Description}\n                            </div>\n                        )\n                        count++\n                    }\n\n                }\n                            \n                cards.push(\n                    <div className=\"col-sm\">\n                        <div className=\"card\" style={{\n                            marginTop: '15px',\n                            textAlign: 'justify'\n                            }}>\n\n                                <h5 className=\"card-header\"\n                                style={{\n                                    color: 'white', \n                                    background: '#001489',\n                                    display: 'flex'\n                                }}>\n                                    <div style={{width:'90%',color: 'white'}}>\n                                        {projects[key].ProjectName}\n                                    </div>\n                                    <button type='button' className='btn btn-primary' id={key} onClick={generateProjectReport}>\n                                        Baixar Relatorio\n                                    </button>\n\n                                </h5>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Linha de Acção Tematica</h5>\n                                {la}\n                                <div style={{\n                                    display: 'grid',\n                                    gridTemplateColumns: '1fr 1fr', \n                                    marginTop: '10px'  \n                                }}>\n                                    <a  className=\"btn btn-primary\" value={count} onClick={gotoDashboardProduct} id={`${count}.${key}`}>\n                                        Ver Projecto\n                                    </a> \n                                    <h5 >Total : {count} </h5>\n                                </div>\n                        </div>\n                        </div>\n                    </div>\n                )\n        }\n        return cards\n    }\n\n    return (\n        <div className='home-container'>\n            {createCard()}\n        </div>\n    )\n}\n\nexport default ShowDashboard","/workspace/taskMan/src/components/projectviews/Products.jsx",["253","254"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref, remove } from \"firebase/database\"\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport ProductPDF from '../ReportsPDF/ProductPDF'\n\nfunction Product (){\n   const [products, setProducts] = useState({products:  []}) \n   const history = useHistory()\n   const dbRef = ref(db)\n   const [project, setProject] = useState()\n   const projKey = document.URL.split('=')[1]\n   const [activities, setActivities] = useState()\n   const [macroActivities, setMacroActivities] = useState()\n\n   function getProduct(){\n\n        get(child(dbRef, `Product`)).then((snapshot) => {\n            let a = []\n            if (snapshot.exists()){\n                for(let key in snapshot.val()){\n                    if (snapshot.val()[key].ProjectKey ){\n                        if (document.getElementById('role').value === 'operacional')\n                            a.push(snapshot.val()[key])\n                        else if (document.getElementById('userarea').innerHTML === snapshot.val()[key].Area){\n                            a.push(snapshot.val()[key])\n                        }\n                    }\n                }\n            }\n            a = sortByArea(a)\n            setProducts(a)\n        })\n    }\n\n    function getMCS(){\n        get(child(dbRef, 'MacroActivity')).then(snapshot => {\n            if (snapshot.exists()){\n                setMacroActivities(snapshot.val())\n            }\n        })\n    }\n\n    function getActivities(){\n        get(child(dbRef, 'Activity')).then(snapshot => {\n            if (snapshot.exists()){\n                setActivities(snapshot.val())\n            }\n        })\n    }\n\n    useEffect( () => {\n        getProject()\n        getProduct()\n        getMCS()\n        getActivities()\n    },[])\n\n    function sortByArea(a){\n        \n        a.sort((a,b) => {\n            let fa = a.Area,\n            fb = b.Area\n\n            if (fa < fb) {\n                return -1;\n            }\n            if (fa > fb) {\n                return 1;\n            }\n            return 0;\n        })\n        return a\n    }\n\n    function getProject (){\n        get(child(dbRef, `Project/${projKey}`)).then((snapshot) => {\n            if (snapshot.exists())\n                setProject(snapshot.val())\n        })\n        return project\n    }\n\n    function gotoMcs(e){\n        history.push({\n            pathname: '/macroactivities',\n            search: `?key=${e.target.id}`,\n        })\n    }\n\n    function searchProduct(e){\n        \n        let a = []\n        if (e.target.value === ''){\n            getProduct()\n        }\n        else{\n\n            let array = []\n            for( let key in products){\n                array.push(products[key])\n            }\n\n            const a = array.filter(element => element.Name.toLowerCase().includes(e.target.value.toLowerCase()))\n            const b = {}\n            for (let key2 in a){\n                for (let key3 in products ){\n                    if ( a[key2].Name === products[key3].Name){\n                       b[key3] = a[key2]\n                       break \n                    }\n                }\n            }\n            setProducts(b)\n        }\n    }\n\n    function updateProduct(e){\n        history.push({\n            pathname: '/updateproduct',\n            search: `?key=${e.target.id}`,\n        })\n    }\n\n    function deleteProduct(e){\n\n        document.getElementById(`${e.target.id}`).click()\n        \n        get(child(dbRef, 'Product')).then((snapshot ) =>{\n\n            if (snapshot.exists()){\n\n                for (let pKey in snapshot.val()){\n                    if (snapshot.val()[pKey].Key === e.target.value){\n                        console.log(pKey)\n                        remove(ref(db, `Product/${pKey}`)).then(s => {\n                            alert('Producto eliminado com sucesso')\n                            getProduct()\n                        })\n                    }\n                }\n            }\n\n        })\n    }\n    \n    function createPDF(e){\n         ProductPDF (products[e.target.id], macroActivities, activities)    \n    }\n\n    function buildTable(){\n        \n        var values = []\n        let count = 0\n\n        if (products !== null ){\n            for(let key in products){\n               values.push(\n                <button \n                    style={{background: 'transparent',\n                            border: 'none',\n                            width: '100%',\n                            outline: 'none',\n                        }}\n                >\n                    <div className='rows-report' id={`${count++}.${products[key].Key}`} >\n                        <div className='colmns-report'>\n                        <ul >\n                            <li >\n                                {products[key].Area}\n                            </li>\n                            <li onClick={gotoMcs} id={`${products[key].Key}`} >\n                                {products[key].Name}\n                            </li>\n                            <li >\n                                {products[key].Status}\n                            </li>\n                            <li id={`${count++}.${key}`} >\n                                  <i className=\"bi bi-pencil\" onClick={updateProduct} id={`${products[key].Key}`}/>\n                            </li>\n                            <li id={`delete.${count}.${products[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`}>\n                                 <i className=\"bi bi-trash\" />\n                            </li>\n                            <li id={`${count}.${key}`}>\n                                        <i className=\"bi bi-file-earmark-arrow-down\" style={{\n                                                fontSize: '1.3rem',\n                                                color: 'blue'\n                                            }}\n                                            onClick={createPDF}\n                                            id={`${key}`}\n                                        />   \n                                    </li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                            <form>\n                                <div className=\"form-group\" >\n                                    <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Producto ?</label>\n                                </div>\n                            </form>\n                                </div>\n                                    <div className=\"modal-footer\">\n                                        <button type=\"button\" id={`${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                        <button type=\"button\" value ={products[key].Key} id={count} onClick={deleteProduct} className=\"btn btn-primary\">Sim</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                </button>\n            )\n            }\n        }\n\n\n        function add(e){\n            history.push({\n                pathname: '/addproducts',\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\n            })\n        }\n\n        function back(e){\n            window.history.back()\n        }\n\n        return( \n        <div className='product-container'\n        >\n            <div className='title' id='title'>\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                         marginRight: '20px'\n                }} onClick={back}/>\n                <input type='tex' className=\"form-control\" onChange={searchProduct} id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"/>\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n            \n            <div className='table-container'>\n                <div className='header-container'>\n                    <div className='report-header'>Area</div>\n                    <div className='report-header'>Nome do Producto</div>\n                    <div className='report-header'>Estado</div>\n                    <div className='report-header'>Actualizar</div>\n                    <div className='report-header'>Apagar</div>\n                    <div className='report-header'>Gerar Relatorio</div>\n                </div>\n                {values}\n            </div>\n        </div>\n        )\n    }\n\n    return buildTable()\n\n}\n\nexport default Product","/workspace/taskMan/src/components/projectviews/Projects.jsx",["255","256"],"import React, { useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { child, get, getDatabase, ref, remove } from \"firebase/database\"\nimport './Projects.css'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\nimport { useState } from 'react'\n\nfunction Projects (){\n    \n    const [projects, setProjects]  = useState({projs: []})\n    const history = useHistory()\n    const dbRef = ref(db)\n    const userRole = document.getElementById('role').value\n    const userProjects = document.getElementById('userprojects').innerHTML\n\n    function getProject(){\n\n        get(child(dbRef, `Project`)).then((snapshot) => {\n            let a = {}\n            if (snapshot.exists())\n            {\n                for (let key in snapshot.val()){\n                    if (userRole !== 'operacional' && userProjects.toLowerCase() === snapshot.val()[key].ProjectName.toLowerCase() ){\n                        a[key] = snapshot.val()[key]\n                    } if (userRole === 'operacional'){\n                        a[key] = snapshot.val()[key]\n                    }\n                }\n                setProjects(a)\n            }\n            else\n                alert('no data to load from db server')\n        })\n    }\n\n    function updateProject(e){\n        let productKey = e.target.id\n        \n        if (document.getElementById('role').value !== 'operacional'){\n            alert('Não tens permição para Actualzizar dados do Projecto')\n            return \n        }\n        history.push({\n            pathname: '/updateproject',\n            search: `?key=${productKey}`,\n            })\n    }\n\n\n    function handleButtonEvent(e){\n       \n         const userProject = document.getElementById('userprojects').innerHTML\n         \n         const clickedProject = document.getElementById(e.target.id).innerHTML\n\n         if (document.getElementById('role').value === 'operacional' || userProject.toLowerCase() === clickedProject.toLowerCase()){\n            history.push({\n                pathname: '/products',\n                search: `?key=${e.target.id}`,\n              })\n         }else {\n            alert(`Não pode ver as informaçoes deste projecto, porque não foi cadastrado para o ${clickedProject}`)\n            return \n        }\n  \n     }\n\n     function searchProject(e){\n        \n        console.log(projects)\n\n        if (e.target.value === ''){\n            getProject()\n        }\n        else{\n          \n            let array = []\n            for( let key in projects){\n                array.push(projects[key])\n            }\n\n            const a = array.filter(element => element.ProjectName.toLowerCase().includes(e.target.value.toLowerCase()))\n            const b = {}\n            for (let key2 in a){\n                for (let key3 in projects ){\n                    if ( a[key2].ProjectName === projects[key3].ProjectName){\n                       b[key3] = a[key2]\n                       break \n                    }\n                }\n            }\n            setProjects(b)\n        }\n     }\n\n     function deleteProject(e){\n\n        document.getElementById(`closemodal${e.target.id}`).click()\n        \n        if (document.getElementById('role').value !== 'operacional'){\n            alert('Não tens permissão para apagar projectos')\n            return \n        }\n\n        remove(ref(db, `Project/${e.target.value}`)).then(() => {\n            const dbRef = ref(db)\n            get(child(dbRef, `Project`)).then((snapshot) => {\n                if (snapshot.exists())\n                    setProjects({projs: snapshot.val()})\n        \n            })\n            alert('Projecto eliminado com sucesso')\n        \n        }).catch(() => {\n            alert('Erro ao eliminar o projecto')\n        })\n    }\n \n    useEffect( () => {\n        getProject()    \n    },[])\n\n    function buildTable(){\n        var values = []\n        let count = 0\n        if (projects !== null ){\n            for(let key in projects){\n               values.push(\n                <button \n                    style={{background: 'transparent',\n                            border: 'none',\n                            width: '100%',\n                            outline: 'none',\n                        }}\n                >\n                    <div className='rows-report' id={`${count++}.${projects[key].Key}`}>\n                        <div className='colmns-report'id={`${count++}.${projects[key].Key}`} >\n                            <ul id={`${count++}.${projects[key].Key}`}>\n                                <li id={`${count++}.${key}`}>\n                                    {values.length + 1}\n                                </li>\n                                <li id={`${projects[key].Key}`} key={`${projects[key].ProjectName}`} onClick={handleButtonEvent}>\n                                    {projects[key].ProjectName}\n                                </li>\n                                <li id={`${count++}.${projects[key].Key}`}>\n                                    {projects[key].TypeOfActivity}\n                                </li>\n                                <li className='project-icons'>\n                                    <i className=\"bi bi-pencil\" id={`${key}`} onClick={updateProject}/>\n                                </li>\n                                <li className='project-icons' id={`${count++}.${projects[key].Key}`}>\n                                    <i className=\"bi bi-trash\" id={`delete.${count}.${projects[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} \n                                    />    \n                                </li>\n                            </ul>\n                        </div>\n\n                        <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div className=\"modal-dialog\" role=\"document\">\n                                <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"modal-body\">\n                                <form>\n                                    <div className=\"form-group\" >\n                                        <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Projecto ?</label>\n                                    </div>\n                                </form>\n                                    </div>\n                                        <div className=\"modal-footer\">\n                                            <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                            <button type=\"button\" value={key} id={count} onClick={deleteProject} className=\"btn btn-primary\">Sim</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>    \n                        </div>\n                </button>\n               )    \n            }\n        }\n\n        function add(e){\n            history.push({\n                pathname: '/addproject',\n            })\n        }\n        \n        return( \n        <div >\n            <div className='title' id='title'>\n                <input type='tex' onChange={searchProject} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n            <div className='header-container'>\n                <div className='report-header'>Nr</div>\n                <div className='report-header'>Nome do Projecto</div>\n                <div className='report-header'>Tipo de Actividade</div>\n                <div className='report-header'>Actualizar</div>\n                <div className='report-header'>Apagar</div>\n            </div>\n                {values}\n            </div>\n        )\n    }\n    return buildTable()\n}\n\nexport default Projects","/workspace/taskMan/src/components/projectviews/Activities.jsx",["257","258","259"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { child, get, ref, remove} from \"firebase/database\"\nimport {useState,useEffect} from 'react'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\nimport './Activity.css'\nimport ActivitySinglePDF from '../ReportsPDF/ActivitySinglePDF'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport { getStorage } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\n\n\nfunction Activities (){\n    \n    const [activity, setActivity ] = useState([])\n    const [keys, setKeys ] = useState([])\n    const history =  useHistory()\n    const listOfImages = storageRef(Storage, 'Activity/')\n    const [imageList, setImageList] = useState([])\n    \n    const dbRef = ref(db)\n\n    useEffect(() => {\n        getActivities()\n    },[])\n\n\n    function getActivities(){\n        \n        get(child(dbRef,`Activity`)).then((snapshot) => {\n            \n            if (snapshot.exists())\n            {\n                let acts = []\n                let aa = []\n                const vals = snapshot.val()\n            \n                for (let a in vals){\n                \n                    if (document.URL.split('=')[1] == vals[a].MacroActivityKey){\n                            acts.push(vals[a])\n                            aa.push(a)\n                    }\n                    setActivity(acts)\n                    setKeys(aa)\n                } \n                listAll(listOfImages).then((response) => {\n                    let urls = []\n                    response.items.forEach(item => getDownloadURL(item).then(url =>{\n                        for (let aKey in activity){\n                        //    console.log(url.includes(activity[aKey].Key))\n                            if (url.includes(activity[aKey].Key))\n                                urls.push(url)\n                        }\n                    }))\n                    setImageList(urls)\n                })\n            }else{\n                alert('Sem actividades para carregar')\n            }\n        })\n        console.log(imageList)\n\n    }\n    \n    function handleButtonEvent(e){\n\n        let productKey = e.target.id\n        let key  = productKey.split('.')\n \n        if (key[0] === 'update'){\n            history.push({\n                pathname: '/updateactivity',\n                search: `?key=${key[2]}`,\n            })    \n        } \n   }\n\n   // create single page report with details from acticit\n   function createPDF(e){\n        \n        console.log(imageList)\n        console.log(imageList[e.target.id])\n\n       ActivitySinglePDF(activity[e.target.id],e.target.value)\n    }\n\n    function deleteActivity(e){\n        \n        remove(ref(db, `Activity/${e.target.value}`)).then(\n            () => {\n                document.getElementById(`closemodal${e.target.id}`).click()\n                alert('Actividade Apagada com sucesso')\n                getActivities()\n            }\n        ).catch(() => {\n            alert('Erro ao apagar a actividade')\n        })\n    }\n\n    /*\n    function filterImageAndActivity(){\n\n        let a = []\n\n        for (let aKey in activity){\n\n            for (let imgKey in imageList){\n                if (imageList[imgKey].includes(activity[aKey].Key)){\n                    a[aKey] = imageList[imgKey]\n                }\n            }\n        }\n        return a\n    }\n    */\n    function buildTable (){\n        var values = []\n        let count = 0\n        \n        for(let key in activity){\n              values.push( \n                <div>\n                    <button onClick={handleButtonEvent}\n                        style={{background: 'transparent',\n                                border: 'none',\n                                width: '100%',\n                                outline: 'none',\n                            }}\n                        >\n                        <div className='rows-report' id={`${count++}.${activity[key].Key}`}>\n                            <div className='colmns-report'id={`${count++}.${activity[key].Key}`} >\n                                <ul id={`${count++}.${activity[key].Key}`}>\n                                   \n                                    <li id={`${count++}.${activity[key].Key}`}>\n                                        {activity[key].Name}\n                                    </li>\n                                    \n                                    <li className='project-icons' id={`${activity[key].Key}`}>\n                                        <i className=\"bi bi-pencil\" id={`update.${count++}.${activity[key].Key}`}\n                                          />\n                                    </li>\n\n                                    <li className='project-icons' id={`${count++}.${activity[key].Key}`}>\n                                        <i className=\"bi bi-trash\" id={`delete.${count++}.${activity[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} />\n                                    </li>\n                                \n                                    <li className='project-icons' id={`${count}`} >\n                                        <i className=\"bi bi-info\" data-toggle=\"modal\" data-target={`#exampleModal${key}`}/>                                 </li> \n                                    <li id={`${count}`} >\n                                        <i id={`${key}`}className=\"bi bi-file-earmark-arrow-down\" style={{\n                                                fontSize: '1.3rem',\n                                                color: 'blue'\n                                            }}\n                                            onClick={createPDF}\n                                        />   \n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </button>\n                \n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação </h5>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                 Apagar Actividade ?\n                            </div>\n                            <div className='modal-footer'>\n                                 <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                 <button type='button'  id={count} className='btn btn-primary' value= {keys[key]} onClick={deleteActivity}> Sim</button>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n                    \n\n                    <div className=\"modal fade\" id={`exampleModal${key}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog\" role=\"document\">\n                            <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Detalhes da actividade</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <form>\n                                        <ul >\n                                            <li className='modal-details-row'>\n                                                <label>Actividade </label> <div className='activity-detail'>{activity[key].Name} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Descrição </label> <div className='activity-detail'>{activity[key].Description} </div> \n                                            </li> \n                                            <li className='modal-details-row'>\n                                                <label>Lugar </label> <div className='activity-detail'>{activity[key].Location} </div> \n                                            </li> \n                                            <li className='modal-details-row'>\n                                                <label>Data de Inicio </label> <div className='activity-detail'>{activity[key].StartTime} </div> \n                                            </li> \n                                            <li className='modal-details-row'>\n                                                <label>Data Final </label> <div className='activity-detail'>{activity[key].DeadLine} </div> \n                                            </li> \n                                            <li className='modal-details-row'>\n                                                <label>Hora </label> <div className='activity-detail'>{activity[key].Time} </div> \n                                            </li > \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Duração </label> <div className='activity-detail'>{activity[key].Duration} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Homens </label>  <div className='activity-detail'>{activity[key].Men} </div> \n                                            </li > \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Mulher </label> <div className='activity-detail'>{activity[key].Women} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Meninos </label> <div className='activity-detail'>{activity[key].Boys} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Meninas </label> <div className='activity-detail'>{activity[key].Girls} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Total </label> <div className='activity-detail'>{activity[key].Total} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Esperado </label>  <div className='activity-detail'>{activity[key].Waited} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Etereonidade </label> <div className='activity-detail'>{activity[key].Heterogenity} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Proximos passos </label> <div className='activity-detail'>{activity[key].NextSteps} </div> \n                                            </li> \n                                            \n                                            <li className='modal-details-row'>\n                                                <label>Comentarios </label>  <div className='activity-detail'>{activity[key].Comments} </div> \n                                            </li>\n                                            \n                                        {/*  <li className='modal-details-row'>\n                                                <label>Imagem </label> \n                                                 <img src={img[key]} alt='Sem Imagem para Carregar'/> \n                                        </li> */}\n                                        </ul>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        return values\n    }\n\n    function add(e){\n        history.push({\n            pathname: '/addactivities',\n            search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\n        })\n    \n    }\n\n    function back(e){\n        window.history.back()\n    }\n\n    return( \n        <div classNameName='table-container'>\n            <div className='title' id='title'>\n            <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                        marginRight: '20px'\n                }} onClick={back}/>\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n        \n            <div className='header-container'>\n                <div className='report-header'>Actividade</div>\n                <div className='report-header'>Editar</div>\n                <div className='report-header'>Apagar</div>\n                <div className='report-header'>Mostrar</div>\n                <div className='report-header'>Relatorio</div>\n                \n                <i className=\"bi bi-info-circle-fill\"\n                            style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}\n                            />  \n            </div>\n                {buildTable()}\n        </div>\n    )\n}\n\nexport default Activities","/workspace/taskMan/src/components/projectviews/NewsLetter.jsx",["260","261","262","263","264","265","266"],"import React from 'react'\nimport './NewsLetter.css'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref,remove,update, } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction NewsLetter (){\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \n    const [imageList, setImageList] = useState([])\n    const listOfImages = storageRef(Storage, 'Newsletter/')\n    const history = useHistory()\n    const dbRef = ref(db)\n\n      useEffect( () => {\n        getNewsletterImages()\n        getNewsletter()\n         }\n     ,[])\n \n     function getNewsletterImages(){\n        listAll(listOfImages).then((response) => {\n            let urls = []\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\n                urls.push(url)\n                setImageList(urls)\n            }))\n         })\n     }\n\n     function getNewsletter(){\n        get(child(dbRef, `NewsLetter`)).then((snapshot) => {\n            if (snapshot.exists())\n                setnewsLetter(snapshot.val())\n            else\n                alert('Sem newsletter para mostrar')\n        })\n    }\n\n     function seeMore(e){\n        history.push({\n            pathname: '/readnewsletter',\n            search: `?key=${e.target.id.split('.')[1]}`\n        })\n     }\n\n     function updateNewsletter(e){\n        history.push({\n            pathname: '/updatenewsletter',\n            search: `?key=${e.target.id}`\n        })\n     }\n\n     function deleteNewsLetter(e){\n\n        remove(ref(db, `NewsLetter/${e.target.value}`)).then(() => {\n            alert('Newsletter apagado com sucesso')\n            getNewsletter()\n        }).catch(() => {\n            alert('Erro ao apagar a Newsletter')\n        })\n\n        document.getElementById(`closemodal${e.target.id}`).click()\n     }\n \n     function buildTable(){\n         \n         var values  = []     \n         let count = 0\n         let index = 0\n \n         if (newsLetter !== null ){\n             for(let key in newsLetter){\n                for (let innerKey in newsLetter[key]){\n                        values.push(\n                            <button   style={{background: 'transparent',\n                                           border: 'none',\n                                           width: '100%',\n                                           outline: 'none',\n                                       }}>\n                               <div className=\"card card-container\" style={{width: '18rem', marginTop: '10px'}}>\n                               <div style={{display: 'flex',flexDirection: 'row',width: '100%',padding: '10px'}}>\n                                    <button type='button' className='btn btn-danger' data-toggle=\"modal\" data-target={`#exampleModal${key}`} > Apagar </button> \n                                    <button type='button' className='btn btn-secondary' onClick={updateNewsletter} id={key} > Editar </button>\n                               </div>\n                                   <div className=\"card-body\">\n                                       <h5 className=\"card-title\" style={{textAlign: 'justify'}}>{newsLetter[key][innerKey].Title}</h5>\n                                       <p className=\"card-text\" style={{textAlign: 'justify'}}>\n                                           {newsLetter[key][innerKey].Body.split(\" \").splice(0, 20).join(\" \")} ...\n                                       </p>\n                                       <a className=\"btn btn-primary\" onClick={seeMore} id={`${count++}.${key}`}>Ver Mais</a>\n                                   </div>\n                               </div>\n                               <div className=\"modal fade\" id={`exampleModal${key}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                               <div className=\"modal-dialog\" role=\"document\">\n                                   <div className=\"modal-content\">\n                                   <div className=\"modal-header\">\n                                       <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                                       <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                       <span aria-hidden=\"true\">&times;</span>\n                                       </button>\n                                   </div>\n                                   <div className=\"modal-body\">\n                                   <form>\n                                       <div className=\"form-group\" >\n                                           <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Newsletter ?</label>\n                                       </div>\n                                   </form>\n                                       </div>\n                                           <div className=\"modal-footer\">\n                                               <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                               <button type=\"button\" value ={key} id={count} onClick={deleteNewsLetter} className=\"btn btn-primary\">Sim</button>\n                                           </div>\n                                       </div>\n                                   </div>\n                               </div>  \n                       </button>\n                       )\n                        break\n                }\n            }\n         }\n\n         function add(e){\n            const key = e.target.id.split('.')\n            history.push({\n                pathname: '/addnewsletter',\n              })\n         }\n\n         return( \n         <div className='table-container'>\n            <div className='title' id='title'>\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n            {values}\n         </div>\n         ) \n     }\n\n    return buildTable()\n }\n\nexport default NewsLetter","/workspace/taskMan/src/components/projectviews/Users.jsx",["267","268","269","270"],"/workspace/taskMan/src/components/projectviews/ReadNewsLetter.jsx",["271","272","273"],"import React from 'react'\nimport { useState,useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { child, get, ref } from \"firebase/database\"\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction ReadNewsNetter(){\n\n    const [newsletter, setnewsLetter] = useState({})\n    const [imageList, setImageList] = useState([])\n    const newsletterKey = document.URL.split('=')[1]\n    const listOfImages = storageRef(Storage, `Newsletter/${newsletterKey}`)\n   \n    useEffect( () => {\n        const dbRef = ref(db)\n\n        listAll(listOfImages).then((response) => {\n         let urls = []\n         response.items.forEach(item => getDownloadURL(item).then(url =>{\n             urls.push(url)\n             setImageList(urls)\n         }))\n        })\n\n\n        get(child(dbRef, `NewsLetter/${newsletterKey}`)).then((snapshot) => {\n                if (snapshot.exists()){\n                        setnewsLetter(snapshot.val())\n                }\n            }\n        )},[])\n\n        function back(e){\n            window.history.back()\n        }\n\n        function buildNewsLetter(){\n           \n            let a = []\n\n            for(let key in newsletter){\n                for (let innerKey in newsletter[key]){\n                \n                    a.push(<div>\n                        <div className='title' style={{fontWeight: '500',marginTop: '15px' }}>\n                            {newsletter[key].Title}\n                        </div>\n\n                        <div className='body'>\n                            {newsletter[key].Body}\n                        </div>\n                        <div className='images' style={{marginTop: '20px'}}>\n                            <img src={imageList} className=\"card-img-top\" alt=\"...\"/>\n                        </div>\n                    </div>)\n                    break\n                }\n            }\n            return a \n        }\n     \n        return (\n                    <div className='container'>\n                        <div className='title' id='title'>\n                            <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                marginRight: '20px'\n                            }} onClick={back}/>\n                        </div>\n                        {buildNewsLetter()}        \n                    </div>\n            )\n     \n}\n\nexport default ReadNewsNetter","/workspace/taskMan/src/components/projectviews/Reports.jsx",["274","275","276","277","278","279"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref } from \"firebase/database\"\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport ActivityPDF from '../ReportsPDF/ActivityPDF'\n\nfunction Reports(){\n\n    const [macroActivities, setMacroActivities ] = useState()\n    const [activities, setActivities ] = useState()\n    const [products, setProducts] = useState()\n    const [projects, setProjects ] = useState()\n    const [wholeData, setWholeData] = useState({})\n    const [rows, setRows ] = useState()\n    const dbRef = ref(db)\n\n    function getProducts(){\n        get(child(ref(db), 'Product')).then( snapshot => {\n            if (snapshot.exists()){\n                setProducts(snapshot.val())\n            }\n        })\n    }\n\n    function getMacroActivities(){\n        get(child(ref(db), 'MacroActivity')).then( snapshot => {\n            if (snapshot.exists()){\n                setMacroActivities(snapshot().val())\n            }\n        })\n    }\n\n    function getProjects(){\n\n        getProducts()\n        getMacroActivities()\n\n        get(child(ref(db), 'Project')).then( snapshot => {\n            if (snapshot.exists()){\n                setProjects(snapshot.val())\n                let a = {}\n                for (let projectKey in projects){\n                    for (let productKey in products){\n                        if ( products[productKey].ProjectKey === projects[projectKey].Key){\n                            for (let mcsKey in macroActivities){\n                                if (macroActivities[mcsKey].ProductKey === products[productKey].Key){\n                                    a[mcsKey] = { \n                                                        ProjectName: `${projects[projectKey].ProjectName}`,\n                                                        ProductName:  `${products[productKey].Name}`,\n                                                        MacroActivityName:  `${macroActivities[mcsKey].Name}}`\n                                                     }\n                                }\n                            }\n                        }\n                    }\n                }\n                setWholeData(a)\n            }\n        })\n\n    }\n\n    function getMacroActivities(){\n        \n        get(child(ref(db), `MacroActivity`)).then((snapshot) => {\n            if (snapshot.exists()){\n                setMacroActivities(snapshot.val())\n            }\n        })\n    }\n\n    useEffect( () => {\n        getProjects()\n            \n            get(child(dbRef, 'Activity')).then( snapshot => {\n\n                if (snapshot.exists()){\n                    setActivities(snapshot.val())\n                }\n            })\n        }\n    ,[])\n\n    function getActivities(mcs){\n\n        let a = []\n        let count = 0\n        for (let index in activities.acts){\n            if (mcs.Key === activities.acts[index].MacroActivityKey){\n                a.push(activities.acts[index])\n            }\n        }\n        return a\n    }\n\n\n    function generatePDF(e){\n        \n        const key = e.target.id.split('.')[1]\n        \n        const macroAct = macroActivities.mcs[key]\n        \n        const acts = getActivities(macroAct)\n\n        ActivityPDF(acts, macroAct)\n    }\n\n    function getRows(){\n        let values = []\n        let index = 0\n        let count = 0\n\n        getProjects()\n        setTimeout(function doesnothing(){},1)\n        \n        for(let key in wholeData){\n            console.log(wholeData)\n            values.push(                 \n                 <div> \n                    <button \n                                style={{background: 'transparent',\n                                    border: 'none',\n                                    width: '100%',\n                                    outline: 'none',\n                                }}>\n\n                        <div className='rows-report' id={`${count++}.${key}`} >\n                            <div className='colmns-report'>\n                                <ul >\n                                    <li>\n                                        {++index}\n                                    </li>\n                                \n                                    <li id={`${count++}.${key}`} >\n                                        {wholeData[key].ProjectName}\n                                    </li>\n                                   \n                                    <li id={`${count++}.${key}`}>\n                                        {wholeData[key].ProductName}\n                                    </li>\n                                   \n                                    <li id={`${count++}.${key}`} >\n                                        {wholeData[key].MacroActivityName}\n                                    </li>\n                                    \n                                    <li id={`${count++}.${key}`}>\n                                        <i id={`${count++}.${key}`} className=\"bi bi-file-earmark-arrow-down\" style={{color: 'blue', fontSize: '1.2rem'}}\n                                            onClick={generatePDF}\n                                        />\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </button>\n                </div>)\n             }\n             return values\n    }\n\n    return (\n        <div>\n            <div className='table-container'>\n                <div className='title' id='title'>\n                    <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                    <button type='button' className='btn btn-danger' style={{marginLeft: '10px'}}>Relatotio Completo</button>\n                </div>\n                <div className='header-container'>\n                    <div className='report-header'>Nr</div>\n                    <div className='report-header'>Projecto</div>\n                    <div className='report-header'>Producto</div>\n                    <div className='report-header'>Macro Actividade</div>\n                    <div className='report-header'>Baixar Relatorio</div>\n                </div>\n                    {getRows()}\n                </div>\n            </div>\n    )\n}\n\nexport default Reports\n","/workspace/taskMan/src/components/projectviews/LAT.jsx",["280","281","282","283"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\n\n\nfunction Lat (){\n   const [products, setProducts] = useState({products:  []}) \n   const history = useHistory()\n   const dbRef = ref(db)\n        \n    useEffect( () => {\n           \n            get(child(dbRef, `Product`)).then((snapshot) => {\n                    if (snapshot.exists()){\n                        console.log(snapshot.val())\n                        setProducts({projects: snapshot.val()})\n                    }\n                    else{\n                        alert('no data to load from db server')\n                   }\n                })\n        }\n    ,[])\n\n\n    function filterProducts(prods){\n        let prodArray = []\n    \n        for(let p in prods.projects){\n            \n            if (prods.projects[p].LatKey === document.URL.split('=')[1]){\n                prodArray.push(prods.projects[p])\n             }\n        }\n        return prodArray\n    }\n\n    function convertStatusToPercentage(percentage){\n\n        if (percentage === 'Não Iniciado'){\n            percentage = 0\n        }else if (percentage === 'Em progresso'){\n            percentage = 0.5\n        }else if (percentage === 'Cancelado'){\n            percentage = 0\n        }else if (percentage === 'Concluido'){\n            percentage = 1\n        }\n        return percentage\n    }\n\n    function buildTable(){\n        \n        let values = []\n        let prods = filterProducts(products)\n        \n        if (products !== null ){\n            for(let index in prods){\n                values.push(\n                    <div className='rows-report' >\n                        <div className='colmns-report'>\n                        <ul >\n                            <li >\n                                {prods[index].Name}\n                            </li>\n                            <li >\n                                {prods[index].Status}\n                            </li>\n                            <li>\n                                {convertStatusToPercentage(prods[index].Status) * 100}%\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                )\n            }\n        }\n\n        function back(){\n            window.history.back()\n        }\n        return( \n        <div className='table-container'>\n\n            <div className='header-container'>\n                <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                         marginRight: '20px'\n                                                     }} \n                onClick={back}/>\n                <div className='report-header'>Nome do Producto</div>\n                <div className='report-header'>Estado</div>\n                <div className='report-header'>%</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n    return buildTable()\n}\n\nexport default Lat","/workspace/taskMan/src/components/projectviews/EditHomeContent.jsx",["284","285","286"],"import React from 'react' \nimport './EditHomeContent.css'\nimport {useState, useEffect} from 'react'\nimport {set,ref} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\nimport {v4 as uuidv4} from 'uuid'\nimport { child, get } from \"firebase/database\"\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction EditHomeContent(){\n    const [imageList, setImageList] = useState([])\n    const listOfImages = storageRef(Storage, 'HomeContent/')\n    const [image, setImages] = useState({})\n\n    const [aboutPomar, setPomar] = useState({\n            Key: uuidv4(),\n            About: ''}\n        )\n        \n    useEffect(()=>{\n        const dbRef = ref(db)\n        \n        listAll(listOfImages).then((response) => {\n            let urls = []\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\n                urls.push(url)\n                setImageList(urls)\n            }))\n         })\n    \n        get(child(dbRef,'HomeContent')).then((snapshot) => {\n            if (snapshot.exists())\n             for (let key in snapshot.val())\n                setPomar({Key: aboutPomar.Key, About: snapshot.val()[key].About})\n            }\n        )\n    }, [])\n    \n    function back(e){\n        window.history.back()\n    }\n\n    function setFile(e){\n            setPomar({\n                Key: aboutPomar.Key,\n                About: aboutPomar.About,\n                File: e.target.files\n            })\n    }\n\n    function submitText(e){\n        set(ref(db, 'HomeContent/' + uuidv4()), aboutPomar).then(()=>\n            {\n                alert('Texto alterado com sucesso')\n            }\n        )\n  \n    }\n    function submit(e){\n\n        if (image !== null){\n            uploadBytes( refStorage(Storage,`HomeContent/${aboutPomar.Key}`),image)\n            .then(() => {\n                alert('Imagem adicionada com Sucesso')\n            })\n        }\n    }\n\n    function setAboutPomar(e){\n        setPomar({About: e.target.value, Key: aboutPomar.Key})\n    }\n\n    function setFile(e){\n        setImages(e.target.files[0])\n    }\n\n    return (\n        <div className='edit-container'>\n              <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                        <p>Modificar Conteudo do Home</p>\n              </div> \n              \n            <div className='about-pomar'>\n                <label for=\"exampleInputEmail1\">Sobre o Pomar</label>\n                <textarea rows='10' type='text' onChange={setAboutPomar} \n                    className=\"form-control\" aria-describedby=\"emailHelp\"  value={aboutPomar.About}/>\n                <div className='submit-info'>\n                    <button className='btn btn-primary' onClick={submitText}>\n                        Gravar Texto\n                    </button>\n                </div>\n            </div>\n            <div className='upload-pic'>\n                <label for=\"exampleInputEmail1\">Carregar Imagem</label>\n                <input type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className='submit-info'>\n                <button className='btn btn-primary' onClick={submit}>\n                    Gravar Imagem\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditHomeContent\n","/workspace/taskMan/src/components/projectviews/ShowLats.jsx",["287","288","289","290","291"],"import React, { useEffect } from 'react'\nimport { useState,  } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { child, get, getDatabase, ref, remove} from \"firebase/database\"\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\n\nfunction ShowLats(){\n\n    const [lats, setLats] = useState()\n    const [latKeys, setLatKeys] = useState()\n    const [projects, setProjects] = useState()\n    const dbRef = ref(db)\n    const history = useHistory()\n\n\n    function getLAT(){\n        get(child(dbRef, 'LAT')).then( snapshot => {\n\n            if (snapshot.exists()){\n                setLats(snapshot.val())\n            }\n        })\n\n    }\n\n    function  getProjects(){\n        get(child(dbRef, 'Project')).then( snapshot => {\n            if (snapshot.exists())\n                setProjects(snapshot.val())\n        })\n    }\n\n    useEffect(() => {\n        getLAT()\n        getProjects()\n    },[])\n\n    function add(e){\n        history.push({\n            pathname: '/addlat',\n        })    \n    }\n\n    function deleteLats(e){\n      remove(ref(db, `LAT/${e.target.value}`)).then(()=> {\n            alert(' LAT eliminada com Sucesso ')\n            getLAT()\n        }).catch(() => {\n            alert('Erro ao eliminar LAT')\n        })\n        document.getElementById(`closemodal${e.target.id}`).click()\n    }\n\n    function updateLAT(){\n        alert('Update will available soon')\n    }\n\n    function buildTable(){\n        var values = []\n        let count = 0\n        if (lats !== null ){\n            for(let key in lats){\n                values.push(\n                    <button \n                        style={{background: 'transparent',\n                                border: 'none',\n                                width: '100%',\n                                outline: 'none',\n                            }}\n                    >\n                        <div className='rows-report' id={`${count++}.${lats[key].Key}`}>\n                            <div className='colmns-report'id={`${count++}.${lats[key].Key}`} >\n                                <ul id={`${count++}.${lats[key].Key}`}>\n                                    <li id={`${count++}.${lats[key].Key}`}>\n                                        {lats[key].Description }\n                                    </li>\n                                    <li className='project-icons' id={`${count++}.${lats[key].Key}`}>\n                                        <i className=\"bi bi-pencil\" onClick={updateLAT} id={`update.${count++}.${key}`}\n                                        />\n                                    </li>\n                                    <li className='project-icons' id={`${count++}.${lats[key].Key}`}>\n                                        <i className=\"bi bi-trash\" id={`delete.${count}.${lats[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} \n                                        />    \n                                    </li>\n                                </ul>\n                            </div>\n\n                            <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div className=\"modal-dialog\" role=\"document\">\n                                    <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                    <form>\n                                        <div className=\"form-group\" >\n                                            <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar LAT ?</label>\n                                        </div>\n                                    </form>\n                                        </div>\n                                            <div className=\"modal-footer\">\n                                                <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                                <button type=\"button\" id={count} value={key} onClick={deleteLats} className=\"btn btn-primary\">Sim</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>    \n                            </div>\n                        </button>\n                    )    \n                }\n            }\n       return values\n    }\n    \n    function searchLAT(e){\n        let a = []\n        if (e.target.value === ''){\n            getLAT()\n        }\n        else{\n            a = lats.filter(element => element.Name.includes(e.target.value))  \n            setLats(a)\n        }\n    }\n    return (\n         <div >\n            <div className='title' id='title'>\n                <input type='tex' onChange={searchLAT} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                <button  type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n            <div className='header-container'>\n                <div className='report-header'>LAT</div>\n                <div className='report-header'>Actualizar</div>\n                <div className='report-header'>Apagar</div>\n            </div>\n            {buildTable()}\n        </div>\n    )\n}\n\nexport default ShowLats","/workspace/taskMan/src/components/forms/AddActivitiy.jsx",["292","293","294"],"import React from 'react'\nimport { useState } from 'react'\nimport {v4 as uuidv4} from 'uuid';\nimport {ref,set} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nimport './AddActivitiy.css'\n\nfunction AddActivity(){\n\n    const [image, setImage] =useState()\n    const [comprovantes, setComprovantes] = useState()\n\n    const [activity, setActivity] = useState({\n        Key: uuidv4(),\n        Id: uuidv4(),\n        MacroActivityKey: document.URL.split('=')[1],\n        Name: '',\n        Boys: '',\n        Comments: '',\n        DeadLine: '',\n        Description: '',\n        Duration: '',\n        Girls: '',\n        Heterogenity:'Sim',\n        Location: '',\n        Men: '',\n        NextSteps: '',\n        StartTime: '',\n        Time: '',\n        Total: '',\n        Waited: 'Sim',\n        Women: '',\n        User: ''\n    })\n\n    function saveActivity(e){\n\n        activity.Total = parseInt(activity.Men) + parseInt(activity.Boys) + parseInt(activity.Women) + parseInt(activity.Girls)\n\n        console.log(image)\n\n        set(ref(db, 'Activity/' + uuidv4()), activity).then(()=>\n            {\n                alert('Actividade Salva com Sucesso')\n            }\n        )\n\n        if (image !== null){\n            uploadBytes( refStorage(Storage,`Activity/${activity.Key}`),image)\n        }\n\n        if (comprovantes !== null){\n            uploadBytes(refStorage(Storage, `Activity/${activity.Key}`,comprovantes))\n        }\n        \n        document.getElementById('closemodal').click()\n        back()\n    }\n\n    function setFicheiros(e){\n\n        setComprovantes(e.target.files[0])\n\n    }\n\n\n    function setName(e){\n\n        setActivity({\n            Name: e.target.value,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setDescription(e){\n\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: e.target.value,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setLugar(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: e.target.value,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setStartTime(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: e.target.value,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setFinalDate(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: e.target.value,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setTime(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setDuration(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: e.target.value,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setMen(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: e.target.value,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setWoman(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: e.target.value,\n            User: activity.User\n        })\n    }\n\n    function setBoys(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: e.target.value,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setGirls(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: e.target.value,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setComments(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: e.target.value,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setEsperado(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: e.target.value,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setEterogenidade(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: e.target.value,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setNextSteps(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: e.target.value,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User,\n        })\n    }\n\n    function setFile(e){\n        setImage(e.target.files[0])\n    }\n\n    function back(e){\n        window.history.back()\n    }\n    \n    return (\n        <div className='form-container'>\n                 <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Adicionar Actividade\n                </div>\n            </div>\n      \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nome da actividade</label>\n            <textarea type=\"text\"  onChange= {setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Breve descrição da actividade</label>\n            <textarea type=\"text\"  onChange={setDescription} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Lugar</label>\n            <textarea type=\"text\" onChange={setLugar} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Data de Inicio</label>\n            <textarea type=\"date\"  onChange={setStartTime}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Data final</label>\n            <textarea type=\"date\"  onChange={setFinalDate}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Hora</label>\n            <textarea type=\"text\" onChange={setTime} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Duração</label>\n            <textarea type=\"text\"  onChange={setDuration} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Homens</label>\n            <textarea type=\"text\" onChange={setMen} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Mulheres</label>\n            <textarea type=\"text\"  onChange={setWoman} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Meninos</label>\n            <textarea type=\"text\"  onChange={setBoys} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Meninas</label>\n            <textarea type=\"text\" onChange={setGirls} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Esperado</label>\n            <select className=\"form-select\" aria-label=\"Default select example\" onChange={setEsperado}>\n                <option selected value=\"Sim\">Sim</option>\n                <option value=\"Não\">Não</option>\n            </select>\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Eterogenidade</label>\n            <select className=\"form-select\" onChange={setEterogenidade} aria-label=\"Default select example\" >\n                <option selected value=\"Sim\">Sim</option>\n                <option value=\"Não\">Não</option>\n            </select>\n        </div>\n     \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Comentarios</label>\n            <textarea type=\"text\"  onChange={setComments}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Proximos Passos</label>\n            <textarea type=\"text\"  onChange={setNextSteps}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Carregar Imagem</label>\n            <input type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Carregar Ficheiros</label>\n            <input type=\"file\" onChange={setFicheiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Gravar Actividade         </button>\n\n        <button type=\"button\" className=\"btn btn-secondary\">Limpar</button>\n\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Submeter Actividade ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={saveActivity}>Sim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n    </div>\n    )\n}\n\nexport default AddActivity","/workspace/taskMan/src/components/forms/AddMacroActivities.jsx",[],"/workspace/taskMan/src/components/forms/AddProducts.jsx",["295"],"import React from 'react'\nimport './AddProducts.css'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {set,ref,get,child} from 'firebase/database'\nimport {v4 as uuidv4} from 'uuid';\n\nfunction AddProducts(){\n\n    const [product, setProduct] = useState({\n        Area: 'Urbanização e Regeneração Urbana',\n        LatKey: '',\n        Name: '',\n        ProjectKey: document.URL.split('=')[1],\n        Status: 'Não Iniciado',\n        Key: uuidv4()\n    })\n\n    const [lat, setLats] = useState({})\n    \n    useEffect( () => {\n        const dbRef = ref(db)\n        \n        get(child(dbRef, `LAT`)).then((snapshot) => {\n                if (snapshot.exists()){\n                    setLats({lats: snapshot.val()})\n                }\n             }\n        )},\n    [])\n    \n    function setProductName(e){\n        setProduct({\n            Area: product.Area,\n            LatKey: product.LatKey,\n            Name: e.target.value,\n            ProjectKey: product.ProjectKey,\n            Status: product.Status,\n            Key: product.Key\n        })\n    }\n\n    function setStatus(e){\n        setProduct({\n            Area: product.Area,\n            LatKey: product.LatKey,\n            Name: product.Name,\n            ProjectKey: product.ProjectKey,\n            Status: e.target.value,\n            Key: product.Key\n        })\n    }   \n\n    function setArea(e){\n\n        setProduct({\n            Area: e.target.value,\n            LatKey: product.LatKey,\n            Name: product.Name,\n            ProjectKey: product.ProjectKey,\n            Status: product.Status,\n            Key: product.Key\n        })\n    }\n\n    function generateLATS(){\n\n        let a = []\n        a.push(<option value=\"\">Selectione uma linha de Acção Tematica</option>)\n\n        for (let key in lat.lats){\n\n            a.push(<option value={lat.lats[key].Description}>{lat.lats[key].Description}</option>)\n\n        }\n        return a\n\n    }\n    function saveProduct (e){\n\n        \n        for (let key in lat.lats){\n            console.log(lat.lats[key].Description === product.Area)\n\n            if (lat.lats[key].Description === product.Area ){\n \n                console.log(lat.lats[key].Key)\n                setProduct({\n                    Area: product.Area,\n                    LatKey: lat.lats[key].Key,\n                    Name: product.Name,\n                    ProjectKey: product.ProjectKey,\n                    Status: product.Status,\n                    Key: product.Key\n                })        \n                break\n            }\n        }\n        \n        const id = uuidv4()\n\n        set(ref(db, 'Product/' + uuidv4()), product).then(() => {\n            alert('Producto adicionado com sucesso')\n        }).catch(() => {\n            alert('Erro ao adicionar o Product')\n        })\n\n        document.getElementById(`closemodal`).click()\n        back()\n    }\n\n    function back(){\n        window.history.back()\n    }\n\n    return (\n        <div className='form-container'>\n              <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Adicionar Producto\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\n                <input type=\"text\" onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">LAT</label>\n                <select className=\"form-select\" onChange={setArea} aria-label=\"Default select example\">\n                        {generateLATS()}\n                </select>\n            </div>\n    \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\n                    <option selected value=\"Não Iniciado\">Não Iniciado</option>\n                    <option value=\"Em progresso\">Em progresso</option>\n                    <option value=\"Cancelado\">Cancelado</option>\n                    <option value=\"Concluido\">Concluido</option>\n                </select>\n            </div>\n        \n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Gravar Producto   </button>\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Submeter Producto ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" onClick={saveProduct} className=\"btn btn-primary\">Sim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        </div>\n    )\n    \n}\n\nexport default AddProducts","/workspace/taskMan/src/components/forms/AddNewsLetter.jsx",["296","297","298","299"],"import React from 'react'\nimport './AddNewsLetter.css'\nimport {useState} from 'react'\nimport {v4 as uuidv4} from 'uuid';\nimport {ref,set} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\nimport {Storage} from '../database/Storage'\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\n\nfunction AddNewsLetter(){\n    const [newsLetter, setNewsLetter] = useState({\n        Key: uuidv4(),\n        Title: '',\n        Body: '',\n        File: null \n    })\n\n    const [formElements, setFormElements ] = useState([\n        {Title:  '', Body: '', File: null },\n    ])\n    \n    function back(e){\n        window.history.back()\n    }\n\n    function saveNewsLetter(e){\n        \n        const key = uuidv4()\n        let count = 0\n\n        console.log(formElements)\n        \n        for (let index in formElements){\n            if (formElements[index].File !== null)\n                uploadBytes( refStorage(Storage,`Newsletter/${key}/${uuidv4()}`),formElements[index].File)\n        }\n\n        set(ref(db, 'NewsLetter/' + key), formElements).then(\n            ()=> {\n                alert('Newsletter adicionado com sucesso')\n            }\n        )\n        document.getElementById('closemodal').click()\n        window.history.back()\n    }\n\n    const  handleFormChange = (event, index) => {\n        const data = [...formElements]\n\n        if (event.target.name === 'File'){\n            data[index][event.target.name] = event.target.files[0]\n        }\n        else{\n            data[index][event.target.name] = event.target.value\n        }\n        setFormElements(data)\n        \n    }\n\n    const removeField = (element) => {\n        let data = [...formElements]\n        const index = element.target.id\n\n        data.splice(index,1)\n\n        setFormElements(data)\n    }\n\n    function addField(e){\n        let element =  {Title: '', Body: '', Imagem: null}\n        setFormElements([...formElements,element])\n    }\n\n    function setFile(e){\n\n    }\n    \n    return (\n        <div>\n            <div className='title-newsletter'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='newsletter-title' style={{fontSize: '1.1rem', fontWeight: '400'}}>\n                    Adicionar NewsLetter\n                </div>\n            </div>\n            <div id='newsletter-content'>\n                <form>\n                    {formElements.map((element, index) => {\n                       return ( <div key={index} style={{border: 'solid #ccc 0.1px', marginBottom: '10px'}}>\n            \n                            <div className=\"form-group\" style={{display: 'flex', flexDirection: 'column'}}>\n\n                                  <button type=\"button\" id={index} onClick={removeField} style={{width: '10%', marginBottom: '15px', marginLeft: '90%'}}className=\"btn btn-outline-secondary\">\n                                        Apagar \n                                  </button>\n                                <p>\n                                     <label for=\"exampleFormControlInput1\">Title</label>\n                                </p>\n                               \n                                <input type=\"text\" name='Title' onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title do Newsletter\"/>\n                      \n                            </div>\n                            <div className=\"form-group\" style={{'margin-top': '20px'}}>\n                                <label for=\"exampleFormControlTextarea1\" style={{'font-weight': '400'}}>Body</label>\n                                <textarea type=\"text\" name='Body' className=\"form-control\" onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\" placeholder='Body do Newsletter'/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Carregar Fotografia</label>\n                                <input name='File' type=\"file\" accept='image/*' onChange={event => handleFormChange(event, index)} className=\"form-control\" aria-describedby=\"emailHelp\" />\n                            </div>\n                        </div> )         \n                    })}\n                \n                    <div className='buttons-container' style={{'margin-top': '20px'}}>\n                        <button type=\"button\"  className=\"btn btn-secondary\" onClick={addField}>\n                            Adicionar Campo \n                        </button>\n            \n                        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                            Gravar Newsletter \n                        </button>\n                    <button type=\"button\" className=\"btn btn-secundary\">Descartar</button>\n                    </div>\n                </form>\n\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                               <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Submeter Newsletter ?</label>\n                            </div>\n                        </form>\n                            </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                    <button type=\"button\" onClick={saveNewsLetter} className=\"btn btn-primary\">Sim</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    \n            </div>\n        </div>\n    )\n}\n\nexport default AddNewsLetter","/workspace/taskMan/src/components/projectviews/Carousel.jsx",["300","301","302","303","304","305","306","307"],"import React from 'react'\nimport { useState,useEffect } from 'react'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\nimport { child, get, ref } from \"firebase/database\"\nimport Carousel from 'react-elastic-carousel';\nimport ReactDOM from \"react-dom\";\nimport Item from \"./Item\";\nimport \"./Carousel.css\";\n\nfunction CarouselHome(){\n\n    const [images, setImages] = useState([])\n    const listOfImages = storageRef(Storage, 'HomeContent')\n\n    useEffect(()=> {\n        listAll(listOfImages).then((response) => {\n         let urls = []\n         response.items.forEach(item => getDownloadURL(item).then(url =>{\n             urls.push(url)\n         }))\n         setImages(urls)\n      })\n\n    },[])\n\n    \n    \n    const breakPoints = [\n      { width: 1, itemsToShow: 1 },\n      { width: 550, itemsToShow: 2 },\n      { width: 768, itemsToShow: 3 },\n      { width: 1200, itemsToShow: 4 },\n    ];\n    \n    function buildCarouselImages(){\n        let a = []\n        images.map((element,index) => {\n            a.push( <Item> \n                        <img src={`${element}`} data-toggle=\"modal\" data-target={`#exampleModal${index}`} />\n                        <div className=\"modal fade\" id={`exampleModal${index}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\"\n                        >\n                            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                    <img className='home-img' src={`${element}`} data-toggle=\"modal\" data-target={`#exampleModal${index}`}\n                                        width={700}\n                                        style={{marginRight: '200px'}}\n                                    />\n                            </div>\n                        </div>\n                    </Item>)\n        })\n        return a\n    }\n    return (\n    <>\n        <div className=\"App\">\n        <Carousel breakPoints={breakPoints}\n            transitioning={true}           \n        >\n            {buildCarouselImages()}\n        </Carousel>\n        </div>\n    </>\n    )\n\n    \n    /*\n    return( <Carousel>\n                {images.map((item) => {\n                    {console.log(item)}\n                    <img src={`${item}`} alt='No image to load'/>\n                })}\n            </Carousel>\n    )*/\n}\n\nexport default CarouselHome","/workspace/taskMan/src/components/forms/AddUser.jsx",["308"],"/workspace/taskMan/src/components/forms/AddLAT.jsx",["309"],"import React from 'react'\nimport './AddProducts.css'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {set,ref,get,child} from 'firebase/database'\nimport {v4 as uuidv4} from 'uuid';\n\nfunction AddLAT(){\n\n\n    const dbRef = ref(db)\n    \n    const [projects, setProjects ] = useState()\n\n    const [lat, setLat] = useState({\n        Description: '',\n        Name: '',\n        ProjectKey: '',\n        Key: uuidv4()\n    })\n    \n\n    function getProjects(){\n        get(child(dbRef, `Project`)).then((snapshot) => {\n            if (snapshot.exists()){\n                setProjects(snapshot.val())\n            }\n         })\n    }\n\n    useEffect( () => {\n        getProjects() \n        },\n    [])\n    \n    \n\n    function saveLAT (e){\n\n        set(ref(db, 'LAT/' + uuidv4()), lat).then(() => {\n            alert('LAT adicionado com sucesso')\n        }).catch(() => {\n            alert('Erro ao adicionar a LAT')\n        })\n\n        document.getElementById(`closemodal`).click()\n        back()\n    }\n\n    function back(){\n        window.history.back()\n    }\n\n    function setName(e){\n        setLat({\n            Description: lat.Description,\n            Name: e.target.value,\n            ProjectKey: lat.ProjectKey,\n            Key: lat.Key\n        })\n    }\n\n    function setDescription(e){\n        setLat({\n            Description: e.target.value,\n            Name: lat.Name,\n            ProjectKey: lat.ProjectKey,\n            Key: lat.Key\n        })\n    }\n\n    function setProject(e){\n        \n        let a = ''\n        for (let key in projects){\n            if (e.target.value === projects[key].ProjectName){\n                a = projects[key].Key\n                break\n            }\n        }\n\n        setLat({\n            Description: lat.Description,\n            Name: lat.Name,\n            ProjectKey: a,\n            Key: lat.Key\n        })\n    }\n\n\n    function generateProjectSelection(){\n\n        let a = []\n        a.push(<option selected value={'Selectione Uma opção'} > Selecione um projecto</option>)\n\n        for (let key in projects){\n            a.push( \n                <option  value={projects[key].ProjectName} id={projects[key].Key}> {projects[key].ProjectName}</option>\n            )\n        }\n        return a \n    }\n\n    return (\n        <div className='form-container'>\n              <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Adicionar LAT\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Nome da Linha de Acção Tematica</label>\n                <input type=\"text\" onChange={setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Descrição</label>\n                <input type=\"text\" onChange={setDescription} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Projecto</label>\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setProject}>\n                    {generateProjectSelection()}\n                </select>\n            </div>\n        \n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Gravar LAT   \n            </button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Submeter Producto ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" onClick={saveLAT} className=\"btn btn-primary\">Sim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        </div>\n    )\n    \n}\n\nexport default AddLAT","/workspace/taskMan/src/components/forms/AddProject.jsx",["310"],"import React from 'react'\nimport './AddProject.css'\nimport {db} from '../database/DatabaseHelper'\nimport { ref,set } from \"firebase/database\"\nimport { useState } from 'react'\nimport {v4 as uuidv4} from 'uuid';\n\nfunction AddProjectForm(){\n    \n    const [project, setProject] = useState({     \n            ProjectName: '',\n            DeadLine: '',\n            GeneralObjective: '',\n            Key: uuidv4(),\n            OperatorName: '',\n            PeopleInvolved: '',\n            Result: '',\n            SpecificObjective: '',\n            TypeOfActivity: '',\n            Implementadores: '',\n            Parceiros: '',\n            Financiadores: ''\n\n    })\n\n    function setProjectName(e){\n        setProject({\n                    ProjectName: e.target.value,\n                    DeadLine: project.DeadLine,\n                    GeneralObjective: project.GeneralObjective,\n                    Key: project.Key,\n                    OperatorName: project.OperatorName,\n                    PeopleInvolved: project.PeopleInvolved,\n                    Result: project.Result,\n                    SpecificObjective: project.SpecificObjective,\n                    TypeOfActivity: project.TypeOfActivity,\n                    Implementadores: project.Implementadores,\n                    Parceiros: project.Parceiros,\n                    Financiadores: project.Financiadores\n        })\n    }\n\n    function setObjective(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: e.target.value,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setResult(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: e.target.value,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n\n        })\n    }\n\n    function setOperatorName(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: e.target.value,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setTypeOfActivity(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: e.target.value,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setSpecificObjective(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: e.target.value,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setPeopleInvolved(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: e.target.value,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n\n        })\n    }\n\n    \n    function setDeadLine(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: e.target.value,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setImplementadores(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: e.target.value,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    \n    function setParceiros(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: e.target.value,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    \n    function setFinanciadores(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: e.target.value\n        })\n    }\n\n    function back(e){\n        window.history.back()\n    }\n\n    function submitProject(e){\n\n        set(ref(db, 'Project/' + uuidv4()), project).then(() => {\n            alert('Projecto adicionado com sucesso')\n        }).catch(() => {\n            alert('Erro ao adicionar o Projecto')\n        })\n        document.getElementById('closemodal').click()\n        back()\n    }\n\n\n    return (\n        <div className='form-container'>\n\n            <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Adicionar Projecto\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Nome do Projecto</label>\n                <input type=\"text\" onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">DeadLine</label>\n                <input type=\"date\" onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Objecto do projecto</label>\n                <input type=\"text\" onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Resultado</label>\n                <input type=\"text\" onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\n            </div>\n\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Nome do operador</label>\n                <input type=\"text\" onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Tipo de actividade</label>\n                <input type=\"text\" onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            \n            \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\n                <input type=\"text\" onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n\n{/*\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Pessoal Envolvolvido</label>\n                <input type=\"text\" onChange={setPeopleInvolved} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n                    */}\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Implementadores</label>\n                <input type=\"text\" onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n          \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Parceiros</label>\n                <input type=\"text\" onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Financiadores</label>\n                <input type=\"text\" onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Gravar Projecto         </button>\n            <button type=\"button\" className=\"btn btn-secondary\">Descartar</button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Submeter Projecto ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={submitProject}>Sim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n\n        </div>\n    )\n}\n\nexport default AddProjectForm","/workspace/taskMan/src/components/updateForms/UpdateProducts.jsx",["311","312","313"],"import React from 'react'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {set,ref,get,child,update} from 'firebase/database'\nimport {v4 as uuidv4} from 'uuid';\n\nfunction UpdateProduct(){\n\n    const [product, setProduct] = useState({\n        Area: '',\n        LatKey: '',\n        Name: '',\n        ProjectKey: '',\n        Status: '',\n        Key: ''\n    })\n\n    const [lats, setLats] = useState()\n\n    const [nodeKey, setNodeKey] = useState('')\n    const dbRef = ref(db)\n    \n    function getLats(){\n        get(child(dbRef, `LAT`)).then((snapshot) => {\n            if (snapshot.exists()){\n                setLats(snapshot.val())\n            }\n        })\n    }\n\n    useEffect( () => {\n        getLats()\n        get(child(dbRef, `Product`)).then((snapshot) => {\n            if (snapshot.exists())\n                for (let key in snapshot.val())\n                    if (document.URL.split('=')[1] === snapshot.val()[key].Key){\n                        setProduct(snapshot.val()[key])\n                        setNodeKey(key)\n                    }\n        })},[])\n\n    function setProductName(e){\n        setProduct({\n            Area: product.Area,\n            LatKey: product.LatKey,\n            Name: e.target.value,\n            ProjectKey: product.ProjectKey,\n            Status: product.Status,\n            Key: product.Key\n        })\n    }\n\n    function setStatus(e){\n        setProduct({\n            Area: product.Area,\n            LatKey: product.LatKey,\n            Name: e.target.value,\n            ProjectKey: product.ProjectKey,\n            Status: e.target.value,\n            Key: product.Key\n        })\n    }   \n\n    function setArea(e){\n        setProduct({\n            Area: e.target.value,\n            LatKey: product.LatKey,\n            Name: product.Name,\n            ProjectKey: product.ProjectKey,\n            Status: product.Status,\n            Key: product.Key\n        })\n    }\n\n    function updateProduct (e){\n        const dbRef = ref(db)\n\n        update(child(dbRef, `Product/${nodeKey}`),product).then(() => {\n            alert('Producto Actualizado com Sucesso')\n        }).catch(() => {\n            alert('Erro ao actualizar o Producto')\n        })\n        window.history.back()\n        document.getElementById('closemodal').click()\n    }\n\n    function back(){\n        window.history.back()\n    }\n\n    function generateLATS(){\n        let a = []\n\n        console.log(product)\n        for (let key in lats){\n            a.push(<option value={lats[key].Description}> {lats[key].Description} </option>)\n        }\n        return a\n    }\n\n    function setStates(){\n\n        let a = []\n\n        if (product.Status === 'Não Iniciado' ){\n            a.push(<option selected value=\"\">Não Iniciado</option>)\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\n            a.push(<option value=\"Concluido\">Concluido</option>)\n        } else if (product.Status === 'Em progresso'){\n            a.push(<option selected value=\"Em progresso\">Em progresso</option>)\n            a.push(<option value=\"\">Não Iniciado</option>)\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\n            a.push(<option value=\"Concluido\">Concluido</option>)\n        }else if ( product.Status === 'Cancelado'){\n            a.push(<option selected value=\"Cancelado\">Cancelado</option>)\n            a.push(<option  value=\"Em progresso\">Em progresso</option>)\n            a.push(<option value=\"\">Não Iniciado</option>)\n            a.push(<option value=\"Concluido\">Concluido</option>)\n        }else if (product.Status === 'Concluido'){\n            a.push(<option selected value=\"Concluido\">Concluido</option>)\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\n            a.push(<option value=\"\">Não Iniciado</option>)\n        }\n        return a\n    }\n    \n    return (    \n        <div className='form-container'>\n              <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Actualizar Producto\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\n                <input type=\"text\" value={product.Name} onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n            </div>\n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">LAT</label>\n                <select className=\"form-select\" value={product.Area} onChange={setArea} aria-label=\"Default select example\">\n                    {generateLATS()}\n                </select>\n            </div>\n    \n            <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\n                    {setStates()}\n                </select>\n            </div>\n        \n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                Actualizar   </button>\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Actualizar Producto ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" onClick={updateProduct} className=\"btn btn-primary\">Sim</button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        </div>\n    )\n}\n\nexport default UpdateProduct","/workspace/taskMan/src/components/updateForms/UpdateMacroActivity.jsx",["314","315"],"import React from 'react'\nimport { useState,useEffect } from 'react'\nimport {v4 as uuidv4} from 'uuid';\nimport {ref,child,update,get} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\n\nfunction UpdateMacroActivity(){\n    const dbRef = ref(db)\n    const productKey = document.URL.split('=')[1]\n    const [macroActivity, setMacroActivity] = useState({\n        Key: uuidv4(),\n        Name: '',\n        ProductKey: document.URL.split('=')[1]\n    })\n\n    useEffect( () => {\n        get(child(dbRef, `MacroActivity/${document.URL.split('=')[1]}`)).then((snapshot) => {\n            if (snapshot.exists()){\n                setMacroActivity(snapshot.val())\n            }\n        })\n    },[])\n\n    function setName(e){\n        setMacroActivity({\n            Key: macroActivity.Key,\n            Name: e.target.value,\n            ProductKey: macroActivity.ProductKey\n        })\n    }\n    \n    function updateMacroAcivity(e){\n\n        update(child(dbRef, `MacroActivity/${document.URL.split('=')[1]}`), macroActivity).then(() => {\n            alert('Macro Actividade Actualizada com sucesso ')\n        }).catch(() => {\n            alert('Erro ao actualizar a Macro Actividade ')\n        })\n        back()\n        document.getElementById('closemodal').click()\n    }\n\n    function clear(e){\n        document.getElementById('mcs').value = ''\n        setMacroActivity({\n            Key: macroActivity.Key,\n            Name: '',\n            ProductKey: macroActivity.ProductKey\n        })\n    }\n\n    function back(){\n        window.history.back()\n    }\n    return (\n        <div className='form-container'>\n              <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Adicionar Macro Actividade\n                </div>\n            </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nome da Macro Actividade</label>\n            <input type=\"text\" id='mcs' value={macroActivity.Name}  onChange={setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Actualizar</button>\n        <button type=\"button\" className=\"btn btn-light\" onClick={clear}>Limpar</button>\n\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n            <form>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Actualizar Macro Actividade ?</label>\n                </div>\n            </form>\n                </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={updateMacroAcivity} >Sim</button>\n                    </div>\n                </div>\n            </div>\n        </div>    \n    </div>\n    )\n}\nexport default UpdateMacroActivity","/workspace/taskMan/src/components/updateForms/UpdateProject.jsx",["316","317"],"import React, { useEffect } from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { ref,set,get,update,child } from \"firebase/database\"\nimport { useState } from 'react'\n\nfunction UpdateProject(){\n    \n    const [project, setProject] = useState({     \n            ProjectName: '',\n            DeadLine: '',\n            GeneralObjective: '',\n            Key: '  ',\n            OperatorName: '',\n            PeopleInvolved: '',\n            Result: '',\n            SpecificObjective: '',\n            TypeOfActivity: '',\n            Implementadores: ' ',\n            Parceiros: ' ',\n            Financiadores: ' '\n    })\n\n    function setProjectName(e){\n        setProject({\n                    ProjectName: e.target.value,\n                    DeadLine: project.DeadLine,\n                    GeneralObjective: project.GeneralObjective,\n                    Key: project.Key,\n                    OperatorName: project.OperatorName,\n                    PeopleInvolved: project.PeopleInvolved,\n                    Result: project.Result,\n                    SpecificObjective: project.SpecificObjective,\n                    TypeOfActivity: project.TypeOfActivity,\n                    Implementadores: project.Implementadores,\n                    Parceiros: project.Parceiros,\n                    Financiadores: project.Financiadores\n        })\n    }\n\n    function setObjective(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: e.target.value,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setResult(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: e.target.value,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n\n        })\n    }\n\n    function setOperatorName(e){\n        setProject(\n        {\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: e.target.value,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setTypeOfActivity(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: e.target.value,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setSpecificObjective(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: e.target.value,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setDeadLine(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: e.target.value,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    function setImplementadores(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: e.target.value,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    \n    function setParceiros(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: e.target.value,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    \n    function setFinanciadores(e){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: e.target.value\n        })\n    }\n\n    function back(e){\n        window.history.back()\n    }\n\n    function updateProject(e){\n\n\n        update(ref(db, `Project/${e.target.value}` ), project).then(() => {\n            alert('Projecto Actualizado com sucesso')\n        }).catch(() => {\n            alert('Erro ao Actualizado com sucesso')\n        })\n        document.getElementById('closemodal').click()\n        back()\n    }\n\n    useEffect( () => {\n            const dbRef = ref(db)\n            \n            get(child(dbRef, `Project`)).then((snapshot) => {\n                    if (snapshot.exists()){\n                        for (let key in snapshot.val()){\n                            if ( key === document.URL.split('=')[1]){\n                                setProject(snapshot.val()[key])\n                            }\n                        }\n                    }\n                })\n                setKey()\n            }\n        ,[])\n\n    function setKey(){\n        setProject({\n            ProjectName: project.ProjectName,\n            DeadLine: project.DeadLine,\n            GeneralObjective: project.GeneralObjective,\n            Key: project.Key,\n            OperatorName: project.OperatorName,\n            PeopleInvolved: project.PeopleInvolved,\n            Result: project.Result,\n            SpecificObjective: project.SpecificObjective,\n            TypeOfActivity: project.TypeOfActivity,\n            Implementadores: project.Implementadores,\n            Parceiros: project.Parceiros,\n            Financiadores: project.Financiadores\n        })\n    }\n\n    return (\n        \n        <div className='form-container'>\n\n        <div className='title'> \n            <div className='back-icon'>\n                <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                marginRight: '20px'\n                    }} onClick={back}/>\n            </div>\n            <div className='form-title'>\n                Actualizar Projecto\n            </div>\n        </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nome do Projecto</label>\n            <input type=\"text\" value={project.ProjectName} id='projectName'onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">DeadLine</label>\n            <input type=\"date\" id='deadLine' value={project.DeadLine} onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Objecto do projecto</label>\n            <input type=\"text\" id='projectObjective' value={project.GeneralObjective} onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Resultado</label>\n            <input type=\"text\" id='results' value={project.Result} onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nome do operador</label>\n            <input type=\"text\" id='operatorName' value={project.OperatorName} onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Tipo de actividade</label>\n            <input type=\"text\" id='typeOfActivity' value={project.TypeOfActivity} onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\n            <input type=\"text\" id='specificObjective' value={project.SpecificObjective} onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Implementadores</label>\n            <input type=\"text\" id='implementadores' value={project.Implementadores} onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n      \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Parceiros</label>\n            <input type=\"text\" id='parceiros' value={project.Parceiros} onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Financiadores</label>\n            <input type=\"text\" id='finaciadores' value={project.Financiadores} onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n            Actualizar Projecto         </button>\n\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n            <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div className=\"modal-body\">\n            <form>\n                <div className=\"form-group\">\n                    <label for=\"exampleInputEmail1\">Actualizar Projecto ?</label>\n                </div>\n            </form>\n                </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                        <button type=\"button\" value={document.URL.split('=')[1]}className=\"btn btn-primary\" onClick={updateProject}>Sim</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default UpdateProject","/workspace/taskMan/src/components/updateForms/UpdateActivity.jsx",["318"],"import React from 'react'\nimport { useState } from 'react'\nimport {v4 as uuidv4} from 'uuid';\nimport {ref,set,child,get,update} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\nimport { useEffect } from 'react'\n\nfunction UpdateActivity(){\n\n    const [activity, setActivity] = useState({\n        Key: uuidv4(),\n        Id: uuidv4(),\n        MacroActivityKey: document.URL.split('=')[1],\n        Name: '',\n        Boys: '',\n        Comments: '',\n        DeadLine: '',\n        Description: '',\n        Duration: '',\n        Girls: '',\n        Heterogenity:'Sim',\n        Location: '',\n        Men: '',\n        NextSteps: '',\n        StartTime: '',\n        Time: '',\n        Total: '',\n        Waited: 'Sim',\n        Women: '',\n        User: ''\n    })\n\n    \n    useEffect (() => {\n\n        const dbRef = ref(db)\n\n        get(child(dbRef,`Activity`)).then( (snapshot => {\n           \n            for (let key in snapshot.val()){\n                if (snapshot.val()[key].Key === document.URL.split('=')[1]){\n                    setActivity(snapshot.val()[key])\n                    break\n                }\n            }\n        }))\n\n    },[])\n\n    function UpdateActivity(e){\n\n        activity.Total = parseInt(activity.Men) + parseInt(activity.Boys) + parseInt(activity.Women) + parseInt(activity.Girls)\n\n        update(ref(db, `Activity/${document.URL.split('=')[1]}`), activity).then(()=>\n            {\n                alert('Actividade actualizada com Sucesso')\n            }\n        )\n        document.getElementById('closemodal').click()\n        back()\n    }\n\n    function setName(e){\n\n        setActivity({\n            Name: e.target.value,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setDescription(e){\n\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: e.target.value,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setLugar(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: e.target.value,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: e.target.value,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setStartTime(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: e.target.value,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setFinalDate(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: e.target.value,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setTime(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setDuration(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: e.target.value,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setMen(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: e.target.value,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setWoman(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: e.target.value,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: e.target.value,\n            User: activity.User\n        })\n    }\n\n    function setBoys(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: e.target.value,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setGirls(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: e.target.value,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setComments(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: e.target.value,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setEsperado(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: e.target.value,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setEterogenidade(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: e.target.value,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User\n        })\n    }\n\n    function setFile(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: activity.NextSteps,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User,\n        })\n    }\n\n    function setNextSteps(e){\n        setActivity({\n            Name: activity.Name,\n            Boys: activity.Boys,\n            Comments: activity.Comments,\n            DeadLine: activity.DeadLine,\n            Description: activity.Description,\n            Duration: activity.Duration,\n            Girls: activity.Girls,\n            Heterogenity: activity.Heterogenity,\n            Id: activity.Id,\n            Key: activity.Key,\n            Location: activity.Location,\n            MacroActivityKey: activity.MacroActivityKey,\n            Men: activity.Men,\n            NextSteps: e.target.value,\n            StartTime: activity.StartTime,\n            Time: activity.Time,\n            Total: activity.Total,\n            Waited: activity.Waited,\n            Women: activity.Women,\n            User: activity.User,\n        })\n    }\n\n    function back(e){\n        window.history.back()\n    }\n        \n    return (\n        <div className='form-container'>\n                 <div className='title'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='form-title'>\n                    Actualizar Actividade\n                </div>\n            </div>\n      \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nome da actividade</label>\n            <textarea type=\"text\" value={activity.Name} onChange= {setName} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Breve descrição da actividade</label>\n            <textarea type=\"text\"  value={activity.Description} onChange={setDescription} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Lugar</label>\n            <textarea type=\"text\" value={activity.Location} onChange={setLugar} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Data de Inicio</label>\n            <textarea type=\"date\"  value={activity.StartTime} onChange={setStartTime}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Data final</label>\n            <textarea type=\"date\" value={activity.DeadLine} onChange={setFinalDate}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Hora</label>\n            <textarea type=\"text\" value={activity.Time} onChange={setTime} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Duração</label>\n            <textarea type=\"text\"  value={activity.Duration} onChange={setDuration} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Homens</label>\n            <textarea type=\"text\" value={activity.Men} onChange={setMen} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Mulheres</label>\n            <textarea type=\"text\"  value={activity.Women} onChange={setWoman} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Meninos</label>\n            <textarea type=\"text\"  value={activity.Boys} onChange={setBoys} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Meninas</label>\n            <textarea type=\"text\" value={activity.Girls} onChange={setGirls} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Comentarios</label>\n            <textarea type=\"text\"  value={activity.Comments} onChange={setComments}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Proximos Passos</label>\n            <textarea type=\"text\"  value={activity.NextSteps} onChange={setNextSteps}className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n\n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Esperado</label>\n            <select className=\"form-select\" value={activity.Waited} aria-label=\"Default select example\" onChange={setEsperado}>\n                <option value=\"Sim\">Sim</option>\n                <option value=\"Não\">Não</option>\n            </select>\n        </div>\n        \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Eterogenidade</label>\n            <select className=\"form-select\" value={activity.Heterogenity} onChange={setEterogenidade} aria-label=\"Default select example\" >\n                <option value=\"Sim\">Sim</option>\n                <option value=\"Não\">Não</option>\n            </select>\n        </div>\n     \n        <div className=\"form-group\">\n            <label for=\"exampleInputEmail1\">Carregar ficheiro</label>\n            <textarea type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\n        </div>\n        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Actualizar Actividade  </button>\n\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                <form>\n                    <div className=\"form-group\">\n                        <label for=\"exampleInputEmail1\">Actializar Actividade ?</label>\n                    </div>\n                </form>\n                    </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={UpdateActivity}> Sim </button>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n    </div>\n    )\n}\n\nexport default UpdateActivity","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx",["319","320","321","322","323"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref, remove,update } from \"firebase/database\"\nimport '../TaskRow.css'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport MacroActivityPDF from '../ReportsPDF/MacroActivityPDF'\n\nfunction MacroActivity(){\n    \n    const [macroActivities, setMacroActivities] = useState({mcs: []})\n    const [activities, setActivites ] = useState()\n    const [keys, setKeys ] = useState()\n    const history = useHistory()\n    const dbRef = ref(db)\n\n    function getMCS(){\n        get(child(dbRef, `MacroActivity`)).then((snapshot) => {\n            if (snapshot.exists()){\n                let macroA = {}\n                for(let key in snapshot.val()){\n                    if (snapshot.val()[key].ProductKey === document.URL.split('=')[1]){\n                        macroA[key] = snapshot.val()[key]\n                    }\n                }\n                setMacroActivities(macroA)\n            }else{\n                alert('Sem Macto Actividades para mostrar')\n            }\n        })\n    }\n\n    function getActivities(){\n\n        get(child(dbRef, 'Activity')).then( snapshot => {\n            if (snapshot.exists()){\n                setActivites(snapshot.val())\n            }\n        })\n    }\n\n    useEffect( () => {\n        getMCS()     \n        getActivities()  \n    },[])\n\n    function deleteMacroActivity(e){\n        remove(ref(db, `MacroActivity/${e.target.value}`)).then(()=> {\n            alert('Macro Actividade Apagada com Sucesso ')\n            getMCS()\n        }).catch(() => {\n            alert('Erro ao eliminar Macro Actividade')\n        })\n\n        document.getElementById(`closemodal${e.target.id}`).click() \n\n    }\n\n    \n    function searchMcs(e){\n        \n        let a = []\n        if (e.target.value === ''){\n            getMCS()\n        }\n        else{\n            a = macroActivities.filter(element => element.Name.includes(e.target.value))  \n            setMacroActivities(a)\n\n        }\n    }\n   function handleButtonEvent(e){\n      \n        let productKey = e.target.id\n        let key  = productKey.split('.')\n        \n        history.push({\n            pathname: '/activities',\n            search: `?key=${key[1]}`,\n        })    \n\n    }\n\n    function updateMacroActivities(e){\n\n        history.push({\n            pathname: '/updatemacroactivity',\n            search: `?key=${e.target.id}`,\n        })\n    \n    }\n\n    function createMcsPDF(e){\n\n        let a = {}\n        \n        const m = macroActivities[e.target.id]\n\n        for (let aKey in activities){\n\n            if (m.Key === activities[aKey].MacroActivityKey){\n                a[aKey] = activities[aKey]\n            }\n        }\n        \n        if ( Object.keys(a).length === 0 ){\n            \n            alert('Sem actividades para inserir no relatorio')\n        }else{\n            MacroActivityPDF(m.Name, a)\n        }\n     \n    }\n\n    function buildTableforMcs(){\n    \n        var values = []\n        let count = 0\n        if (macroActivities !== null ){\n            for(let key in macroActivities){\n                values.push( \n                    <div id={`${key}.`} >\n                        <button               \n                            style={{background: 'transparent',\n                                border: 'none',\n                                width: '100%',\n                                outline: 'none',\n                            }}\n                            >\n                            <div className='rows-report' >\n                                <div className='colmns-report'>\n                                    <ul>\n                                        <li id={`${count++}.${macroActivities[key].Key}`} onClick={handleButtonEvent}>\n                                            {macroActivities[key].Name}\n                                        </li>\n                                        <li >\n                                            <i className=\"bi bi-pencil\" id={`${key}`} onClick={updateMacroActivities}/>\n                                        </li>\n                                        <li id={`delete.${count}.${key}`} >\n                                            <i className=\"bi bi-trash\"   data-toggle=\"modal\" data-target={`#exampleModal${key}` }/>\n                                        </li>\n                                        <li id={`${count + 1}.${key}`}>\n                                        <i className=\"bi bi-file-earmark-arrow-down\" style={{\n                                                fontSize: '1.3rem',\n                                                color: 'blue'\n                                            }}\n                                            onClick={createMcsPDF}\n                                            id={`${key}`}\n                                        />   \n                                    </li>\n                       \n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div className=\"modal-dialog\" role=\"document\">\n                                    <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                    <form>\n                                        <div className=\"form-group\" >\n                                            <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Macro Acrividade ?</label>\n                                        </div>\n                                    </form>\n                                        </div>\n                                            <div className=\"modal-footer\">\n                                                <button type=\"button\" id={`closemodal${key}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                                <button type=\"button\" id={key} value= {macroActivities[key].Key} onClick={deleteMacroActivity} className=\"btn btn-primary\">Sim</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                    </button>\n                </div>)\n            }\n            \n        }\n\n        function add(){\n            history.push({\n                pathname: '/addmacroactivities',\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\n            })\n        }\n\n        function back()\n        {\n            window.history.back()\n        }\n\n        return( \n        <div>\n             <div className='title' id='title'>\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                         marginRight: '20px'\n                }} onClick={back}/>\n                <input type='tex' onChange={searchMcs} className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\n            </div>\n           \n            <div className='table-container'>\n                <div className='header-container'>\n                    <div className='report-header'>Nome da Macro Actividade</div>\n                    <div className='report-header'>Actualizar</div>\n                    <div className='report-header'>Apagar</div>\n                    <div className='report-header'>Gerar Relatorio</div>\n                </div>\n                    {values}\n            </div>\n        </div>        \n        )\n    }\n    return buildTableforMcs()\n}\n\nexport default MacroActivity","/workspace/taskMan/src/components/updateForms/UpdateNewsletter.jsx",["324","325","326","327","328","329","330","331"],"import React, { useEffect } from 'react'\nimport {useState} from 'react'\nimport {v4 as uuidv4} from 'uuid';\nimport {child, ref,set,get,update, remove} from 'firebase/database'\nimport {db} from '../database/DatabaseHelper'\nimport {Storage} from '../database/Storage'\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\n\nfunction UpdateNewsLetter(){\n    const [newsLetter, setNewsLetter] = useState({\n        Key: uuidv4(),\n        Title: '',\n        Body: '',\n        File: null \n    })\n\n    const dbRef = ref(db)\n\n    const newsletterKey = document.URL.split('=')[1]\n\n    const [formElements, setFormElements ] = useState([\n        {Title:  '', Body: '', File: null },\n    ])\n\n    \n    function getNewsletter(){\n\n        get(child(dbRef, `NewsLetter/${newsletterKey}`)).then((s) => {\n           if (s.exists()){\n            setFormElements(s.val())\n           }\n        })\n    }\n\n    useEffect(() =>{\n        getNewsletter()\n    },[])\n\n    function back(e){\n        window.history.back()\n    }\n\n    function saveNewsLetter(e){\n        \n        remove(ref(db, `NewsLetter/${newsletterKey}`)).then(s => {\n            set(ref(db, `NewsLetter/${newsletterKey}`), formElements).then(()=>\n            {\n                alert('Newsletter Actualizado com sucesso')\n            }\n        )\n        })\n\n        document.getElementById('closemodal').click()\n        window.history.back()\n        \n    }\n\n    const  handleFormChange = (event, index) => {\n        const data = [...formElements]\n\n        data[index][event.target.name] = event.target.value\n        setFormElements(data)\n    }\n\n    const removeField = (element) => {\n        let data = [...formElements]\n        const index = element.target.id\n\n        data.splice(index,1)\n\n        setFormElements(data)\n    }\n\n    function addField(e){\n        let element =  {Title: '', Body: '', File: null}\n        setFormElements([...formElements,element])\n    }\n\n\n    function createForm(){\n        let a = []\n\n        formElements.map((element, index) => {\n\n            console.log(element)\n\n            a.push( <div key={index} style={{border: 'solid #ccc 0.1px', marginBottom: '10px'}}>\n\n                 <div className=\"form-group\" style={{display: 'flex', flexDirection: 'column'}}>\n\n                       <button type=\"button\" id={index} onClick={removeField} style={{width: '10%', marginBottom: '15px', marginLeft: '90%'}}className=\"btn btn-outline-secondary\">\n                             Apagar \n                       </button>\n                     <p>\n                          <label for=\"exampleFormControlInput1\">Title</label>\n                     </p>\n                     <input type=\"email\" value={element.Title} name='Title' onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Title do Newsletter\"/>\n           \n                 </div>\n                 <div className=\"form-group\" style={{'margin-top': '20px'}}>\n                     <label for=\"exampleFormControlTextarea1\" style={{'font-weight': '400'}}>Body</label>\n                     <textarea name='Body' value={element.Body} className=\"form-control\" onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\n                 </div>\n                 <div className=\"form-group\">\n                     <label for=\"exampleInputEmail1\">Carregar Fotografia</label>\n                     <input name='ficheiro' value={element.File} type=\"file\" accept='image/*' onChange={event => handleFormChange(event, index)} className=\"form-control\" aria-describedby=\"emailHelp\" />\n                 </div>\n             </div> )         \n         })       \n         return a\n    }\n    return (\n        <div>\n            <div className='title-newsletter'> \n                <div className='back-icon'>\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\n                                                                    marginRight: '20px'\n                        }} onClick={back}/>\n                </div>\n                <div className='newsletter-title' style={{fontSize: '1.1rem', fontWeight: '400'}}>\n                    Actualizar NewsLetter\n                </div>\n            </div>\n            <div id='newsletter-content'>\n                <form>\n                    {createForm()}\n                    <div className='buttons-container' style={{'margin-top': '20px'}}>\n                        <button type=\"button\"  className=\"btn btn-secondary\" onClick={addField}>\n                            Adicionar Campo \n                        </button>\n            \n                        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                            Gravar Newsletter \n                        </button>\n                    <button type=\"button\" className=\"btn btn-secundary\">Descartar</button>\n                    </div>\n                </form>\n\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                               <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Actualizar Newsletter ?</label>\n                            </div>\n                        </form>\n                            </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\n                                    <button type=\"button\" onClick={saveNewsLetter} className=\"btn btn-primary\">Sim</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>    \n            </div>\n        </div>\n    )\n}\n\nexport default UpdateNewsLetter","/workspace/taskMan/src/components/updateForms/UpdateUser.jsx",["332","333","334","335"],"/workspace/taskMan/src/components/Newsletter/NewsletterHome.jsx",["336","337","338","339","340","341","342","343","344"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref,remove,update, } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction NewsLetterHome (){\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \n    const [imageList, setImageList] = useState([])\n    const listOfImages = storageRef(Storage, 'Newsletter/')\n    const history = useHistory()\n  \n      useEffect( () => {\n         const dbRef = ref(db)\n           listAll(listOfImages).then((response) => {\n            let urls = []\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\n                urls.push(url)\n                setImageList(urls)\n            }))\n         })\n\n             get(child(dbRef, `NewsLetter`)).then((snapshot) => {\n                     if (snapshot.exists())\n                         setnewsLetter(snapshot.val())\n                     else\n                         alert('Sem newsletter para mostrar')\n             })\n         }\n     ,[])\n \n     function seeMore(e){\n\n        history.push({\n            pathname: '/readnewsletter',\n            search: `?key=${e.target.id.split('.')[1]}`\n        })\n     }\n\n     function deleteNewsLetter(e){\n\n        remove(ref(db, `NewsLetter/${e.target.value}`)).then(() => {\n            alert('Newsletter apagado com sucesso')\n          \n            const dbRef = ref(db)\n\n            get(child(dbRef, `NewsLetter`)).then((snapshot) => {\n                if (snapshot.exists())\n                    setnewsLetter({newsLetters: snapshot.val()})\n                else\n                    alert('Sem newsletter para mostrar')\n        })\n        }).catch(() => {\n            alert('Erro ao apagar a Newsletter')\n        })\n\n        document.getElementById(`closemodal${e.target.id}`).click()\n     }\n \n     function buildTable(){\n\n         var values  = []     \n         let count = 0\n         let index = 0\n \n         if (newsLetter !== null ){\n             for(let key in newsLetter){\n                for (let innerKey in newsLetter[key]){\n                    values.push(\n                        <button   style={{background: 'transparent',\n                                        border: 'none',\n                                        width: '100%',\n                                        outline: 'none',\n                                    }}>\n                            <div className=\"card card-container\" style={{width: '18rem', marginTop: '10px'}}>\n                            {/*    <img src={imageList} className=\"card-img-top\" alt=\"...\"/> */}\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\" style={{textAlign: 'justify'}}>{newsLetter[key][innerKey].Title}</h5>\n                                    <p className=\"card-text\" style={{textAlign: 'justify'}}>\n                                        {newsLetter[key][innerKey].Body.split(\" \").splice(0, 20).join(\" \")} ...\n                                    </p>\n                                    <a className=\"btn btn-primary\" onClick={seeMore} id={`${count++}.${key}`}>Ver Mais</a>\n                                </div>\n                            </div>\n                    </button>\n                    )\n                    break\n                }\n            }\n         }\n\n         function add(e){\n            const key = e.target.id.split('.')\n            history.push({\n                pathname: '/addnewsletter',\n              })\n         }\n\n         return( \n         <div className='table-container'>\n            {values}\n         </div>\n         ) \n     }\n\n    return buildTable()\n }\n\nexport default NewsLetterHome","/workspace/taskMan/src/components/database/DatabaseHelper.js",[],"/workspace/taskMan/src/components/database/Storage.js",[],"/workspace/taskMan/src/components/TaskRow.js",[],"/workspace/taskMan/src/components/Sticky.jsx",[],"/workspace/taskMan/src/components/ReportsPDF/ActivitySinglePDF.jsx",["345","346","347","348","349","350","351"],"import pdfMake from 'pdfmake/build/pdfmake'\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport {useEffect,useState} from 'react'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\nimport FileDownload from 'js-file-download'\n\nfunction ActivitySinglePDF(act, imageUrl){\n\n   // const [imageList, setImageList] = useState()\n\n      \n    pdfMake.vfs = pdfFonts.pdfMake.vsf\n\n    function createTable(){\n\n        let a = []\n        a.push(['Actividade', act.Name])    \n        a.push(['Descrição', act.Description])\n        a.push(['Lugar', act.Location])\n        a.push(['Inicio', act.StartTime])\n        a.push(['Data Final', act.DeadLine])\n        a.push(['Hora', act.Time])\n        a.push(['Duração', act.Duration])\n        a.push(['Homens', act.Men])\n        a.push(['Mulheres', act.Women])\n        a.push(['Meninos', act.Boys])\n        a.push(['Meninas', act.Girls])\n        a.push(['Total', act.Total])\n        a.push(['Esperado', act.Waited])\n        a.push(['Etereogenidade', act.Heterogenity])\n        a.push(['Proximos Passos', act.NextSteps])\n        a.push(['Comentarios', act.Comments])\n\n        if (imageUrl === '' || imageUrl === undefined || imageUrl === null){\n            a.push(['Link para Imagem da Actividade ', 'NA'])\n        }else{\n            a.push(['Link para Imagem da Actividade ', imageUrl])\n        }\n        return a\n    }\n    const title = [{\n        text:[`Relatorio de Actividade`],\n        fontSize: 15,\n        bold: true,\n        margin: [15,20,0,45],\n        justify: 'center'\n    }]\n\n    \n    const details = [\n\t\t{\n            style: 'tableExample',\n\t\t\ttable: {\n                body: createTable(),\n                widths: [120, '*'],\n            },\n            layout: 'headerLineOnly',\n\t\t}\n    ]\n    \n    function footer (currentPage,pageCount){\n        return [\n            {\n                text: currentPage + '/' + pageCount,\n                align: 'right',\n                fontSize: 8,\n                margin: [0, 10, 20, 0]\n            }\n        ]\n    }\n\n    const docDefinitions = {\n        pageSize: 'A4',\n        pageMargins: [15, 50, 15, 40],\n        header: [title],\n        content: [details],\n        footer: [footer]\n    }\n\n    pdfMake.createPdf(docDefinitions).download()\n\n}\n\nexport default ActivitySinglePDF","/workspace/taskMan/src/components/ReportsPDF/ActivityPDF.jsx",[],"/workspace/taskMan/src/components/ReportsPDF/LATReport.jsx",["352","353","354","355","356"],"import pdfMake from 'pdfmake/build/pdfmake'\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport {useEffect,useState} from 'react'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction LATReport(project,acts ){\n\n    const listOfImages = storageRef(Storage, 'HomeContent/')\n    const [imageList, setImageList] = useState([])\n\n    pdfMake.vfs = pdfFonts.pdfMake.vsf\n\n    useEffect(() =>{\n        /*\n        listAll(listOfImages).then((response) => {\n            let urls = []\n            let items = []\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\n                console.log(item)\n                urls.push(url)\n                setImageList(urls)\n            }))\n         })\n         */\n    \n    },[])\n\n    function createTable(){\n\n        let a = []\n\n        for(let key in acts){\n            a.push(['Actividade', acts[key].Name])    \n            a.push(['Descrição', acts[key].Description])\n            a.push(['Lugar', acts[key].Location])\n            a.push(['Inicio', acts[key].StartTime])\n            a.push(['Data Final', acts[key].DeadLine])\n            a.push(['Hora', acts[key].Time])\n            a.push(['Duração', acts[key].Duration])\n            a.push(['Homens', acts[key].Men])\n            a.push(['Mulheres', acts[key].Women])\n            a.push(['Meninos', acts[key].Boys])\n            a.push(['Meninas', acts[key].Girls])\n            a.push(['Esperado', acts[key].Waited])\n            a.push(['Etereogenidade', acts[key].Heterogenity])\n            a.push(['Proximos Passos', acts[key].NextSteps])\n            a.push(['Comentarios', acts[key].Comments])\n        }\n        return a\n    }\n    const title = [{\n        text:[`Relatorio de Actividade`],\n        fontSize: 15,\n        bold: true,\n        margin: [15,20,0,45],\n        justify: 'center'\n    }]\n\n    \n    const details = [\n\t\t{\n            style: 'tableExample',\n\t\t\ttable: {\n                body: createTable(),\n                widths: [120, '*'],\n\t\t\t},\n            layout: 'headerLineOnly',\n            images: {\n                image: '' \n            }\n\t\t}\n    ]\n    \n    function footer (currentPage,pageCount){\n        return [\n            {\n                text: currentPage + '/' + pageCount,\n                align: 'right',\n                fontSize: 8,\n                margin: [0, 10, 20, 0]\n            }\n        ]\n    }\n\n    const docDefinitions = {\n        pageSize: 'A4',\n        pageMargins: [15, 50, 15, 40],\n        header: [title],\n        content: [details],\n        footer: [footer]\n    }\n\n    pdfMake.createPdf(docDefinitions).download()\n\n}\n\nexport default LATReport",["357","358"],"/workspace/taskMan/src/components/ReportsPDF/MacroActivityPDF.jsx",["359","360","361","362","363"],"import pdfMake from 'pdfmake/build/pdfmake'\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport {useEffect,useState} from 'react'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction MacroActivityPDF(name, acts){\n\n    const listOfImages = storageRef(Storage, 'HomeContent/')\n   // const [imageList, setImageList] = useState()\n\n    pdfMake.vfs = pdfFonts.pdfMake.vsf\n\n    function createTable(){\n        \n        let a = []\n\n        for(let actKey in acts){\n            a.push(['Actividade', acts[actKey].Name])    \n            a.push(['Descrição', acts[actKey].Description])\n            a.push(['Lugar', acts[actKey].Location])\n            a.push(['Inicio', acts[actKey].StartTime])\n            a.push(['Data Final', acts[actKey].DeadLine])\n            a.push(['Hora', acts[actKey].Time])\n            a.push(['Duração', acts[actKey].Duration])\n            a.push(['Homens', acts[actKey].Men])\n            a.push(['Mulheres', acts[actKey].Women])\n            a.push(['Meninos', acts[actKey].Boys])\n            a.push(['Meninas', acts[actKey].Girls])\n            a.push(['Esperado', acts[actKey].Waited])\n            a.push(['Etereogenidade', acts[actKey].Heterogenity])\n            a.push(['Proximos Passos', acts[actKey].NextSteps])\n            a.push(['Comentarios', acts[actKey].Comments])\n            a.push([' ', ' '])\n            a.push([' ', ' '])\n        }\n        return a\n    }\n    const title = [{\n        text:[`Relatorio da Macro Actividade ${name}`],\n        fontSize: 15,\n        bold: true,\n        margin: [15,20,0,45],\n        justify: 'center'\n    }]\n\n    \n    const details = [\n\t\t{\n            style: 'tableExample',\n\t\t\ttable: {\n                body: createTable(),\n                widths: [120, '*'],\n\t\t\t},\n            layout: 'headerLineOnly',\n            images: {\n                image: '' \n            }\n\t\t}\n    ]\n    \n    function footer (currentPage,pageCount){\n        return [\n            {\n                text: currentPage + '/' + pageCount,\n                align: 'right',\n                fontSize: 8,\n                margin: [0, 10, 20, 0]\n            }\n        ]\n    }\n\n    const docDefinitions = {\n        pageSize: 'A4',\n        pageMargins: [15, 50, 15, 40],\n        header: [title],\n        content: [details],\n        footer: [footer]\n    }\n\n    pdfMake.createPdf(docDefinitions).download()\n\n}\n\nexport default MacroActivityPDF","/workspace/taskMan/src/components/ReportsPDF/ProductPDF.jsx",["364","365","366"],"import pdfMake from 'pdfmake/build/pdfmake'\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction ProductPDF (prod, mcs, acts){\n\n    const listOfImages = storageRef(Storage, 'HomeContent/')\n   \n    pdfMake.vfs = pdfFonts.pdfMake.vsf\n\n    function filterResult (){\n        let m = {}\n        let a = {}\n\n        let signal = false\n        for (let mKey in mcs){\n            if (mcs[mKey].ProductKey === prod.Key){\n                signal = true\n                m[mKey] = mcs[mKey]\n                for (let key in acts){\n                    if (acts[key].MacroActivityKey === mcs[mKey].Key){\n                        a[key] = acts[key]\n                    }   \n                }\n            }\n        }\n        console.log(acts)\n        mcs = m\n        acts = a\n\n        return signal\n    }\n\n    function createTable(){\n        \n        let a = []\n        \n        if (!filterResult()){\n            alert('Producto sem Macro Actividades')\n            return\n        }\n\n        for (let mKey in mcs){\n            \n            a.push(['Macro Actividade', mcs[mKey].Name])\n            a.push([' ',' '])   \n\n            for (let aKey in acts){\n                a.push(['Actividade', acts[aKey].Name])    \n                a.push(['Descrição', acts[aKey].Description])\n                a.push(['Lugar', acts[aKey].Location])\n                a.push(['Inicio', acts[aKey].StartTime])\n                a.push(['Data Final', acts[aKey].DeadLine])\n                a.push(['Hora', acts[aKey].Time])\n                a.push(['Duração', acts[aKey].Duration])\n                a.push(['Homens', acts[aKey].Men])\n                a.push(['Mulheres', acts[aKey].Women])\n                a.push(['Meninos', acts[aKey].Boys])\n                a.push(['Meninas', acts[aKey].Girls])\n                a.push(['Total', acts[aKey].Total])\n                a.push(['Esperado', acts[aKey].Waited])\n                a.push(['Etereogenidade', acts[aKey].Heterogenity])\n                a.push(['Proximos Passos', acts[aKey].NextSteps])\n                a.push(['Comentarios', acts[aKey].Comments])\n                a.push(['',''])\n                a.push(['', ''])\n            }\n        }\n        return a\n    }\n    const title = [{\n        text:[`Relatorio de Producto ${prod.Name}`],\n        fontSize: 15,\n        bold: true,\n        margin: [15,20,0,45],\n        justify: 'center'\n    }]\n\n    \n    const details = [\n\t\t{\n            style: 'tableExample',\n\t\t\ttable: {\n                body: createTable(),\n                widths: [120, '*'],\n\t\t\t},\n            layout: 'headerLineOnly',\n            images: {\n                image: '' \n            }\n\t\t}\n    ]\n    \n    function footer (currentPage,pageCount){\n        return [\n            {\n                text: currentPage + '/' + pageCount,\n                align: 'right',\n                fontSize: 8,\n                margin: [0, 10, 20, 0]\n            }\n        ]\n    }\n\n    const docDefinitions = {\n        pageSize: 'A4',\n        pageMargins: [15, 50, 15, 40],\n        header: [title],\n        content: [details],\n        footer: [footer]\n    }\n\n    pdfMake.createPdf(docDefinitions).download()\n\n}\n\nexport default ProductPDF","/workspace/taskMan/src/components/database/CRUDOperations.js",["367","368","369","370","371","372","373","374"],"/workspace/taskMan/src/components/ReportsPDF/LATProjectReportPDF.jsx",["375","376","377","378","379","380"],"import pdfMake from 'pdfmake/build/pdfmake'\nimport pdfFonts from 'pdfmake/build/vfs_fonts'\nimport {useEffect,useState} from 'react'\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\nimport {Storage} from '../database/Storage'\n\nfunction LATProjectReportPDF(lats, project,products, mcs, acts){\n\n    //const listOfImages = storageRef(Storage, 'HomeContent/')\n   // const [imageList, setImageList] = useState()\n\n    pdfMake.vfs = pdfFonts.pdfMake.vsf\n\n    function createTable(){\n\n        let a = []\n                \n        for (let lKey in lats){\n            \n            if (lats[lKey].ProjectKey === project.Key){\n                \n                a.push(['LAT', lats[lKey].Description])\n              //  la[lKey] = lats[lKey]\n\n                for (let pKey in products ){\n\n                    if (products[pKey].LatKey === lats[lKey].Key){\n                        a.push(['  Producto',products[pKey].Name])\n                        //po[pKey] = products[pKey]\n\n                        for (let mKey in mcs){\n\n                            if (mcs[mKey].ProductKey === products[pKey].Key){\n                                a.push(['    Macro Actividade',mcs[mKey].Name])\n                            //    ma[mKey] = mcs[mKey]\n\n                                for (let aKey in acts){\n\n                                    if (mcs[mKey].Key === acts[aKey].MacroActivityKey){\n                                   //     ac[aKey] = acts[aKey]\n                                        a.push(['     Actividade', acts[aKey].Name])    \n                                        a.push(['     Descrição', acts[aKey].Description])\n                                        a.push(['     Lugar', acts[aKey].Location])\n                                        a.push(['     Inicio', acts[aKey].StartTime])\n                                        a.push(['     Data Final', acts[aKey].DeadLine])\n                                        a.push(['     Hora', acts[aKey].Time])\n                                        a.push(['     Duração', acts[aKey].Duration])\n                                        a.push(['     Homens', acts[aKey].Men])\n                                        a.push(['     Mulheres', acts[aKey].Women])\n                                        a.push(['     Meninos', acts[aKey].Boys])\n                                        a.push(['     Meninas', acts[aKey].Girls])\n                                        a.push(['     Esperado', acts[aKey].Waited])\n                                        a.push(['     Etereogenidade', acts[aKey].Heterogenity])\n                                        a.push(['     Proximos Passos', acts[aKey].NextSteps])\n                                        a.push(['     Comentarios', acts[aKey].Comments])\n                                        a.push(['', ''])\n                                        a.push(['', ''])\n                                    }\n                                }\n                            }\n                        }\n                        a.push(['',''])\n                    }\n                }\n            }\n        }\n        console.log(a)\n\n        return a \n    }\n\n    const title = [{\n        text:[`Relatorio geral do Projecto `+ project.ProjectName],\n        fontSize: 15,\n        bold: true,\n        margin: [15,20,0,45],\n        justify: 'center'\n    }]\n\n    \n    const details = [\n\t\t{\n            style: 'tableExample',\n\t\t\ttable: {\n                body: createTable(),\n                widths: [120, '*'],\n\t\t\t},\n            layout: 'headerLineOnly',\n            images: {\n                image: '' \n            }\n\t\t}\n    ]\n    \n    function footer (currentPage,pageCount){\n        return [\n            {\n                text: currentPage + '/' + pageCount,\n                align: 'right',\n                fontSize: 8,\n                margin: [0, 10, 20, 0]\n            }\n        ]\n    }\n\n    const docDefinitions = {\n        pageSize: 'A4',\n        pageMargins: [15, 50, 15, 40],\n        header: [title],\n        content: [details],\n        footer: [footer]\n    }\n\n    pdfMake.createPdf(docDefinitions).download()\n\n}\n\nexport default LATProjectReportPDF","/workspace/taskMan/src/components/projectviews/Item.jsx",[],{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","replacedBy":"384"},{"ruleId":"385","severity":1,"message":"386","line":7,"column":8,"nodeType":"387","messageId":"388","endLine":7,"endColumn":13},{"ruleId":"389","severity":1,"message":"390","line":23,"column":26,"nodeType":"391","endLine":23,"endColumn":68},{"ruleId":"392","severity":1,"message":"393","line":32,"column":24,"nodeType":"394","messageId":"395","endLine":32,"endColumn":26},{"ruleId":"385","severity":1,"message":"396","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":16},{"ruleId":"385","severity":1,"message":"397","line":9,"column":25,"nodeType":"387","messageId":"388","endLine":9,"endColumn":42},{"ruleId":"385","severity":1,"message":"398","line":25,"column":14,"nodeType":"387","messageId":"388","endLine":25,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":19,"column":7,"nodeType":"401","endLine":19,"endColumn":9,"suggestions":"402"},{"ruleId":"385","severity":1,"message":"403","line":31,"column":13,"nodeType":"387","messageId":"388","endLine":31,"endColumn":14},{"ruleId":"392","severity":1,"message":"404","line":56,"column":46,"nodeType":"394","messageId":"395","endLine":56,"endColumn":48},{"ruleId":"385","severity":1,"message":"405","line":92,"column":14,"nodeType":"387","messageId":"388","endLine":92,"endColumn":17},{"ruleId":"399","severity":1,"message":"406","line":57,"column":7,"nodeType":"401","endLine":57,"endColumn":9,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":126,"column":37,"nodeType":"391","endLine":126,"endColumn":137},{"ruleId":"399","severity":1,"message":"410","line":58,"column":7,"nodeType":"401","endLine":58,"endColumn":9,"suggestions":"411"},{"ruleId":"385","severity":1,"message":"403","line":94,"column":13,"nodeType":"387","messageId":"388","endLine":94,"endColumn":14},{"ruleId":"385","severity":1,"message":"412","line":3,"column":22,"nodeType":"387","messageId":"388","endLine":3,"endColumn":33},{"ruleId":"399","severity":1,"message":"413","line":121,"column":7,"nodeType":"401","endLine":121,"endColumn":9,"suggestions":"414"},{"ruleId":"385","severity":1,"message":"415","line":9,"column":10,"nodeType":"387","messageId":"388","endLine":9,"endColumn":20},{"ruleId":"399","severity":1,"message":"416","line":26,"column":7,"nodeType":"401","endLine":26,"endColumn":9,"suggestions":"417"},{"ruleId":"392","severity":1,"message":"404","line":41,"column":52,"nodeType":"394","messageId":"395","endLine":41,"endColumn":54},{"ruleId":"385","severity":1,"message":"418","line":5,"column":33,"nodeType":"387","messageId":"388","endLine":5,"endColumn":39},{"ruleId":"385","severity":1,"message":"419","line":6,"column":8,"nodeType":"387","messageId":"388","endLine":6,"endColumn":15},{"ruleId":"385","severity":1,"message":"420","line":13,"column":12,"nodeType":"387","messageId":"388","endLine":13,"endColumn":21},{"ruleId":"399","severity":1,"message":"421","line":22,"column":7,"nodeType":"401","endLine":22,"endColumn":9,"suggestions":"422"},{"ruleId":"385","severity":1,"message":"423","line":73,"column":14,"nodeType":"387","messageId":"388","endLine":73,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":94,"column":40,"nodeType":"391","endLine":94,"endColumn":114},{"ruleId":"385","severity":1,"message":"424","line":128,"column":19,"nodeType":"387","messageId":"388","endLine":128,"endColumn":22},{"ruleId":"385","severity":1,"message":"412","line":4,"column":22,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"425","line":12,"column":12,"nodeType":"387","messageId":"388","endLine":12,"endColumn":20},{"ruleId":"385","severity":1,"message":"426","line":12,"column":22,"nodeType":"387","messageId":"388","endLine":12,"endColumn":33},{"ruleId":"399","severity":1,"message":"427","line":17,"column":7,"nodeType":"401","endLine":17,"endColumn":9,"suggestions":"428"},{"ruleId":"385","severity":1,"message":"429","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":20},{"ruleId":"399","severity":1,"message":"430","line":33,"column":12,"nodeType":"401","endLine":33,"endColumn":14,"suggestions":"431"},{"ruleId":"385","severity":1,"message":"432","line":44,"column":26,"nodeType":"387","messageId":"388","endLine":44,"endColumn":34},{"ruleId":"385","severity":1,"message":"429","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":20},{"ruleId":"385","severity":1,"message":"433","line":15,"column":12,"nodeType":"387","messageId":"388","endLine":15,"endColumn":16},{"ruleId":"385","severity":1,"message":"434","line":15,"column":18,"nodeType":"387","messageId":"388","endLine":15,"endColumn":25},{"ruleId":"435","severity":1,"message":"436","line":64,"column":14,"nodeType":"387","messageId":"437","endLine":64,"endColumn":32},{"ruleId":"399","severity":1,"message":"438","line":83,"column":6,"nodeType":"401","endLine":83,"endColumn":8,"suggestions":"439"},{"ruleId":"385","severity":1,"message":"440","line":88,"column":13,"nodeType":"387","messageId":"388","endLine":88,"endColumn":18},{"ruleId":"385","severity":1,"message":"412","line":4,"column":22,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"419","line":5,"column":8,"nodeType":"387","messageId":"388","endLine":5,"endColumn":15},{"ruleId":"385","severity":1,"message":"441","line":11,"column":10,"nodeType":"387","messageId":"388","endLine":11,"endColumn":17},{"ruleId":"399","severity":1,"message":"442","line":26,"column":6,"nodeType":"401","endLine":26,"endColumn":8,"suggestions":"443"},{"ruleId":"385","severity":1,"message":"420","line":13,"column":12,"nodeType":"387","messageId":"388","endLine":13,"endColumn":21},{"ruleId":"399","severity":1,"message":"444","line":39,"column":8,"nodeType":"401","endLine":39,"endColumn":10,"suggestions":"445"},{"ruleId":"435","severity":1,"message":"446","line":75,"column":14,"nodeType":"387","messageId":"437","endLine":75,"endColumn":21},{"ruleId":"385","severity":1,"message":"412","line":4,"column":22,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"447","line":10,"column":12,"nodeType":"387","messageId":"388","endLine":10,"endColumn":19},{"ruleId":"385","severity":1,"message":"448","line":10,"column":21,"nodeType":"387","messageId":"388","endLine":10,"endColumn":31},{"ruleId":"385","severity":1,"message":"425","line":11,"column":12,"nodeType":"387","messageId":"388","endLine":11,"endColumn":20},{"ruleId":"399","severity":1,"message":"449","line":36,"column":7,"nodeType":"401","endLine":36,"endColumn":9,"suggestions":"450"},{"ruleId":"385","severity":1,"message":"451","line":6,"column":10,"nodeType":"387","messageId":"388","endLine":6,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":6,"column":26,"nodeType":"387","messageId":"388","endLine":6,"endColumn":33},{"ruleId":"385","severity":1,"message":"453","line":6,"column":42,"nodeType":"387","messageId":"388","endLine":6,"endColumn":52},{"ruleId":"385","severity":1,"message":"454","line":101,"column":15,"nodeType":"387","messageId":"388","endLine":101,"endColumn":17},{"ruleId":"385","severity":1,"message":"455","line":11,"column":12,"nodeType":"387","messageId":"388","endLine":11,"endColumn":22},{"ruleId":"385","severity":1,"message":"456","line":11,"column":24,"nodeType":"387","messageId":"388","endLine":11,"endColumn":37},{"ruleId":"385","severity":1,"message":"440","line":29,"column":13,"nodeType":"387","messageId":"388","endLine":29,"endColumn":18},{"ruleId":"385","severity":1,"message":"457","line":74,"column":14,"nodeType":"387","messageId":"388","endLine":74,"endColumn":21},{"ruleId":"385","severity":1,"message":"458","line":5,"column":10,"nodeType":"387","messageId":"388","endLine":5,"endColumn":15},{"ruleId":"385","severity":1,"message":"459","line":5,"column":17,"nodeType":"387","messageId":"388","endLine":5,"endColumn":20},{"ruleId":"385","severity":1,"message":"460","line":5,"column":22,"nodeType":"387","messageId":"388","endLine":5,"endColumn":25},{"ruleId":"385","severity":1,"message":"461","line":7,"column":8,"nodeType":"387","messageId":"388","endLine":7,"endColumn":16},{"ruleId":"399","severity":1,"message":"462","line":25,"column":7,"nodeType":"401","endLine":25,"endColumn":9,"suggestions":"463"},{"ruleId":"464","severity":1,"message":"465","line":38,"column":36,"nodeType":"466","messageId":"467","endLine":38,"endColumn":38},{"ruleId":"389","severity":1,"message":"390","line":40,"column":25,"nodeType":"391","endLine":40,"endColumn":109},{"ruleId":"389","severity":1,"message":"390","line":44,"column":37,"nodeType":"391","endLine":47,"endColumn":39},{"ruleId":"399","severity":1,"message":"468","line":59,"column":7,"nodeType":"401","endLine":59,"endColumn":9,"suggestions":"469"},{"ruleId":"399","severity":1,"message":"470","line":35,"column":5,"nodeType":"401","endLine":35,"endColumn":7,"suggestions":"471"},{"ruleId":"385","severity":1,"message":"472","line":129,"column":14,"nodeType":"387","messageId":"388","endLine":129,"endColumn":31},{"ruleId":"385","severity":1,"message":"473","line":5,"column":9,"nodeType":"387","messageId":"388","endLine":5,"endColumn":12},{"ruleId":"385","severity":1,"message":"474","line":6,"column":15,"nodeType":"387","messageId":"388","endLine":6,"endColumn":21},{"ruleId":"399","severity":1,"message":"475","line":41,"column":13,"nodeType":"401","endLine":41,"endColumn":15,"suggestions":"476"},{"ruleId":"385","severity":1,"message":"477","line":9,"column":11,"nodeType":"387","messageId":"388","endLine":9,"endColumn":21},{"ruleId":"399","severity":1,"message":"442","line":22,"column":7,"nodeType":"401","endLine":22,"endColumn":9,"suggestions":"478"},{"ruleId":"385","severity":1,"message":"473","line":3,"column":14,"nodeType":"387","messageId":"388","endLine":3,"endColumn":17},{"ruleId":"399","severity":1,"message":"479","line":227,"column":10,"nodeType":"401","endLine":227,"endColumn":12,"suggestions":"480"},{"ruleId":"385","severity":1,"message":"473","line":4,"column":13,"nodeType":"387","messageId":"388","endLine":4,"endColumn":16},{"ruleId":"385","severity":1,"message":"412","line":4,"column":22,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"418","line":4,"column":47,"nodeType":"387","messageId":"388","endLine":4,"endColumn":53},{"ruleId":"385","severity":1,"message":"481","line":13,"column":12,"nodeType":"387","messageId":"388","endLine":13,"endColumn":16},{"ruleId":"385","severity":1,"message":"482","line":13,"column":18,"nodeType":"387","messageId":"388","endLine":13,"endColumn":25},{"ruleId":"399","severity":1,"message":"483","line":45,"column":7,"nodeType":"401","endLine":45,"endColumn":9,"suggestions":"484"},{"ruleId":"385","severity":1,"message":"418","line":4,"column":28,"nodeType":"387","messageId":"388","endLine":4,"endColumn":34},{"ruleId":"385","severity":1,"message":"485","line":6,"column":9,"nodeType":"387","messageId":"388","endLine":6,"endColumn":16},{"ruleId":"385","severity":1,"message":"486","line":7,"column":10,"nodeType":"387","messageId":"388","endLine":7,"endColumn":21},{"ruleId":"385","severity":1,"message":"487","line":7,"column":30,"nodeType":"387","messageId":"388","endLine":7,"endColumn":40},{"ruleId":"385","severity":1,"message":"455","line":10,"column":12,"nodeType":"387","messageId":"388","endLine":10,"endColumn":22},{"ruleId":"385","severity":1,"message":"456","line":10,"column":24,"nodeType":"387","messageId":"388","endLine":10,"endColumn":37},{"ruleId":"399","severity":1,"message":"488","line":37,"column":7,"nodeType":"401","endLine":37,"endColumn":9,"suggestions":"489"},{"ruleId":"464","severity":1,"message":"465","line":83,"column":43,"nodeType":"466","messageId":"467","endLine":83,"endColumn":45},{"ruleId":"385","severity":1,"message":"474","line":3,"column":15,"nodeType":"387","messageId":"388","endLine":3,"endColumn":21},{"ruleId":"385","severity":1,"message":"473","line":4,"column":13,"nodeType":"387","messageId":"388","endLine":4,"endColumn":16},{"ruleId":"399","severity":1,"message":"490","line":66,"column":8,"nodeType":"401","endLine":66,"endColumn":10,"suggestions":"491"},{"ruleId":"385","severity":1,"message":"492","line":142,"column":14,"nodeType":"387","messageId":"388","endLine":142,"endColumn":24},{"ruleId":"385","severity":1,"message":"418","line":4,"column":33,"nodeType":"387","messageId":"388","endLine":4,"endColumn":39},{"ruleId":"385","severity":1,"message":"419","line":5,"column":8,"nodeType":"387","messageId":"388","endLine":5,"endColumn":15},{"ruleId":"385","severity":1,"message":"420","line":12,"column":12,"nodeType":"387","messageId":"388","endLine":12,"endColumn":21},{"ruleId":"399","severity":1,"message":"462","line":33,"column":7,"nodeType":"401","endLine":33,"endColumn":9,"suggestions":"493"},{"ruleId":"385","severity":1,"message":"494","line":43,"column":15,"nodeType":"387","messageId":"388","endLine":43,"endColumn":31},{"ruleId":"385","severity":1,"message":"423","line":67,"column":14,"nodeType":"387","messageId":"388","endLine":67,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":85,"column":37,"nodeType":"391","endLine":85,"endColumn":111},{"ruleId":"385","severity":1,"message":"405","line":95,"column":19,"nodeType":"387","messageId":"388","endLine":95,"endColumn":22},{"ruleId":"385","severity":1,"message":"424","line":96,"column":19,"nodeType":"387","messageId":"388","endLine":96,"endColumn":22},{"ruleId":"385","severity":1,"message":"495","line":3,"column":9,"nodeType":"387","messageId":"388","endLine":3,"endColumn":18},{"ruleId":"385","severity":1,"message":"496","line":3,"column":19,"nodeType":"387","messageId":"388","endLine":3,"endColumn":27},{"ruleId":"385","severity":1,"message":"451","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":4,"column":26,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"453","line":4,"column":42,"nodeType":"387","messageId":"388","endLine":4,"endColumn":52},{"ruleId":"385","severity":1,"message":"485","line":5,"column":9,"nodeType":"387","messageId":"388","endLine":5,"endColumn":16},{"ruleId":"385","severity":1,"message":"497","line":6,"column":8,"nodeType":"387","messageId":"388","endLine":6,"endColumn":20},{"ruleId":"385","severity":1,"message":"451","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":4,"column":26,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"498","line":9,"column":11,"nodeType":"387","messageId":"388","endLine":9,"endColumn":23},{"ruleId":"385","severity":1,"message":"420","line":10,"column":12,"nodeType":"387","messageId":"388","endLine":10,"endColumn":21},{"ruleId":"385","severity":1,"message":"499","line":10,"column":23,"nodeType":"387","messageId":"388","endLine":10,"endColumn":35},{"ruleId":"381","replacedBy":"500"},{"ruleId":"383","replacedBy":"501"},{"ruleId":"385","severity":1,"message":"495","line":3,"column":9,"nodeType":"387","messageId":"388","endLine":3,"endColumn":18},{"ruleId":"385","severity":1,"message":"496","line":3,"column":19,"nodeType":"387","messageId":"388","endLine":3,"endColumn":27},{"ruleId":"385","severity":1,"message":"451","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":4,"column":26,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"498","line":9,"column":11,"nodeType":"387","messageId":"388","endLine":9,"endColumn":23},{"ruleId":"385","severity":1,"message":"451","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":3,"column":26,"nodeType":"387","messageId":"388","endLine":3,"endColumn":33},{"ruleId":"385","severity":1,"message":"498","line":8,"column":11,"nodeType":"387","messageId":"388","endLine":8,"endColumn":23},{"ruleId":"385","severity":1,"message":"502","line":1,"column":10,"nodeType":"387","messageId":"388","endLine":1,"endColumn":12},{"ruleId":"385","severity":1,"message":"473","line":2,"column":13,"nodeType":"387","messageId":"388","endLine":2,"endColumn":16},{"ruleId":"385","severity":1,"message":"460","line":2,"column":23,"nodeType":"387","messageId":"388","endLine":2,"endColumn":26},{"ruleId":"385","severity":1,"message":"503","line":3,"column":8,"nodeType":"387","messageId":"388","endLine":3,"endColumn":13},{"ruleId":"385","severity":1,"message":"425","line":7,"column":12,"nodeType":"387","messageId":"388","endLine":7,"endColumn":20},{"ruleId":"385","severity":1,"message":"426","line":7,"column":22,"nodeType":"387","messageId":"388","endLine":7,"endColumn":33},{"ruleId":"385","severity":1,"message":"504","line":11,"column":14,"nodeType":"387","messageId":"388","endLine":11,"endColumn":25},{"ruleId":"385","severity":1,"message":"505","line":26,"column":14,"nodeType":"387","messageId":"388","endLine":26,"endColumn":24},{"ruleId":"385","severity":1,"message":"495","line":3,"column":9,"nodeType":"387","messageId":"388","endLine":3,"endColumn":18},{"ruleId":"385","severity":1,"message":"496","line":3,"column":19,"nodeType":"387","messageId":"388","endLine":3,"endColumn":27},{"ruleId":"385","severity":1,"message":"451","line":4,"column":10,"nodeType":"387","messageId":"388","endLine":4,"endColumn":24},{"ruleId":"385","severity":1,"message":"452","line":4,"column":26,"nodeType":"387","messageId":"388","endLine":4,"endColumn":33},{"ruleId":"385","severity":1,"message":"453","line":4,"column":42,"nodeType":"387","messageId":"388","endLine":4,"endColumn":52},{"ruleId":"385","severity":1,"message":"485","line":5,"column":9,"nodeType":"387","messageId":"388","endLine":5,"endColumn":16},"no-native-reassign",["506"],"no-negated-in-lhs",["507"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'setMenuVisibility' is assigned a value but never used.","'editContent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getLATs', 'getProducts', and 'getProject'. Either include them or remove the dependency array.","ArrayExpression",["508"],"'a' is assigned a value but never used.","Expected '===' and instead saw '=='.","'add' is defined but never used.","React Hook useEffect has missing dependencies: 'getLATS' and 'getProject'. Either include them or remove the dependency array.",["509"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'getActivities', 'getMCS', 'getProduct', and 'getProject'. Either include them or remove the dependency array.",["510"],"'getDatabase' is defined but never used.","React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.",["511"],"'getStorage' is defined but never used.","React Hook useEffect has a missing dependency: 'getActivities'. Either include it or remove the dependency array.",["512"],"'update' is defined but never used.","'TaskRow' is defined but never used.","'imageList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getNewsletter' and 'getNewsletterImages'. Either include them or remove the dependency array.",["513"],"'index' is assigned a value but never used.","'key' is assigned a value but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["514"],"'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'listOfImages' and 'newsletterKey'. Either include them or remove the dependency array.",["515"],"'innerKey' is assigned a value but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","no-redeclare","'getMacroActivities' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'dbRef' and 'getProjects'. Either include them or remove the dependency array.",["516"],"'count' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dbRef'. Either include it or remove the dependency array.",["517"],"React Hook useEffect has missing dependencies: 'aboutPomar.Key' and 'listOfImages'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPomar' needs the current value of 'aboutPomar.Key'.",["518"],"'setFile' is already defined.","'latKeys' is assigned a value but never used.","'setLatKeys' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getLAT' and 'getProjects'. Either include them or remove the dependency array.",["519"],"'getDownloadURL' is defined but never used.","'listAll' is defined but never used.","'storageRef' is defined but never used.","'id' is assigned a value but never used.","'newsLetter' is assigned a value but never used.","'setNewsLetter' is assigned a value but never used.","'setFile' is defined but never used.","'child' is defined but never used.","'get' is defined but never used.","'ref' is defined but never used.","'ReactDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'listOfImages'. Either include it or remove the dependency array.",["520"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getLATs' and 'getProjects'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.",["522"],"'setPeopleInvolved' is defined but never used.","'set' is defined but never used.","'uuidv4' is defined but never used.","React Hook useEffect has missing dependencies: 'dbRef' and 'getLats'. Either include them or remove the dependency array.",["523"],"'productKey' is assigned a value but never used.",["524"],"React Hook useEffect has a missing dependency: 'setKey'. Either include it or remove the dependency array.",["525"],"'keys' is assigned a value but never used.","'setKeys' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getActivities' and 'getMCS'. Either include them or remove the dependency array.",["526"],"'Storage' is defined but never used.","'uploadBytes' is defined but never used.","'refStorage' is defined but never used.","React Hook useEffect has a missing dependency: 'getNewsletter'. Either include it or remove the dependency array.",["527"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["528"],"'createRole' is defined but never used.",["529"],"'deleteNewsLetter' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FileDownload' is defined but never used.","'listOfImages' is assigned a value but never used.","'setImageList' is assigned a value but never used.",["506"],["507"],"'db' is defined but never used.","'React' is defined but never used.","'getProjects' is defined but never used.","'getProject' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"548","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"554","fix":"571"},"Update the dependencies array to be: [getLATs, getProducts, getProject]",{"range":"572","text":"573"},"Update the dependencies array to be: [getLATS, getProject]",{"range":"574","text":"575"},"Update the dependencies array to be: [getActivities, getMCS, getProduct, getProject]",{"range":"576","text":"577"},"Update the dependencies array to be: [getProject]",{"range":"578","text":"579"},"Update the dependencies array to be: [getActivities]",{"range":"580","text":"581"},"Update the dependencies array to be: [getNewsletter, getNewsletterImages]",{"range":"582","text":"583"},"Update the dependencies array to be: [getUsers]",{"range":"584","text":"585"},"Update the dependencies array to be: [listOfImages, newsletterKey]",{"range":"586","text":"587"},"Update the dependencies array to be: [dbRef, getProjects]",{"range":"588","text":"589"},"Update the dependencies array to be: [dbRef]",{"range":"590","text":"591"},"Update the dependencies array to be: [aboutPomar.Key, listOfImages]",{"range":"592","text":"593"},"Update the dependencies array to be: [getLAT, getProjects]",{"range":"594","text":"595"},"Update the dependencies array to be: [listOfImages]",{"range":"596","text":"597"},"Update the dependencies array to be: [getLATs, getProjects]",{"range":"598","text":"599"},"Update the dependencies array to be: [getProjects]",{"range":"600","text":"601"},"Update the dependencies array to be: [dbRef, getLats]",{"range":"602","text":"603"},{"range":"604","text":"591"},"Update the dependencies array to be: [setKey]",{"range":"605","text":"606"},"Update the dependencies array to be: [getActivities, getMCS]",{"range":"607","text":"608"},"Update the dependencies array to be: [getNewsletter]",{"range":"609","text":"610"},"Update the dependencies array to be: [getUser]",{"range":"611","text":"612"},{"range":"613","text":"597"},[508,510],"[getLATs, getProducts, getProject]",[1645,1647],"[getLATS, getProject]",[1866,1868],"[getActivities, getMCS, getProduct, getProject]",[3796,3798],"[getProject]",[846,848],"[getActivities]",[795,797],"[getNewsletter, getNewsletterImages]",[498,500],"[getUsers]",[1129,1131],"[listOfImages, newsletterKey]",[2778,2780],"[dbRef, getProjects]",[854,856],"[dbRef]",[1324,1326],"[aboutPomar.Key, listOfImages]",[912,914],"[getLAT, getProjects]",[760,762],"[listOfImages]",[1195,1197],"[getLATs, getProjects]",[754,756],"[getProjects]",[1127,1129],"[dbRef, getLats]",[700,702],[7927,7929],"[setKey]",[1426,1428],"[getActivities, getMCS]",[944,946],"[getNewsletter]",[1648,1650],"[getUser]",[1247,1249]]