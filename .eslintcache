[{"/workspace/taskMan/src/index.js":"1","/workspace/taskMan/src/App.js":"2","/workspace/taskMan/src/reportWebVitals.js":"3","/workspace/taskMan/src/main/Main.jsx":"4","/workspace/taskMan/src/components/Board.jsx":"5","/workspace/taskMan/src/components/Header.jsx":"6","/workspace/taskMan/src/components/Footer.jsx":"7","/workspace/taskMan/src/components/Menu.jsx":"8","/workspace/taskMan/src/components/Report.jsx":"9","/workspace/taskMan/src/components/Sticky.jsx":"10","/workspace/taskMan/src/components/TaskRow.js":"11","/workspace/taskMan/src/components/modalforms/AddNewTask.jsx":"12","/workspace/taskMan/src/components/projectviews/Projects.jsx":"13","/workspace/taskMan/src/components/database/DatabaseHelper.js":"14","/workspace/taskMan/src/components/Charts.jsx":"15","/workspace/taskMan/src/components/projectviews/Products.jsx":"16","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx":"17","/workspace/taskMan/src/components/projectviews/Activities.jsx":"18"},{"size":500,"mtime":1670234785000,"results":"19","hashOfConfig":"20"},{"size":270,"mtime":1670234785000,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1670234785000,"results":"22","hashOfConfig":"20"},{"size":487,"mtime":1670234785000,"results":"23","hashOfConfig":"20"},{"size":1374,"mtime":1670333870915,"results":"24","hashOfConfig":"20"},{"size":1902,"mtime":1670240395000,"results":"25","hashOfConfig":"20"},{"size":1012,"mtime":1670234785000,"results":"26","hashOfConfig":"20"},{"size":1166,"mtime":1670333824907,"results":"27","hashOfConfig":"20"},{"size":1386,"mtime":1670234785000,"results":"28","hashOfConfig":"20"},{"size":3051,"mtime":1670234924000,"results":"29","hashOfConfig":"20"},{"size":554,"mtime":1670300783000,"results":"30","hashOfConfig":"20"},{"size":2167,"mtime":1670234785000,"results":"31","hashOfConfig":"20"},{"size":1615,"mtime":1670330857999,"results":"32","hashOfConfig":"20"},{"size":751,"mtime":1670235901000,"results":"33","hashOfConfig":"20"},{"size":4669,"mtime":1670327095000,"results":"34","hashOfConfig":"20"},{"size":1599,"mtime":1670331657855,"results":"35","hashOfConfig":"20"},{"size":1408,"mtime":1670333353627,"results":"36","hashOfConfig":"20"},{"size":1635,"mtime":1670334094447,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13nomt5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/taskMan/src/index.js",[],["80","81"],"/workspace/taskMan/src/App.js",[],"/workspace/taskMan/src/reportWebVitals.js",[],"/workspace/taskMan/src/main/Main.jsx",[],"/workspace/taskMan/src/components/Board.jsx",[],"/workspace/taskMan/src/components/Header.jsx",[],"/workspace/taskMan/src/components/Footer.jsx",[],"/workspace/taskMan/src/components/Menu.jsx",[],"/workspace/taskMan/src/components/Report.jsx",[],"/workspace/taskMan/src/components/Sticky.jsx",["82"],"import React, { useState } from 'react'\nimport './Sticky.css'\nimport Modal from 'react-modal'\nimport AddNewTaskForm from './modalforms/AddNewTask'\n\nfunction getTaskElements(elements, leftArrow, rightArrow){\n    let result = []\n    for (let element in elements){\n        result.push(\n            <div className='icon-container'>\n                <div className='taskDescription'>\n                    {elements[element]}\n                </div>\n                \n                <div className='leftArrow'>\n                    <i className={leftArrow}></i>\n                </div>\n            \n                <div className='rightArrow'>\n                    <i className={rightArrow}></i>\n                </div>\n\n                <div className='deleteItem'>\n                    <i className='bi bi-trash'></i>\n                </div>\n        </div>\n        )\n    }\n    return result\n}\n\n\nfunction Sticky(props){\n    const [showModalForm, setShowModalForm] = useState(false)\n  \n    return (\n        <div className='sticky-notes'>\n            <div className='items'>\n                <div className='note-header'>\n                    <div className='note-header-title'>\n                        {props.header}\n                    </div>\n                    <div className='note-header-icon'>\n                        <button className='call-modal-button' onClick={() => setShowModalForm(true)}\n                            style={{'border':'none', 'background-color':'white'}}\n                        >\n                             <i className=\"bi bi-plus-square\"/>\n                       </button>\n\n                       <Modal  isOpen={showModalForm} \n                              onRequestClose={() => setShowModalForm(false)}\n                              style={\n                                    {\n                                        overlay:{\n                                            backgroundColor: 'rgb(204, 204, 204,0.9)'\n                                        },\n                                        \n                                    } \n                            }\n                        >\n                        <div className='modal-form-footer'>\n                            <div className='footer-btn'>\n                                <button className='btn btn-success' onClick= {() => setShowModalForm(false)}>Submit</button>\n                            </div>\n                            <div style={{'margin': '5px'}}/>\n                            <div className='footer-btn'>\n                                <button className='btn btn-danger' onClick= {() => setShowModalForm(false)}>close</button>\n                            </div>\n                        </div> \n                    </Modal>\n                </div>        \n            </div>\n            <div className='content'>\n                {getTaskElements(props.content,\n                                props.leftArrow,\n                                props.rigthArrow)}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Sticky\n   ",["83","84"],"/workspace/taskMan/src/components/TaskRow.js",[],"/workspace/taskMan/src/components/modalforms/AddNewTask.jsx",[],"/workspace/taskMan/src/components/projectviews/Projects.jsx",["85","86","87"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Projects extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({projects: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef, `Project`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({projects: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.projects){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].ProjectName}\n                         LAT = {this.state.projects[key].LAT}\n                         DeadLine = {this.state.projects[key].Deadline}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>LAT</div>\n                <div className='report-header'>Nome do Projecto</div>\n                <div className='report-header'>DeadLine Date</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Projects","/workspace/taskMan/src/components/database/DatabaseHelper.js",[],"/workspace/taskMan/src/components/Charts.jsx",["88","89"],"import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Charts.css'\nimport { BarChart, Bar} from 'recharts';\n\nconst data01 = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\nconst data02 = [\n  { name: 'A1', value: 100 },\n  { name: 'A2', value: 300 },\n  { name: 'B1', value: 100 },\n  { name: 'B2', value: 80 },\n  { name: 'B3', value: 40 },\n  { name: 'B4', value: 30 },\n  { name: 'B5', value: 50 },\n  { name: 'C1', value: 100 },\n  { name: 'C2', value: 200 },\n  { name: 'D1', value: 150 },\n  { name: 'D2', value: 50 },\n];\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  \n    state = {\n        data: [\n          {\n            name: 'Page A',\n            uv: 4000,\n            pv: 2400,\n            amt: 2400,\n          },\n          {\n            name: 'Page B',\n            uv: 3000,\n            pv: 1398,\n            amt: 2210,\n          },\n          {\n            name: 'Page C',\n            uv: 2000,\n            pv: 9800,\n            amt: 2290,\n          },\n          {\n            name: 'Page D',\n            uv: 2780,\n            pv: 3908,\n            amt: 2000,\n          },\n          {\n            name: 'Page E',\n            uv: 1890,\n            pv: 4800,\n            amt: 2181,\n          },\n          {\n            name: 'Page F',\n            uv: 2390,\n            pv: 3800,\n            amt: 2500,\n          },\n          {\n            name: 'Page G',\n            uv: 3490,\n            pv: 4300,\n            amt: 2100,\n          },\n        ],\n        activeIndex: 0,\n      };\n    \n      handleClick = (data, index) => {\n        this.setState({\n          activeIndex: index,\n        });\n      };\n\n    \n    render() {\n        \n        const { activeIndex, data } = this.state\n        const activeItem = data[activeIndex]\n        \n        return (\n            <div className='charts-container'>\n\n         \n            <div className='charts'>\n                <div className='bar-chart'>\n                    <p>Bar Chart</p>\n                    <ResponsiveContainer width=\"100%\" height={100}>\n                    <BarChart width={150} height={40} data={data}>\n                        <Bar dataKey=\"uv\" onClick={this.handleClick}>\n                        {data.map((entry, index) => (\n                            <Cell cursor=\"pointer\" fill={index === activeIndex ? '#82ca9d' : '#8884d8'} key={`cell-${index}`} />\n                        ))}\n                        </Bar>\n                    </BarChart>\n                    </ResponsiveContainer>\n                    <p className=\"content\">{`Uv of \"${activeItem.name}\": ${activeItem.uv}`}</p>\n                </div>\n\n                <div className='linechart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart width={500} height={300} data={data} margin={{top: 5,right: 30,left: 20,bottom: 5,}}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div >\n\n                <div className='pie-chart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart width={400} height={400}>\n                        <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n                        <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n                        </PieChart>\n                    </ResponsiveContainer>\n                </div>\n            </div >\n        </div>\n    );\n  }\n}\n","/workspace/taskMan/src/components/projectviews/Products.jsx",["90","91","92"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Product extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({products: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef, `Product`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({projects: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.projects){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].Name}\n                         LAT = {this.state.projects[key].Area}\n                         DeadLine = {this.state.projects[key].Status}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>Area</div>\n                <div className='report-header'>Nome do Producto</div>\n                <div className='report-header'>Estado</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Product","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx",[],"/workspace/taskMan/src/components/projectviews/Activities.jsx",["93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":22},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"100","severity":1,"message":"106","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":3,"column":19,"nodeType":"102","messageId":"103","endLine":3,"endColumn":28},{"ruleId":"100","severity":1,"message":"108","line":4,"column":22,"nodeType":"102","messageId":"103","endLine":4,"endColumn":33},{"ruleId":"100","severity":1,"message":"109","line":2,"column":25,"nodeType":"102","messageId":"103","endLine":2,"endColumn":31},{"ruleId":"100","severity":1,"message":"110","line":27,"column":7,"nodeType":"102","messageId":"103","endLine":27,"endColumn":11},{"ruleId":"100","severity":1,"message":"106","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":3,"column":19,"nodeType":"102","messageId":"103","endLine":3,"endColumn":28},{"ruleId":"100","severity":1,"message":"108","line":4,"column":22,"nodeType":"102","messageId":"103","endLine":4,"endColumn":33},{"ruleId":"100","severity":1,"message":"106","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":3,"column":19,"nodeType":"102","messageId":"103","endLine":3,"endColumn":28},{"ruleId":"100","severity":1,"message":"108","line":4,"column":22,"nodeType":"102","messageId":"103","endLine":4,"endColumn":33},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'AddNewTaskForm' is defined but never used.","Identifier","unusedVar",["111"],["112"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'getDatabase' is defined but never used.","'Sector' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]