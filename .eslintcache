[{"/workspace/taskMan/src/index.js":"1","/workspace/taskMan/src/App.js":"2","/workspace/taskMan/src/reportWebVitals.js":"3","/workspace/taskMan/src/main/Main.jsx":"4","/workspace/taskMan/src/components/Board.jsx":"5","/workspace/taskMan/src/components/Header.jsx":"6","/workspace/taskMan/src/components/Footer.jsx":"7","/workspace/taskMan/src/components/Menu.jsx":"8","/workspace/taskMan/src/components/Sticky.jsx":"9","/workspace/taskMan/src/components/TaskRow.js":"10","/workspace/taskMan/src/components/modalforms/AddNewTask.jsx":"11","/workspace/taskMan/src/components/projectviews/Projects.jsx":"12","/workspace/taskMan/src/components/database/DatabaseHelper.js":"13","/workspace/taskMan/src/components/Charts.jsx":"14","/workspace/taskMan/src/components/projectviews/Products.jsx":"15","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx":"16","/workspace/taskMan/src/components/projectviews/Activities.jsx":"17","/workspace/taskMan/src/components/Report.jsx":"18","/workspace/taskMan/src/components/loginpage/Login.jsx":"19","/workspace/taskMan/src/components/Home.jsx":"20","/workspace/taskMan/src/components/projectviews/LAT.jsx":"21"},{"size":500,"mtime":1670234785000,"results":"22","hashOfConfig":"23"},{"size":270,"mtime":1670234785000,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1670234785000,"results":"25","hashOfConfig":"23"},{"size":554,"mtime":1670485773000,"results":"26","hashOfConfig":"23"},{"size":1745,"mtime":1671205643000,"results":"27","hashOfConfig":"23"},{"size":1902,"mtime":1670240395000,"results":"28","hashOfConfig":"23"},{"size":1012,"mtime":1670234785000,"results":"29","hashOfConfig":"23"},{"size":1396,"mtime":1671260772000,"results":"30","hashOfConfig":"23"},{"size":2415,"mtime":1671175932000,"results":"31","hashOfConfig":"23"},{"size":912,"mtime":1670912726000,"results":"32","hashOfConfig":"23"},{"size":2167,"mtime":1670234785000,"results":"33","hashOfConfig":"23"},{"size":3814,"mtime":1671260042000,"results":"34","hashOfConfig":"23"},{"size":751,"mtime":1670235901000,"results":"35","hashOfConfig":"23"},{"size":4669,"mtime":1670327095000,"results":"36","hashOfConfig":"23"},{"size":3588,"mtime":1671260376000,"results":"37","hashOfConfig":"23"},{"size":3643,"mtime":1671261130000,"results":"38","hashOfConfig":"23"},{"size":2034,"mtime":1671084205000,"results":"39","hashOfConfig":"23"},{"size":1386,"mtime":1670335483363,"results":"40","hashOfConfig":"23"},{"size":2145,"mtime":1670485254000,"results":"41","hashOfConfig":"23"},{"size":1864,"mtime":1671175895000,"results":"42","hashOfConfig":"23"},{"size":3226,"mtime":1671180441000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13nomt5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},"/workspace/taskMan/src/index.js",[],["96","97"],"/workspace/taskMan/src/App.js",[],"/workspace/taskMan/src/reportWebVitals.js",[],"/workspace/taskMan/src/main/Main.jsx",["98"],"import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\nimport Board from '../components/Board'\nimport Menu from '../components/Menu'\nimport './Main.css'\nimport Login from '../components/loginpage/Login'\n\nfunction Main() {\n    return (\n        <div className='main'>\n            <Header/>\n                <div className='main-content'>\n                    <Menu isLogged={false}/>\n                    <Board/>\n                </div>\n            <Footer/>\n        </div>\n    )\n}\nexport default Main\n  ","/workspace/taskMan/src/components/Board.jsx",["99","100"],"import './Board.css'\nimport React from 'react'\nimport Projects from  './projectviews/Projects'\nimport Charts from './Charts'\nimport {Switch, Route} from 'react-router-dom'\nimport Product from './projectviews/Products'\nimport MacroActivity from './projectviews/MacroActivities'\nimport Activities from './projectviews/Activities'\nimport './Report.css'\nimport './projectviews/Products'\nimport Home from './Home'\nimport Lat from './projectviews/LAT'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\n\nfunction Board() {\n\n    return (\n        <section className='container'>\n            <div className='title' id='title'>\n                <i class=\"bi bi-arrow-left\" style={{cursor: 'pointer'}} />\n            </div>\n            <div className='board'>\n                <Switch>\n                    <Route path='/projects' exact>\n                        <Projects/>\n                    </Route>     \n                    <Route path='/products'>\n                        <Product/>\n                    </Route>\n\n                    <Route path='/macroactivities' >\n                        <MacroActivity/>\n                    </Route>\n                    \n                    <Route path='/activities' exact>\n                        <Activities/>\n                    </Route>\n\n                    <Route path='/products' exact>\n                        <Product/>\n                    </Route>\n\n                    <Route path='/lats' exact>\n                        <Lat/>    \n                    </Route>  \n\n                    <Route path='' exact>\n                        <Home/>\n                    </Route>  \n                      \n                </Switch>\n            </div>\n        </section>\n    )\n}\n\nexport default Board\n        ","/workspace/taskMan/src/components/Header.jsx",[],"/workspace/taskMan/src/components/Footer.jsx",[],"/workspace/taskMan/src/components/Menu.jsx",["101"],"/workspace/taskMan/src/components/Sticky.jsx",[],["102","103"],"/workspace/taskMan/src/components/TaskRow.js",[],"/workspace/taskMan/src/components/modalforms/AddNewTask.jsx",[],["104","105"],"/workspace/taskMan/src/components/projectviews/Projects.jsx",["106","107","108"],"/workspace/taskMan/src/components/database/DatabaseHelper.js",[],"/workspace/taskMan/src/components/Charts.jsx",["109","110"],"import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Charts.css'\nimport { BarChart, Bar} from 'recharts';\n\nconst data01 = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\nconst data02 = [\n  { name: 'A1', value: 100 },\n  { name: 'A2', value: 300 },\n  { name: 'B1', value: 100 },\n  { name: 'B2', value: 80 },\n  { name: 'B3', value: 40 },\n  { name: 'B4', value: 30 },\n  { name: 'B5', value: 50 },\n  { name: 'C1', value: 100 },\n  { name: 'C2', value: 200 },\n  { name: 'D1', value: 150 },\n  { name: 'D2', value: 50 },\n];\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  \n    state = {\n        data: [\n          {\n            name: 'Page A',\n            uv: 4000,\n            pv: 2400,\n            amt: 2400,\n          },\n          {\n            name: 'Page B',\n            uv: 3000,\n            pv: 1398,\n            amt: 2210,\n          },\n          {\n            name: 'Page C',\n            uv: 2000,\n            pv: 9800,\n            amt: 2290,\n          },\n          {\n            name: 'Page D',\n            uv: 2780,\n            pv: 3908,\n            amt: 2000,\n          },\n          {\n            name: 'Page E',\n            uv: 1890,\n            pv: 4800,\n            amt: 2181,\n          },\n          {\n            name: 'Page F',\n            uv: 2390,\n            pv: 3800,\n            amt: 2500,\n          },\n          {\n            name: 'Page G',\n            uv: 3490,\n            pv: 4300,\n            amt: 2100,\n          },\n        ],\n        activeIndex: 0,\n      };\n    \n      handleClick = (data, index) => {\n        this.setState({\n          activeIndex: index,\n        });\n      };\n\n    \n    render() {\n        \n        const { activeIndex, data } = this.state\n        const activeItem = data[activeIndex]\n        \n        return (\n            <div className='charts-container'>\n\n         \n            <div className='charts'>\n                <div className='bar-chart'>\n                    <p>Bar Chart</p>\n                    <ResponsiveContainer width=\"100%\" height={100}>\n                    <BarChart width={150} height={40} data={data}>\n                        <Bar dataKey=\"uv\" onClick={this.handleClick}>\n                        {data.map((entry, index) => (\n                            <Cell cursor=\"pointer\" fill={index === activeIndex ? '#82ca9d' : '#8884d8'} key={`cell-${index}`} />\n                        ))}\n                        </Bar>\n                    </BarChart>\n                    </ResponsiveContainer>\n                    <p className=\"content\">{`Uv of \"${activeItem.name}\": ${activeItem.uv}`}</p>\n                </div>\n\n                <div className='linechart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart width={500} height={300} data={data} margin={{top: 5,right: 30,left: 20,bottom: 5,}}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div >\n\n                <div className='pie-chart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart width={400} height={400}>\n                        <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n                        <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n                        </PieChart>\n                    </ResponsiveContainer>\n                </div>\n            </div >\n        </div>\n    );\n  }\n}\n","/workspace/taskMan/src/components/projectviews/Products.jsx",["111","112"],"/workspace/taskMan/src/components/projectviews/MacroActivities.jsx",["113"],"/workspace/taskMan/src/components/projectviews/Activities.jsx",["114"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport { child, get, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Activities extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({activities: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n            \n            get(child(dbRef,`Activity`)).then((snapshot) => {\n                    if (snapshot.exists())\n                    {\n                        let acts = []\n                        const vals = snapshot.val()\n\n                        for (let a in vals){\n                            console.log(vals[a])\n                            if (document.URL.split('=')[1] == vals[a].MacroActivityKey){\n                                acts.push(vals[a])\n                            }\n                        }\n                    }            \n                    else{\n                        alert('Sem actividades para carregar')\n                    }\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        console.log(`Activities ${this.state}`)\n\n        if (this.state !== null ){\n            for(let key in this.state.activities){\n                \n               values.push( <TaskRow ProjectName = {this.state.activities[key].Name}\n                         LAT = {this.state.activities[key].Description}\n                         DeadLine = {this.state.activities[key].Comments}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>Nome da Actividade</div>\n                <div className='report-header'>Descrição</div>\n                <div className='report-header'>Comentarios</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Activities","/workspace/taskMan/src/components/Report.jsx",[],"/workspace/taskMan/src/components/loginpage/Login.jsx",["115"],"import React from 'react'\nimport './Login.css'\n\nclass FluidInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        focused: false,\n        value: \"\"\n      };\n    }\n    focusField() {\n      const { focused } = this.state;\n      this.setState({\n        focused: !focused\n      });\n    }\n    handleChange(event) {\n      const { target } = event;\n      const { value } = target;\n      this.setState({\n        value: value\n      });\n    }\n    render() {\n      const { type, label, style, id } = this.props;\n      const { focused, value } = this.state;\n      \n      let inputClass = \"fluid-input\";\n      if (focused) {\n        inputClass += \" fluid-input--focus\";\n      } else if (value != \"\") {\n        inputClass += \" fluid-input--open\";\n      }\n      \n      return (\n        <div className={inputClass} style={style}>\n          <div className=\"fluid-input-holder\">\n            \n            <input \n              className=\"fluid-input-input\"\n              type={type}\n              id={id}\n              onFocus={this.focusField.bind(this)}\n              onBlur={this.focusField.bind(this)}\n              onChange={this.handleChange.bind(this)}\n              autocomplete=\"off\"\n            />\n            <label className=\"fluid-input-label\" forHtml={id}>{label}</label>\n            \n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Button extends React.Component {\n    render() {\n      return (\n        <div className={`button ${this.props.buttonClass}`} onClick={this.props.onClick}>\n          {this.props.buttonText}\n        </div>\n      );\n    }\n  }\n  \n  class Login extends React.Component {\n    render() {\n      \n      const style = {\n        margin: \"15px 0\"\n      };\n      return (\n        <div className=\"login-container\">\n          <div className=\"title\">\n           Login\n          </div>\n          <FluidInput type=\"text\" label=\"name\" id=\"name\" style={style} />\n          <FluidInput type=\"password\" label=\"password\" id=\"password\" style={style} />\n          <Button buttonText=\"log in\" buttonClass=\"login-button\" />\n        </div>\n      );\n    }\n  }\n  \nexport default Login","/workspace/taskMan/src/components/Home.jsx",["116"],"import './Home.css'\nimport Stricky from './Sticky'\nimport React from 'react'\nimport {db} from './database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, ref } from \"firebase/database\"\n\nfunction Home  (){\n\n    const [lats, setLats] = useState({})\n    const [products, setProducts ] = useState({})\n\n    useEffect( () => {\n        const dbRef = ref(db)\n           \n            get(child(dbRef, `LAT`)).then((snapshot) => {\n                    if (snapshot.exists()){\n                        setLats(snapshot.val())\n                    }\n                    else{\n                        alert('no data to load from db server')\n                    }\n                })\n            }\n\n    ,[])\n\n    useEffect( () => {\n        const dbRef = ref(db)\n           \n            get(child(dbRef, `Product`)).then((snapshot) => {\n                    if (snapshot.exists()){\n                        setProducts(snapshot.val())\n                    }\n                })\n            }\n    ,[])\n\n\n    let cards = []\n    for(let key in lats){\n            let prods = []\n            let fullProdsArray = []\n            let cont = 0\n            for(let prodsKey in products){\n                if ( products[prodsKey].Area == lats[key].Description){\n                    if (cont < 5 ){\n                        prods.push(products[prodsKey])   \n                    }\n                    cont++\n                    fullProdsArray.push(products[prodsKey].Status)\n                }\n            }\n            cards.push(\n                <Stricky header={lats[key].Description}\n                       products={prods}        \n                       fullProds = {fullProdsArray}\n                       Key={lats[key].Key}\n            />)\n    }\n\n    return (\n        <div className='home-container'>\n            {cards}\n        </div>\n    )\n}\n\nexport default Home","/workspace/taskMan/src/components/projectviews/LAT.jsx",["117","118","119"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\n\n\nfunction Lat (){\n   const [products, setProducts] = useState({products:  []}) \n\n   const history = useHistory()\n\n    useEffect( () => {\n        const dbRef = ref(db)\n           \n            get(child(dbRef, `Product`)).then((snapshot) => {\n                    if (snapshot.exists()){\n                        setProducts({projects: snapshot.val()})\n                    }\n                    else{\n                        alert('no data to load from db server')\n                   }\n                })\n        }\n    ,[])\n\n    function handleButtonEvent(e){\n       \n       let productKey = e.target.id\n       let key  = productKey.split('.')\n       \n       history.push({\n        pathname: '/macroactivities',\n        search: `?key=${key[1]}`,\n      })\n    }\n\n    function filterProducts(prods){\n        let prodArray = []\n    \n        for(let p in prods.projects){\n            \n            if (prods.projects[p].LatKey === document.URL.split('=')[1]){\n                prodArray.push(prods.projects[p])\n                console.log(true)\n             }\n        }\n        return prodArray\n    }\n\n    function convertStatusToPercentage(percentage){\n\n        if (percentage === 'Não Iniciado'){\n            percentage = 0\n        }else if (percentage === 'Em progresso'){\n            percentage = 0.5\n        }else if (percentage === 'Cancelado'){\n            percentage = 0\n        }else if (percentage === 'Concluido'){\n            percentage = 1\n        }\n        return percentage\n    }\n\n    function buildTable(){\n        \n        let values = []\n        let prods = filterProducts(products)\n        \n        if (products !== null ){\n            for(let index in prods){\n                values.push(\n                    <div className='rows-report' >\n                        <div className='colmns-report'>\n                        <ul >\n                            <li >\n                                {prods[index].Area}\n                            </li>\n                            <li >\n                                {prods[index].Name}\n                            </li>\n                            <li >\n                                {prods[index].Status}\n                            </li>\n                            <li>\n                                {convertStatusToPercentage(prods[index].Status) * 100}%\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                )\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>Area</div>\n                <div className='report-header'>Nome do Producto</div>\n                <div className='report-header'>Estado</div>\n                <div className='report-header'>%</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n    return buildTable()\n}\n\nexport default Lat",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":20},{"ruleId":"124","severity":1,"message":"130","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","severity":1,"message":"135","line":3,"column":22,"nodeType":"126","messageId":"127","endLine":3,"endColumn":33},{"ruleId":"124","severity":1,"message":"136","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":15},{"ruleId":"124","severity":1,"message":"137","line":5,"column":9,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"138","line":2,"column":25,"nodeType":"126","messageId":"127","endLine":2,"endColumn":31},{"ruleId":"124","severity":1,"message":"139","line":27,"column":7,"nodeType":"126","messageId":"127","endLine":27,"endColumn":11},{"ruleId":"124","severity":1,"message":"135","line":4,"column":22,"nodeType":"126","messageId":"127","endLine":4,"endColumn":33},{"ruleId":"124","severity":1,"message":"136","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"135","line":4,"column":22,"nodeType":"126","messageId":"127","endLine":4,"endColumn":33},{"ruleId":"140","severity":1,"message":"141","line":25,"column":60,"nodeType":"142","messageId":"143","endLine":25,"endColumn":62},{"ruleId":"140","severity":1,"message":"144","line":32,"column":24,"nodeType":"142","messageId":"143","endLine":32,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":46,"column":46,"nodeType":"142","messageId":"143","endLine":46,"endColumn":48},{"ruleId":"124","severity":1,"message":"135","line":4,"column":22,"nodeType":"126","messageId":"127","endLine":4,"endColumn":33},{"ruleId":"124","severity":1,"message":"136","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"145","line":28,"column":14,"nodeType":"126","messageId":"127","endLine":28,"endColumn":31},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Charts' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.",["146"],["147"],["146"],["147"],"'getDatabase' is defined but never used.","'TaskRow' is defined but never used.","'Link' is defined but never used.","'Sector' is defined but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'handleButtonEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]