[{"/workspace/taskMan/src/index.js":"1","/workspace/taskMan/src/App.js":"2","/workspace/taskMan/src/reportWebVitals.js":"3","/workspace/taskMan/src/main/Main.jsx":"4","/workspace/taskMan/src/components/Board.jsx":"5","/workspace/taskMan/src/components/Header.jsx":"6","/workspace/taskMan/src/components/Footer.jsx":"7","/workspace/taskMan/src/components/Menu.jsx":"8","/workspace/taskMan/src/components/Sticky.jsx":"9","/workspace/taskMan/src/components/TaskRow.js":"10","/workspace/taskMan/src/components/modalforms/AddNewTask.jsx":"11","/workspace/taskMan/src/components/projectviews/Projects.jsx":"12","/workspace/taskMan/src/components/database/DatabaseHelper.js":"13","/workspace/taskMan/src/components/Charts.jsx":"14","/workspace/taskMan/src/components/projectviews/Products.jsx":"15","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx":"16","/workspace/taskMan/src/components/projectviews/Activities.jsx":"17","/workspace/taskMan/src/components/Report.jsx":"18"},{"size":500,"mtime":1670234785000,"results":"19","hashOfConfig":"20"},{"size":270,"mtime":1670234785000,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1670234785000,"results":"22","hashOfConfig":"20"},{"size":487,"mtime":1670234785000,"results":"23","hashOfConfig":"20"},{"size":1253,"mtime":1670336002000,"results":"24","hashOfConfig":"20"},{"size":1902,"mtime":1670240395000,"results":"25","hashOfConfig":"20"},{"size":1012,"mtime":1670234785000,"results":"26","hashOfConfig":"20"},{"size":1166,"mtime":1670333824000,"results":"27","hashOfConfig":"20"},{"size":3051,"mtime":1670234924000,"results":"28","hashOfConfig":"20"},{"size":563,"mtime":1670341329000,"results":"29","hashOfConfig":"20"},{"size":2167,"mtime":1670234785000,"results":"30","hashOfConfig":"20"},{"size":1615,"mtime":1670330857000,"results":"31","hashOfConfig":"20"},{"size":751,"mtime":1670235901000,"results":"32","hashOfConfig":"20"},{"size":4669,"mtime":1670327095000,"results":"33","hashOfConfig":"20"},{"size":1599,"mtime":1670331657000,"results":"34","hashOfConfig":"20"},{"size":1462,"mtime":1670344170196,"results":"35","hashOfConfig":"20"},{"size":1635,"mtime":1670334094000,"results":"36","hashOfConfig":"20"},{"size":1386,"mtime":1670335483363,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"13nomt5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/taskMan/src/index.js",[],["82","83"],"/workspace/taskMan/src/App.js",[],"/workspace/taskMan/src/reportWebVitals.js",[],"/workspace/taskMan/src/main/Main.jsx",[],"/workspace/taskMan/src/components/Board.jsx",[],["84","85"],"/workspace/taskMan/src/components/Header.jsx",[],"/workspace/taskMan/src/components/Footer.jsx",[],"/workspace/taskMan/src/components/Menu.jsx",[],"/workspace/taskMan/src/components/Sticky.jsx",["86"],"import React, { useState } from 'react'\nimport './Sticky.css'\nimport Modal from 'react-modal'\nimport AddNewTaskForm from './modalforms/AddNewTask'\n\nfunction getTaskElements(elements, leftArrow, rightArrow){\n    let result = []\n    for (let element in elements){\n        result.push(\n            <div className='icon-container'>\n                <div className='taskDescription'>\n                    {elements[element]}\n                </div>\n                \n                <div className='leftArrow'>\n                    <i className={leftArrow}></i>\n                </div>\n            \n                <div className='rightArrow'>\n                    <i className={rightArrow}></i>\n                </div>\n\n                <div className='deleteItem'>\n                    <i className='bi bi-trash'></i>\n                </div>\n        </div>\n        )\n    }\n    return result\n}\n\n\nfunction Sticky(props){\n    const [showModalForm, setShowModalForm] = useState(false)\n  \n    return (\n        <div className='sticky-notes'>\n            <div className='items'>\n                <div className='note-header'>\n                    <div className='note-header-title'>\n                        {props.header}\n                    </div>\n                    <div className='note-header-icon'>\n                        <button className='call-modal-button' onClick={() => setShowModalForm(true)}\n                            style={{'border':'none', 'background-color':'white'}}\n                        >\n                             <i className=\"bi bi-plus-square\"/>\n                       </button>\n\n                       <Modal  isOpen={showModalForm} \n                              onRequestClose={() => setShowModalForm(false)}\n                              style={\n                                    {\n                                        overlay:{\n                                            backgroundColor: 'rgb(204, 204, 204,0.9)'\n                                        },\n                                        \n                                    } \n                            }\n                        >\n                        <div className='modal-form-footer'>\n                            <div className='footer-btn'>\n                                <button className='btn btn-success' onClick= {() => setShowModalForm(false)}>Submit</button>\n                            </div>\n                            <div style={{'margin': '5px'}}/>\n                            <div className='footer-btn'>\n                                <button className='btn btn-danger' onClick= {() => setShowModalForm(false)}>close</button>\n                            </div>\n                        </div> \n                    </Modal>\n                </div>        \n            </div>\n            <div className='content'>\n                {getTaskElements(props.content,\n                                props.leftArrow,\n                                props.rigthArrow)}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Sticky\n   ",["87","88"],"/workspace/taskMan/src/components/TaskRow.js",[],"/workspace/taskMan/src/components/modalforms/AddNewTask.jsx",[],"/workspace/taskMan/src/components/projectviews/Projects.jsx",["89","90","91"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Projects extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({projects: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef, `Project`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({projects: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.projects){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].ProjectName}\n                         LAT = {this.state.projects[key].LAT}\n                         DeadLine = {this.state.projects[key].Deadline}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>LAT</div>\n                <div className='report-header'>Nome do Projecto</div>\n                <div className='report-header'>DeadLine Date</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Projects","/workspace/taskMan/src/components/database/DatabaseHelper.js",[],"/workspace/taskMan/src/components/Charts.jsx",["92","93"],"import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Charts.css'\nimport { BarChart, Bar} from 'recharts';\n\nconst data01 = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\nconst data02 = [\n  { name: 'A1', value: 100 },\n  { name: 'A2', value: 300 },\n  { name: 'B1', value: 100 },\n  { name: 'B2', value: 80 },\n  { name: 'B3', value: 40 },\n  { name: 'B4', value: 30 },\n  { name: 'B5', value: 50 },\n  { name: 'C1', value: 100 },\n  { name: 'C2', value: 200 },\n  { name: 'D1', value: 150 },\n  { name: 'D2', value: 50 },\n];\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  \n    state = {\n        data: [\n          {\n            name: 'Page A',\n            uv: 4000,\n            pv: 2400,\n            amt: 2400,\n          },\n          {\n            name: 'Page B',\n            uv: 3000,\n            pv: 1398,\n            amt: 2210,\n          },\n          {\n            name: 'Page C',\n            uv: 2000,\n            pv: 9800,\n            amt: 2290,\n          },\n          {\n            name: 'Page D',\n            uv: 2780,\n            pv: 3908,\n            amt: 2000,\n          },\n          {\n            name: 'Page E',\n            uv: 1890,\n            pv: 4800,\n            amt: 2181,\n          },\n          {\n            name: 'Page F',\n            uv: 2390,\n            pv: 3800,\n            amt: 2500,\n          },\n          {\n            name: 'Page G',\n            uv: 3490,\n            pv: 4300,\n            amt: 2100,\n          },\n        ],\n        activeIndex: 0,\n      };\n    \n      handleClick = (data, index) => {\n        this.setState({\n          activeIndex: index,\n        });\n      };\n\n    \n    render() {\n        \n        const { activeIndex, data } = this.state\n        const activeItem = data[activeIndex]\n        \n        return (\n            <div className='charts-container'>\n\n         \n            <div className='charts'>\n                <div className='bar-chart'>\n                    <p>Bar Chart</p>\n                    <ResponsiveContainer width=\"100%\" height={100}>\n                    <BarChart width={150} height={40} data={data}>\n                        <Bar dataKey=\"uv\" onClick={this.handleClick}>\n                        {data.map((entry, index) => (\n                            <Cell cursor=\"pointer\" fill={index === activeIndex ? '#82ca9d' : '#8884d8'} key={`cell-${index}`} />\n                        ))}\n                        </Bar>\n                    </BarChart>\n                    </ResponsiveContainer>\n                    <p className=\"content\">{`Uv of \"${activeItem.name}\": ${activeItem.uv}`}</p>\n                </div>\n\n                <div className='linechart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart width={500} height={300} data={data} margin={{top: 5,right: 30,left: 20,bottom: 5,}}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"name\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                        </LineChart>\n                    </ResponsiveContainer>\n                </div >\n\n                <div className='pie-chart'>\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <PieChart width={400} height={400}>\n                        <Pie data={data01} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" />\n                        <Pie data={data02} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={70} outerRadius={90} fill=\"#82ca9d\" label />\n                        </PieChart>\n                    </ResponsiveContainer>\n                </div>\n            </div >\n        </div>\n    );\n  }\n}\n","/workspace/taskMan/src/components/projectviews/Products.jsx",["94","95","96"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Product extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({products: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef, `Product`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({projects: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.projects){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].Name}\n                         LAT = {this.state.projects[key].Area}\n                         DeadLine = {this.state.projects[key].Status}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>Area</div>\n                <div className='report-header'>Nome do Producto</div>\n                <div className='report-header'>Estado</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Product","/workspace/taskMan/src/components/projectviews/MacroActivities.jsx",["97"],"/workspace/taskMan/src/components/projectviews/Activities.jsx",["98","99","100"],"import React from 'react'\nimport {db} from '../database/DatabaseHelper'\nimport {useState, useEffect} from 'react'\nimport { child, get, getDatabase, ref } from \"firebase/database\"\nimport TaskRow from '../TaskRow'\n\n\nclass Activities extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = this.setState({activities: []})\n    }\n    \n    componentDidMount(){\n            const dbRef = ref(db)\n           \n            get(child(dbRef,`Activitiy`)).then((snapshot) => {\n                    if (snapshot.exists())\n                        this.setState({activities: snapshot.val()})\n                    else\n                        alert('no data to load from db server')\n            }).finally(snapshot => {\n                console.log('finished')\n            })\n        }\n\n    render(){\n        \n        var values = []\n        \n        if (this.state !== null ){\n            for(let key in this.state.activities){\n               values.push( <TaskRow ProjectName = {this.state.projects[key].Name}\n                         LAT = {this.state.projects[key].Description}\n                         DeadLine = {this.state.projects[key].Comments}\n                         />)\n            }\n        }\n        return( \n        <div className='table-container'>\n            <div className='header-container'>\n                <div className='report-header'>Nome da Actividade</div>\n                <div className='report-header'>Descrição</div>\n                <div className='report-header'>Comentarios</div>\n            </div>\n            {values}\n        </div>\n        )\n    }\n\n}\n\nexport default Activities","/workspace/taskMan/src/components/Report.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":22},{"ruleId":"101","replacedBy":"111"},{"ruleId":"103","replacedBy":"112"},{"ruleId":"107","severity":1,"message":"113","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"114","line":3,"column":19,"nodeType":"109","messageId":"110","endLine":3,"endColumn":28},{"ruleId":"107","severity":1,"message":"115","line":4,"column":22,"nodeType":"109","messageId":"110","endLine":4,"endColumn":33},{"ruleId":"107","severity":1,"message":"116","line":2,"column":25,"nodeType":"109","messageId":"110","endLine":2,"endColumn":31},{"ruleId":"107","severity":1,"message":"117","line":27,"column":7,"nodeType":"109","messageId":"110","endLine":27,"endColumn":11},{"ruleId":"107","severity":1,"message":"113","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"114","line":3,"column":19,"nodeType":"109","messageId":"110","endLine":3,"endColumn":28},{"ruleId":"107","severity":1,"message":"115","line":4,"column":22,"nodeType":"109","messageId":"110","endLine":4,"endColumn":33},{"ruleId":null,"fatal":true,"severity":2,"message":"118","line":41,"column":53},{"ruleId":"107","severity":1,"message":"113","line":3,"column":9,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"114","line":3,"column":19,"nodeType":"109","messageId":"110","endLine":3,"endColumn":28},{"ruleId":"107","severity":1,"message":"115","line":4,"column":22,"nodeType":"109","messageId":"110","endLine":4,"endColumn":33},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],"no-unused-vars","'AddNewTaskForm' is defined but never used.","Identifier","unusedVar",["119"],["120"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'getDatabase' is defined but never used.","'Sector' is defined but never used.","'data' is assigned a value but never used.","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 39 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'table-container'\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'header-container'\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 41 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m'report-header'\u001b[39m style\u001b[33m=>\u001b[39m\u001b[33mNome\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 42 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m            {console\u001b[33m.\u001b[39mlog(values)}\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m            {values}\u001b[0m","no-global-assign","no-unsafe-negation"]