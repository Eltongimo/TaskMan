[{"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js":"1","C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js":"2","C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js":"3","C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx":"4","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx":"5","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx":"6","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx":"7","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx":"8","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx":"9","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx":"10","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx":"11","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx":"12","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx":"13","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx":"14","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx":"15","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx":"16","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx":"17","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js":"18","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js":"19","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx":"20","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx":"21","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js":"22","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx":"23","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx":"24","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx":"25","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx":"26","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx":"27","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx":"28","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx":"29","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx":"30","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx":"31","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx":"32","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx":"33","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ShowDashboard.jsx":"34","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\EditHomeContent.jsx":"35","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProject.jsx":"36","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProducts.jsx":"37"},{"size":517,"mtime":1674736802982,"results":"38","hashOfConfig":"39"},{"size":285,"mtime":1672311493009,"results":"40","hashOfConfig":"39"},{"size":375,"mtime":1672311493142,"results":"41","hashOfConfig":"39"},{"size":575,"mtime":1673256958091,"results":"42","hashOfConfig":"39"},{"size":4454,"mtime":1675319254441,"results":"43","hashOfConfig":"39"},{"size":1298,"mtime":1675157130274,"results":"44","hashOfConfig":"39"},{"size":868,"mtime":1673343647705,"results":"45","hashOfConfig":"39"},{"size":3371,"mtime":1674741938891,"results":"46","hashOfConfig":"39"},{"size":2230,"mtime":1672311493086,"results":"47","hashOfConfig":"39"},{"size":2624,"mtime":1674372862317,"results":"48","hashOfConfig":"39"},{"size":3154,"mtime":1671863399273,"results":"49","hashOfConfig":"39"},{"size":8465,"mtime":1675157163692,"results":"50","hashOfConfig":"39"},{"size":14253,"mtime":1675251516105,"results":"51","hashOfConfig":"39"},{"size":2170,"mtime":1675225854795,"results":"52","hashOfConfig":"39"},{"size":6848,"mtime":1675319753281,"results":"53","hashOfConfig":"39"},{"size":6821,"mtime":1675319278545,"results":"54","hashOfConfig":"39"},{"size":6522,"mtime":1675258456953,"results":"55","hashOfConfig":"39"},{"size":953,"mtime":1672311493054,"results":"56","hashOfConfig":"39"},{"size":772,"mtime":1672311493055,"results":"57","hashOfConfig":"39"},{"size":2498,"mtime":1674296703664,"results":"58","hashOfConfig":"39"},{"size":3923,"mtime":1674842278516,"results":"59","hashOfConfig":"39"},{"size":561,"mtime":1674842020000,"results":"60","hashOfConfig":"39"},{"size":4540,"mtime":1673531832235,"results":"61","hashOfConfig":"39"},{"size":2121,"mtime":1673531797050,"results":"62","hashOfConfig":"39"},{"size":6278,"mtime":1675328203513,"results":"63","hashOfConfig":"39"},{"size":13352,"mtime":1675316845786,"results":"64","hashOfConfig":"39"},{"size":3401,"mtime":1673030749553,"results":"65","hashOfConfig":"39"},{"size":5047,"mtime":1672629568010,"results":"66","hashOfConfig":"39"},{"size":7923,"mtime":1675086761909,"results":"67","hashOfConfig":"39"},{"size":20097,"mtime":1675158279520,"results":"68","hashOfConfig":"39"},{"size":3998,"mtime":1674377140522,"results":"69","hashOfConfig":"39"},{"size":1851,"mtime":1674226084695,"results":"70","hashOfConfig":"39"},{"size":1556,"mtime":1673581869468,"results":"71","hashOfConfig":"39"},{"size":3381,"mtime":1674379743798,"results":"72","hashOfConfig":"39"},{"size":3718,"mtime":1675159650066,"results":"73","hashOfConfig":"39"},{"size":14252,"mtime":1675328877273,"results":"74","hashOfConfig":"39"},{"size":9441,"mtime":1675323317403,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"ihrqs0",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"78"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"78"},"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js",[],["174","175"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx",["176"],"import React from 'react'\r\nimport './Header.css'\r\nimport logo from '../assets/logo/logo.png'\r\n//import {useState} from 'react'\r\n//import Menu from './Menu'\r\n\r\nfunction Header() {\r\n\r\n     return (\r\n               <header className='header'>\r\n                    <div className=\"home\">\r\n                         <a href='/'>\r\n                              <i class=\"bi bi-house-door-fill\" style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}></i>\r\n                         </a>\r\n                    </div>\r\n                    <div className='search-input'>\r\n                         <div class=\"form-outline\">\r\n                              <input type=\"search\" id=\"form1\" class=\"form-control\" placeholder=\"Search...\"/>\r\n                         </div>    \r\n                    </div>\r\n                    <div className='logo'>\r\n                         <img src={logo}  width='125' height='50'/>\r\n                    </div>\r\n               <div>\r\n                    <label id='welcome' style={{\r\n                         color: 'white',\r\n                         fontSize: '1rem',\r\n                         padding: '10px',\r\n                         fontWeight: '500'\r\n\r\n                    }}/>\r\n               </div> \r\n          </header>\r\n     )\r\n}\r\n\r\n\r\nexport default Header\r\n   ","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx",["177","178"],"import React from 'react'\r\nimport './Menu.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Button } from 'bootstrap'\r\nimport { useState } from 'react'\r\n\r\nfunction Menu(props) {\r\n\r\n    const [menuVisible, setMenuVisibility ] = useState(true)\r\n\r\n    const menuKeys = ['home','dahboard','menu-projects','newsletter','relatorios','usuarios','conteudo']\r\n    let a = []\r\n\r\n    function activeBackGroud(e){\r\n        \r\n        const selectedId = e.target.id\r\n\r\n        for (let key in menuKeys){\r\n            \r\n            if ( menuKeys[key] === selectedId){\r\n                document.getElementById(selectedId).parentElement.style.backgroundColor = '#001489'\r\n                document.getElementById(selectedId).style.color = 'white'\r\n            }else{\r\n                document.getElementById(menuKeys[key]).parentElement.style.backgroundColor = 'transparent'\r\n                document.getElementById(menuKeys[key]).style.color = 'black'\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n      a.push(\r\n            <div className='navigation' hidden='true'>\r\n                <nav >\r\n                    <ul>\r\n                        <li className='home'>\r\n                            <Link id={menuKeys[0]} onClick={activeBackGroud}  className='link' to=\"/\" exact=\"true\" defaultChecked> \r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li  className='dashboard' hidden = {menuVisible} >\r\n                            <Link id={menuKeys[1]} onClick={activeBackGroud}  className='link' to=\"/showdashboard\" exact=\"true\"> \r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li  className='projects' hidden={menuVisible}>\r\n                            <Link id={menuKeys[2]} onClick={activeBackGroud} className='link' to=\"/projects\" exact=\"true\" >\r\n                                Projectos\r\n                            </Link>\r\n                        </li>\r\n                        <li className='newsletter' hidden={menuVisible}>\r\n                            <Link id={menuKeys[3]} onClick={activeBackGroud}  className='link' to=\"/newsletter\" exact=\"true\"> \r\n                                NewsLetter\r\n                            </Link>\r\n                        </li>\r\n                        <li className='relatorios' hidden={menuVisible}>\r\n                            <Link id={menuKeys[4]} onClick={activeBackGroud}  className='link' to='/relatorios' exact=\"true\"> \r\n                                Relatorios\r\n                            </Link>\r\n                        </li>\r\n                        <li className='usuarios' hidden={menuVisible}>\r\n                            <Link id={menuKeys[5]} onClick={activeBackGroud}  className='link' to='/usuarios' exact=\"true\"> \r\n                                Usuarios\r\n                            </Link>\r\n                        </li>\r\n                        <li className='conteudo' hidden={menuVisible}>\r\n                            <Link id={menuKeys[6]} onClick={activeBackGroud}  className='link' to='/edithomecontent' exact=\"true\"> \r\n                                Gerir Conteudo\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n            </nav>\r\n        </div>)\r\n\r\n    return a\r\n}\r\nexport default Menu","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx",["179"],"import React from 'react'\r\nimport './Login.css'\r\n\r\nclass FluidInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        focused: false,\r\n        value: \"\"\r\n      };\r\n    }\r\n    focusField() {\r\n      const { focused } = this.state;\r\n      this.setState({\r\n        focused: !focused\r\n      });\r\n    }\r\n    handleChange(event) {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      this.setState({\r\n        value: value\r\n      });\r\n    }\r\n    render() {\r\n      const { type, label, style, id } = this.props;\r\n      const { focused, value } = this.state;\r\n      \r\n      let inputClass = \"fluid-input\";\r\n      if (focused) {\r\n        inputClass += \" fluid-input--focus\";\r\n      } else if (value != \"\") {\r\n        inputClass += \" fluid-input--open\";\r\n      }\r\n      \r\n      return (\r\n        <div className={inputClass} style={style}>\r\n          <div className=\"fluid-input-holder\">\r\n            \r\n            <input \r\n              className=\"fluid-input-input\"\r\n              type={type}\r\n              id={id}\r\n              onFocus={this.focusField.bind(this)}\r\n              onBlur={this.focusField.bind(this)}\r\n              onChange={this.handleChange.bind(this)}\r\n              autocomplete=\"off\"\r\n            />\r\n            <label className=\"fluid-input-label\" forHtml={id}>{label}</label>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Button extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className={`button ${this.props.buttonClass}`} onClick={this.props.onClick}>\r\n          {this.props.buttonText}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Login extends React.Component {\r\n    render() {\r\n      \r\n      const style = {\r\n        margin: \"15px 0\"\r\n      };\r\n      return (\r\n        <div className=\"login-container\">\r\n          <div className=\"title\">\r\n           Login\r\n          </div>\r\n          <FluidInput type=\"text\" label=\"name\" id=\"name\" style={style} />\r\n          <FluidInput type=\"password\" label=\"password\" id=\"password\" style={style} />\r\n          <Button buttonText=\"log in\" buttonClass=\"login-button\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Login","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx",["180"],"import './Dashboard.css'\r\nimport Stricky from './Sticky'\r\nimport React from 'react'\r\nimport {db} from './database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\n\r\nfunction Dashboard  (){\r\n\r\n    const [lats, setLats] = useState({})\r\n    const [products, setProducts ] = useState({})\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `LAT`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setLats(snapshot.val())\r\n                    }\r\n                    else{\r\n                        alert('no data to load from db server')\r\n                    }\r\n                })\r\n            }\r\n\r\n    ,[])\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setProducts(snapshot.val())\r\n                    }\r\n                })\r\n            }\r\n    ,[])\r\n\r\n\r\n    let cards = []\r\n    for(let key in lats){\r\n            let prods = []\r\n            let fullProdsArray = []\r\n            let cont = 0\r\n            for(let prodsKey in products){\r\n                if ( products[prodsKey].Area == lats[key].Description){\r\n                    if (cont < 5 ){\r\n                        prods.push(products[prodsKey])   \r\n                    }\r\n                    cont++\r\n                    fullProdsArray.push(products[prodsKey].Status)\r\n                }\r\n            }\r\n            \r\n            let row = ''\r\n\r\n            if (cont % 2 !== 0)\r\n                row = 'row-1'\r\n            else\r\n                row = 'row-2'\r\n                \r\n            cards.push(\r\n                <Stricky rownum={row} header={lats[key].Description}\r\n                       products={prods}        \r\n                       fullProds = {fullProdsArray}\r\n                       Key={lats[key].Key}\r\n            />)\r\n    }\r\n\r\n    function back (e){\r\n        window.history.back()\r\n    }\r\n    return (\r\n        <div  style={{\r\n            border: 'solid #ccc red '\r\n        }}>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                                                     }} \r\n                onClick={back}/>\r\n            </div>\r\n                <div className='home-container'>\r\n                    {cards}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx",["181","182","183"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Lat (){\r\n   const [products, setProducts] = useState({products:  []}) \r\n\r\n   const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setProducts({projects: snapshot.val()})\r\n                    }\r\n                    else{\r\n                        alert('no data to load from db server')\r\n                   }\r\n                })\r\n        }\r\n    ,[])\r\n\r\n    function handleButtonEvent(e){\r\n       \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n       \r\n       history.push({\r\n        pathname: '/macroactivities',\r\n        search: `?key=${key[1]}`,\r\n      })\r\n    }\r\n\r\n    function filterProducts(prods){\r\n        let prodArray = []\r\n    \r\n        for(let p in prods.projects){\r\n            \r\n            if (prods.projects[p].LatKey === document.URL.split('=')[1]){\r\n                prodArray.push(prods.projects[p])\r\n                console.log(true)\r\n             }\r\n        }\r\n        return prodArray\r\n    }\r\n\r\n    function convertStatusToPercentage(percentage){\r\n\r\n        if (percentage === 'Não Iniciado'){\r\n            percentage = 0\r\n        }else if (percentage === 'Em progresso'){\r\n            percentage = 0.5\r\n        }else if (percentage === 'Cancelado'){\r\n            percentage = 0\r\n        }else if (percentage === 'Concluido'){\r\n            percentage = 1\r\n        }\r\n        return percentage\r\n    }\r\n\r\n    function buildTable(){\r\n        \r\n        let values = []\r\n        let prods = filterProducts(products)\r\n        \r\n        if (products !== null ){\r\n            for(let index in prods){\r\n                values.push(\r\n                    <div className='rows-report' >\r\n                        <div className='colmns-report'>\r\n                        <ul >\r\n                            <li >\r\n                                {prods[index].Name}\r\n                            </li>\r\n                            <li >\r\n                                {prods[index].Status}\r\n                            </li>\r\n                            <li>\r\n                                {convertStatusToPercentage(prods[index].Status) * 100}%\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n        return( \r\n        <div className='table-container'>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nome do Producto</div>\r\n                <div className='report-header'>Estado</div>\r\n                <div className='report-header'>%</div>\r\n            </div>\r\n            {values}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n}\r\n\r\nexport default Lat","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx",["184","185"],"import React from 'react'\r\nimport './Home.css'\r\nimport {db} from './database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get,ref } from \"firebase/database\"\r\nimport Carousel from './projectviews/Carousel'\r\nimport logo from '../assets/logo/logo.png'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction Home(){\r\n    const [user, setUser ] = useState({})\r\n    const [projects, setProjects] = useState({})\r\n    const [typedUser, setTypedUser] = useState({})\r\n    const [aboutPomar, setAboutPomar] = useState({})\r\n    const history = useHistory()\r\n    \r\n    \r\n    function getUsername(e){\r\n        setTypedUser({username: e.target.value, password:typedUser.password})\r\n    }\r\n\r\n    function getPassword(e){\r\n        setTypedUser({username: typedUser.username, password: e.target.value})\r\n    }\r\n\r\n\r\n    function editContent(e){\r\n        history.push({\r\n            pathname: '/edithomecontent',\r\n          })\r\n    }\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n            get(child(dbRef,'HomeContent')).then((snapshot) => {\r\n\r\n                if (snapshot.exists())\r\n                 for (let key in snapshot.val()){\r\n                    setAboutPomar({About: snapshot.val()[key].About})        \r\n                 }\r\n                }\r\n            )\r\n\r\n            get(child(dbRef, `User`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                        setUser({users: snapshot.val()})\r\n                    else\r\n                        alert('No Users')\r\n            })\r\n            get(child(dbRef, 'Project')).then( snapshot => {\r\n                if (snapshot.exists()){\r\n                    setProjects({p: snapshot.val()})\r\n                }\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function login(e){\r\n        \r\n        for (let u in user.users){\r\n\r\n            if ( user.users[u].Username === typedUser.username && user.users[u].Password === typedUser.password){\r\n                e.target.isVisible = false\r\n                document.getElementById('welcome').innerHTML = `${typedUser.username}, Bem vindo  ao POMAR!`\r\n                document.getElementById('closemodal').click()\r\n                enableMenus()\r\n                clearForm()\r\n                return \r\n            }\r\n        }    \r\n        \r\n        alert('username and Password not correct')\r\n    }\r\n\r\n    function enableMenus(){\r\n        document.getElementsByClassName('dashboard')[0].hidden = false\r\n        document.getElementsByClassName('projects')[0].hidden = false\r\n        document.getElementsByClassName('newsletter')[0].hidden = false\r\n        document.getElementsByClassName('relatorios')[0].hidden = false\r\n        document.getElementsByClassName('usuarios')[0].hidden = false\r\n        document.getElementsByClassName('navigation')[0].hidden = false\r\n        document.getElementsByClassName('conteudo')[0].hidden = false\r\n   \r\n    }\r\n\r\n    function clearForm(){\r\n        document.getElementById('username').value = ''\r\n        document.getElementById('password').value = ''\r\n    }\r\n\r\n    function loadprojects(){\r\n        let a = []\r\n        let count = 0\r\n        for (let key in projects.p){\r\n            a.push(\r\n                <li>\r\n                    <button type=\"button\" className='btn btn-outline-secondary' data-toggle=\"modal\" data-target={`#exampleModal${count}`}> {projects.p[key].ProjectName}     </button>\r\n                      <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Projecto{projects.p[key].ProjectName}</h5>\r\n                                        <button type=\"button\" id='closebutton' className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                <div className=\"modal-body\">\r\n                                    <strong>Tipo de Actividade</strong>\r\n                                    <p> \r\n                                        {projects.p[key].TypeOfActivity}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Geral do Projecto</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].GeneralObjective}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Especifico</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].SpecificObjective}\r\n                                    </p>\r\n                                \r\n                                    <strong>Resultado Esperado</strong>\r\n                                    <p> \r\n                                        {projects.p[key].Result}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n            count++\r\n        }\r\n        return a\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='homeContainer'>\r\n\r\n            <div className='carousel-home'>\r\n                <Carousel/>\r\n            </div>\r\n        \r\n            <div className='image' style={{textAlign: 'justify', padding: '10px'}}> \r\n                <b>Projectos</b>\r\n                <p/>\r\n                <ul>\r\n                    {loadprojects()} \r\n                </ul>\r\n            </div>\r\n            <div className='text' style={{textAlign: 'justify', padding: '10px'}}>\r\n                <b>Informação sobre o Pomar</b>\r\n                <p>\r\n                    {aboutPomar.About}\r\n                </p>\r\n\r\n            <button type=\"button\" onClick={clearForm} className=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Login\r\n            </button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                            <button type=\"button\" className=\"closebutton\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label >Username</label> \r\n                                <input type=\"email\" id='username' onChange={getUsername} className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Usermane\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label >Password</label>\r\n                                <input type=\"password\" id='password' onChange= {getPassword} className=\"form-control\" placeholder=\"Password\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={login}>Entrar</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Home","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx",["186","187","188","189","190"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref, remove, update} from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport {useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './Activity.css'\r\nimport ActivitySinglePDF from '../ReportsPDF/ActivitySinglePDF'\r\nimport Projects from './Projects'\r\n\r\nfunction Activities (){\r\n    \r\n    const [activity, setActivity ] = useState({activities: []})\r\n    const history =  useHistory()\r\n        \r\n    useEffect(() => {\r\n            const dbRef = ref(db)\r\n            \r\n            get(child(dbRef,`Activity`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                    {\r\n                        let acts = []\r\n                        const vals = snapshot.val()\r\n\r\n                     /*   for (let a in vals){\r\n                            if (document.URL.split('=')[1] == vals[a].MacroActivityKey){\r\n                                acts.push(vals[a])\r\n                            }\r\n                        }*/\r\n                        setActivity({activities: vals})\r\n                    }            \r\n                    else{\r\n                        alert('Sem actividades para carregar')\r\n                    }\r\n            })\r\n        },[]\r\n    )\r\n\r\n    function handleButtonEvent(e){\r\n\r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n \r\n        if (key[0] === 'delete'){\r\n            // alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n          // alert('updating')\r\n        } \r\n   }\r\n\r\n   // create single page report with details from acticit\r\n   function createPDF(e){\r\n\r\n        ActivitySinglePDF(activity.activities[e.target.id.split('.')[1]])\r\n    \r\n    }\r\n\r\n\r\n    function deleteActivity(e){\r\n    \r\n        remove(ref(db, `Activity/${e.target.value}`)).then(\r\n            () => {\r\n                document.getElementById('closemodal').click()\r\n                window.history.back()\r\n                alert('Actividade Apagada com sucesso')\r\n            }\r\n        ).catch(() => {\r\n            alert('Erro ao apagar a actividade')\r\n        })\r\n    }\r\n\r\n    function buildTable (){\r\n        \r\n        var values = []\r\n\r\n        if (activity.activities !== null ){\r\n            let count = 0\r\n            let index = 0\r\n            let deleteIndex = count + 1000\r\n\r\n            for(let key in activity.activities){\r\n\r\n               values.push( \r\n                <div>\r\n                    <button onClick={handleButtonEvent}\r\n                        style={{background: 'transparent',\r\n                                border: 'none',\r\n                                width: '100%',\r\n                                outline: 'none',\r\n                            }}\r\n                        >\r\n                        <div className='rows-report' id={`${count++}.${activity.activities[key].Key}`}>\r\n                            <div className='colmns-report'id={`${count++}.${activity.activities[key].Key}`} >\r\n                                <ul id={`${count++}.${activity.activities[key].Key}`}>\r\n\r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {++index}\r\n                                    </li>\r\n                                   \r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {activity.activities[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-pencil\" id={`update.${count++}.${activity.activities[key].Key}`}\r\n                                          />\r\n                                    </li>\r\n\r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-trash\" id={`delete.${count++}.${activity.activities[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} />\r\n                                    </li>\r\n                                    {/*\r\n                                    <li className='project-icons' data-toggle=\"modal\" id={`${count}`} >\r\n                                        <i className=\"bi bi-info\" data-toggle=\"modal\" data-target={`#exampleModal${count}`}\r\n                                        />\r\n                        </li> */}\r\n                                    <li id={`${count + 1}.${key}`}>\r\n                                        <i class=\"bi bi-file-earmark-arrow-down\" style={{\r\n                                                fontSize: '1.3rem',\r\n                                                color: 'blue'\r\n                                            }}\r\n                                            onClick={createPDF}\r\n                                            id={`${count + 10}.${key}`}\r\n                                        />   \r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                \r\n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação </h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                 <p>Apagar Actividade ?</p>\r\n                                 <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                 <button type='button' className='btn btn-primary' value= {key} onClick={deleteActivity}> Sim</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                    \r\n                    {/* \r\n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Detalhes da actividade</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form>\r\n                                        <ul >\r\n                                            <li className='modal-details-row'>\r\n                                                <label>Actividade </label> <div className='activity-detail'>{activity.activities[key].Name} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Descrição </label> <div className='activity-detail'>{activity.activities[key].Description} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Lugar </label> <div className='activity-detail'>{activity.activities[key].Location} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Data de Inicio </label> <div className='activity-detail'>{activity.activities[key].StartTime} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Data Final </label> <div className='activity-detail'>{activity.activities[key].DeadLine} </div> \r\n                                            </li> \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Hora </label> <div className='activity-detail'>{activity.activities[key].Time} </div> \r\n                                            </li > \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Duração </label> <div className='activity-detail'>{activity.activities[key].Duration} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Homens </label>  <div className='activity-detail'>{activity.activities[key].Men} </div> \r\n                                            </li > \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Mulher </label> <div className='activity-detail'>{activity.activities[key].Women} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Meninos </label> <div className='activity-detail'>{activity.activities[key].Boys} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Meninas </label> <div className='activity-detail'>{activity.activities[key].Girls} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Esperado </label>  <div className='activity-detail'>{activity.activities[key].Waited} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Etereonidade </label> <div className='activity-detail'>{activity.activities[key].Heterogenity} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Proximos passos </label> <div className='activity-detail'>{activity.activities[key].NextSteps} </div> \r\n                                            </li> \r\n                                            \r\n                                            <li className='modal-details-row'>\r\n                                                <label>Comentarios </label>  <div className='activity-detail'>{activity.activities[key].Comments} </div> \r\n                                            </li> \r\n                                        </ul>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                                                */}\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        \r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div classNameName='table-container'>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Actividade</div>\r\n                <div className='report-header'>Editar</div>\r\n                <div className='report-header'>Apagar</div>\r\n          {/*      <div className='report-header'>Mostrar</div>*/}\r\n                <div className='report-header'>Relatorio</div>\r\n                \r\n                <i className=\"bi bi-info-circle-fill\"\r\n                              style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}\r\n                              />  \r\n            </div>\r\n            {values}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Activities","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx",["191","192","193","194"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\nimport { child, get, ref } from \"firebase/database\"\r\n\r\n\r\nfunction Carousel(){\r\n\r\n    const [images, setImages] = useState([])\r\n    const listOfImages = storageRef(Storage, 'HomeContent/')\r\n\r\n    useEffect(()=> {\r\n        listAll(listOfImages).then((response) => {\r\n         let urls = []\r\n         response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n             urls.push(url)\r\n             setImages(urls)\r\n         }))\r\n      })\r\n\r\n    },[])\r\n\r\n    function getImage(){\r\n        let img = []\r\n\r\n        for (let element in images){\r\n            img.push(\r\n                <div className=\"carousel-item active\">\r\n                    <img className=\"d-block w-100\" height={300} src={images[element]} alt=\"Slide\"/>\r\n                </div>\r\n            ) \r\n        }\r\n        return img\r\n    }\r\n\r\n    return (\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n            <ol className=\"carousel-indicators\">\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" className=\"active\"></li>\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n                <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n            </ol>\r\n            <div className=\"carousel-inner\">\r\n                {getImage()}\r\n            </div>\r\n            <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                <span className=\"carousel-control-prev-icon\" aria-hidden=\"false\"></span>\r\n                <span className=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                <span className=\"carousel-control-next-icon\" aria-hidden=\"false\"></span>\r\n                <span className=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx",["195"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref, remove } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Product (){\r\n   const [products, setProducts] = useState({products:  []}) \r\n\r\n   const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                        setProducts({projects: snapshot.val()})\r\n                    else\r\n                        alert('no data to load from db server')\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function handleButtonEvent(e){\r\n       \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n\r\n        if (key[0] === 'update'){\r\n            history.push({\r\n                pathname: '/updateproduct',\r\n                search: `?key=${key[2]}`,\r\n            })\r\n        }   \r\n        else if (key[2] !== undefined){\r\n            history.push({\r\n                pathname: '/macroactivities',\r\n                search: `?key=${key[1]}`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function deleteProduct(e){\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click()\r\n\r\n        remove(ref(db, `Product/${e.target.value}`)).then(() => {\r\n            alert('Producto removido com sucesso')\r\n            const dbRef = ref(db)\r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProducts({projects: snapshot.val()})\r\n        })\r\n        }).catch(() => {\r\n            alert('Erro ao apagar producto')\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function buildTable(){\r\n        \r\n        var values = []\r\n        let count = 0\r\n\r\n        if (products !== null ){\r\n            for(let key in products.projects){\r\n               values.push(\r\n                <button onClick={handleButtonEvent}\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${products.projects[key].Key}`} >\r\n                        <div className='colmns-report'>\r\n                        <ul id={`${count++}.${products.projects[key].Key}`} >\r\n                            <li id={`${count++}.${products.projects[key].Key}`} >\r\n                                {products.projects[key].Area}\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`}>\r\n                                {products.projects[key].Name}\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`}>\r\n                                {products.projects[key].Status}\r\n                            </li>\r\n                            <li id={`${count++}.${key}`}>\r\n                                  <i className=\"bi bi-pencil\" id={`update.${count++}.${key}`}/>\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`} >\r\n                                 <i className=\"bi bi-trash\" id={`delete.${count++}.${products.projects[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`}/>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\" >\r\n                                    <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Producto ?</label>\r\n                                </div>\r\n                            </form>\r\n                                </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                        <button type=\"button\" value ={key} id={count} onClick={deleteProduct} className=\"btn btn-primary\">Sim</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                </button>\r\n            )\r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproducts',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div className='product-container'\r\n        >\r\n            <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Area</div>\r\n                    <div className='report-header'>Nome do Producto</div>\r\n                    <div className='report-header'>Estado</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                </div>\r\n                {values}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Product","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx",["196"],"import React, { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref, remove } from \"firebase/database\"\r\nimport './Projects.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nfunction Projects (){\r\n    \r\n    const [projects, setProjects]  = useState({projs: []})\r\n    const history = useHistory()\r\n    \r\n    function handleButtonEvent(e){\r\n       \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        \r\n        if (key[0] === 'delete'){\r\n\r\n        }\r\n        else if (key[0] === 'update'){\r\n            history.push({\r\n                pathname: '/updateproject',\r\n                search: `?key=${key[2]}`,\r\n              })\r\n        }   \r\n        else if (key[1] !== undefined){\r\n            history.push({\r\n                pathname: '/products',\r\n                search: `?key=${key[1]}`,\r\n              })\r\n        }    \r\n     }\r\n\r\n     function deleteProject(e){\r\n\r\n        document.getElementById(`closemodal${e.target.id}`).click()\r\n        \r\n        remove(ref(db, `Project/${e.target.value}`)).then(() => {\r\n            const dbRef = ref(db)\r\n            get(child(dbRef, `Project`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProjects({projs: snapshot.val()})\r\n        \r\n            })\r\n            alert('Projecto eliminado com sucesso')\r\n        \r\n        }).catch(() => {\r\n            alert('Erro ao eliminar o projecto')\r\n        })\r\n    }\r\n \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `Project`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProjects({projs: snapshot.val()})\r\n                else\r\n                    alert('no data to load from db server')\r\n        }\r\n        )},[])\r\n\r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (projects !== null ){\r\n            for(let key in projects.projs){\r\n               values.push(\r\n                <button \r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                        onClick={handleButtonEvent}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${projects.projs[key].Key}`}>\r\n                        <div className='colmns-report'id={`${count++}.${projects.projs[key].Key}`} >\r\n                            <ul id={`${count++}.${projects.projs[key].Key}`}>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {projects.projs[key].ProjectName}\r\n                                </li>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {projects.projs[key].TypeOfActivity}\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${key}`}\r\n                                    />\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-trash\" id={`delete.${count}.${projects.projs[key].Key}`} data-toggle=\"modal\" data-target={`#exampleModal${count}`} \r\n                                    />    \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\" >\r\n                                        <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Projecto ?</label>\r\n                                    </div>\r\n                                </form>\r\n                                    </div>\r\n                                        <div className=\"modal-footer\">\r\n                                            <button type=\"button\" id={`closemodal${count}`} className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                            <button type=\"button\" value={key} id={count} onClick={deleteProject} className=\"btn btn-primary\">Sim</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>    \r\n\r\n                    </div>\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproject',\r\n            })\r\n        }\r\n        \r\n        return( \r\n        <div >\r\n            <div className='title' id='title'>\r\n                \r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Nome do Projecto</div>\r\n                <div className='report-header'>Tipo de Actividade</div>\r\n                <div className='report-header'>Actualizar</div>\r\n                <div className='report-header'>Apagar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n    return buildTable()\r\n}\r\n\r\nexport default Projects","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx",["197","198","199","200"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, getDatabase, ref, remove,update } from \"firebase/database\"\r\nimport '../TaskRow.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport Modal from 'react-modal'\r\n\r\nfunction MacroActivity(){\r\n    \r\n    const [macroActivities, setMacroActivities] = useState({mcs: []})\r\n    const history = useHistory()\r\n\r\n    useEffect( () => {\r\n         const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        const mcs = snapshot.val()\r\n                        let macroA = []\r\n                        for(let key in mcs){\r\n                            if (mcs[key].ProductKey === document.URL.split('=')[1])\r\n                                macroA.push({Key: key, data: mcs[key]})\r\n                        }\r\n                        setMacroActivities({mcs: macroA})\r\n                    }\r\n                    else{\r\n                     alert('no data to load from db server')\r\n                    }\r\n                })\r\n            },[]\r\n    )\r\n\r\n    function deleteMacroActivity(e){\r\n        remove(ref(db, `MacroActivity/${e.target.value}`)).then(()=> {\r\n            alert('Macro Actividade Apagada com Sucesso ')\r\n        }).catch(() => {\r\n            alert('Erro ao eliminar Macro Actividade')\r\n        })\r\n        document.getElementById('closemodal').click() \r\n        window.history.back()\r\n    }\r\n\r\n   function handleButtonEvent(e){\r\n      \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n \r\n        /*if (key[2] !== undefined)\r\n        \r\n          history.push({\r\n                    pathname: '/activities',\r\n                    search: `?key=${key[1]}`,\r\n                })\r\n    */\r\n    }\r\n\r\n    function buildTableforMcs(){\r\n    \r\n    var values = []\r\n    let count = 0\r\n    if (macroActivities !== null ){\r\n        for(let data in macroActivities.mcs){\r\n        \r\n            values.push( \r\n            <button               \r\n                style={{background: 'transparent',\r\n                    border: 'none',\r\n                    width: '100%',\r\n                    outline: 'none',\r\n                }}\r\n                onClick={handleButtonEvent}\r\n                >\r\n                <div className='rows-report' id={`${count++}.${macroActivities.mcs[data].Key}`}>\r\n                    <div className='colmns-report' id={`${count++}.${macroActivities.mcs[data].Key}`} >\r\n                        <ul id={`${count++}.${macroActivities.mcs[data].data.Key}`} >\r\n                            <li id={`${count++}.${macroActivities.mcs[data].data.Key}`}>\r\n                                {macroActivities.mcs[data].data.Name}\r\n                            </li>\r\n                            <li id={`${count++}.${macroActivities.mcs[data].Key}`} >\r\n                                <i className=\"bi bi-trash\"   data-toggle=\"modal\" data-target={`#exampleModal${count}`}/>\r\n                            </li>\r\n                            <li id={`${count++}.${macroActivities.mcs[data].Key}`}>\r\n                                <i className=\"bi bi-pencil\" id={`update.${count++}.${macroActivities.mcs[data].Key}`}/>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade\" id={`exampleModal${count}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"form-group\" >\r\n                                    <label style={{textAlign: 'left'}} for=\"exampleInputEmail1\">Apagar Macro Acrividade ?</label>\r\n                                </div>\r\n                            </form>\r\n                                </div>\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                        <button type=\"button\" value= {macroActivities.mcs[data].Key} onClick={deleteMacroActivity} className=\"btn btn-primary\">Sim</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>    \r\n                </button>\r\n                )\r\n            }\r\n        }\r\n\r\n        function add(){\r\n            history.push({\r\n                pathname: '/addmacroactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back()\r\n        {\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nome da Macro Actividade</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                </div>\r\n                    {values}\r\n            </div>\r\n        </div>        \r\n        )\r\n    }\r\n    return buildTableforMcs()\r\n}\r\n\r\nexport default MacroActivity","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx",["201","202","203","204","205","206"],"import React from 'react'\r\nimport './NewsLetter.css'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction NewsLetter (){\r\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'Newsletter/')\r\n    const history = useHistory()\r\n  \r\n      useEffect( () => {\r\n         const dbRef = ref(db)\r\n           listAll(listOfImages).then((response) => {\r\n            let urls = []\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                urls.push(url)\r\n                setImageList(urls)\r\n            }))\r\n         })\r\n\r\n             get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                     if (snapshot.exists())\r\n                         setnewsLetter({newsLetters: snapshot.val()})\r\n                     else\r\n                         alert('no data to load from db server')\r\n             })\r\n         }\r\n     ,[])\r\n \r\n     function handleButtonEvent(e){\r\n        \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n \r\n         if (key[0] === 'delete'){\r\n            alert('deleting')\r\n         }\r\n         else if (key[0] === 'update'){\r\n             alert('updating')\r\n         }else{\r\n            history.push({\r\n                pathname: '/readnewsletter',\r\n                search: `?key=${key[1]}`\r\n            })\r\n         }\r\n     }\r\n \r\n     function buildTable(){\r\n         \r\n         var values = []\r\n         let count = 0\r\n         let index = 0\r\n \r\n         if (newsLetter !== null ){\r\n             for(let key in newsLetter.newsLetters){\r\n                values.push(\r\n                    <button onClick={handleButtonEvent}\r\n                              style={{background: 'transparent',\r\n                                       border: 'none',\r\n                                       width: '100%',\r\n                                       outline: 'none',\r\n                                   }}>\r\n                        <div className=\"card card-container\" style={{width: '18rem', marginTop: '10px'}}>\r\n                        {/*    <img src={imageList} className=\"card-img-top\" alt=\"...\"/> */}\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\" style={{textAlign: 'justify'}}>{newsLetter.newsLetters[key].Title}</h5>\r\n                                <p className=\"card-text\" style={{textAlign: 'justify'}}>\r\n                                    {newsLetter.newsLetters[key].Body.split(\" \").splice(0, 20).join(\" \")} ...\r\n                                </p>\r\n                                <a className=\"btn btn-primary\" id={`${count++}.${newsLetter.newsLetters[key].Key}`}>Ver Mais</a>\r\n                            </div>\r\n                        </div>\r\n                </button>\r\n                )\r\n            }\r\n         }\r\n\r\n         function add(e){\r\n            const key = e.target.id.split('.')\r\n            history.push({\r\n                pathname: '/addnewsletter',\r\n              })\r\n         }\r\n\r\n         return( \r\n         <div className='table-container'>\r\n            <div className='title' id='title'>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            {values}\r\n         </div>\r\n         ) \r\n     }\r\n    \r\n     return buildTable()\r\n \r\n }\r\n\r\nexport default NewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx",["207","208","209","210","211","212","213"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ActivityPDF from '../ReportsPDF/ActivityPDF'\r\n\r\nfunction Reports(){\r\n\r\n    const [macroActivities, setmacroActivities ] = useState({mcs: []})\r\n    const [activities, setActivities ] = useState({acts: []})\r\n    const [activitiesCount, setActivitiesCount] = useState({})\r\n    const [mActivities, setMActivities] = useState({})\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setmacroActivities({mcs: snapshot.val()})\r\n                    }\r\n                    else\r\n                        alert('no data to load from db server')\r\n            }).catch(()=>{\r\n                alert('Verifique a conexão com a internet')\r\n            })\r\n\r\n            get(child(dbRef, 'Activity')).then( snapshot => {\r\n\r\n                if (snapshot.exists()){\r\n                    setActivities({acts: snapshot.val()})\r\n                }\r\n                console.log(activities)\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function getActivities(mcs){\r\n\r\n        let a = []\r\n        let count = 0\r\n        for (let index in activities.acts){\r\n            if (mcs.Key === activities.acts[index].MacroActivityKey){\r\n                a.push(activities.acts[index])\r\n            }\r\n        }\r\n        \r\n        console.log(a)\r\n\r\n        return a\r\n    }\r\n\r\n    function handleButtonEvent(){\r\n\r\n    }\r\n\r\n    function generatePDF(e){\r\n        \r\n        const key = e.target.id.split('.')[1]\r\n        \r\n        const macroAct = macroActivities.mcs[key]\r\n        \r\n        const acts = getActivities(macroAct)\r\n\r\n        ActivityPDF(acts, macroAct)\r\n\r\n    }\r\n\r\n    function getRows(){\r\n        let values = []\r\n        let index = 0\r\n        let count = 0\r\n\r\n        for(let key in macroActivities.mcs){\r\n                values.push(                 \r\n                 <div> \r\n                    <button onClick={handleButtonEvent}\r\n                                style={{background: 'transparent',\r\n                                    border: 'none',\r\n                                    width: '100%',\r\n                                    outline: 'none',\r\n                                }}>\r\n\r\n                        <div className='rows-report' id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                            <div className='colmns-report'>\r\n                                <ul id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {++index}\r\n                                    </li>\r\n                                \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {macroActivities.mcs[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`}>\r\n                                        <i id={`${count++}.${key}`} className=\"bi bi-file-earmark-arrow-down\" style={{color: 'blue', fontSize: '1.2rem'}}\r\n                                            onClick={generatePDF}\r\n                                        />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </div>)\r\n             }\r\n        return values    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-container'>\r\n                <div className='title' id='title'>\r\n                    <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                </div>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nr</div>\r\n                    <div className='report-header'>Macro Actividade</div>\r\n                    <div className='report-header'>Baixar Relatorio</div>\r\n                </div>\r\n                {\r\n                    getRows()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx",["214"],"import React from 'react'\r\nimport './AddProducts.css'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {set,ref,get,child} from 'firebase/database'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { consoleOrigin } from 'firebase-tools/lib/api'\r\n\r\nfunction AddProducts(){\r\n\r\n    const [product, setProduct] = useState({\r\n        Area: 'Urbanização e Regeneração Urbana',\r\n        LatKey: '',\r\n        Name: '',\r\n        ProjectKey: document.URL.split('=')[1],\r\n        Status: 'Não Iniciado',\r\n        Key: uuidv4()\r\n    })\r\n\r\n    const [lat, setLats] = useState({})\r\n    \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `LAT`)).then((snapshot) => {\r\n                if (snapshot.exists()){\r\n                    setLats({lats: snapshot.val()})\r\n                }\r\n             }\r\n        )},\r\n    [])\r\n    \r\n    function setProductName(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function setStatus(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: e.target.value,\r\n            Key: product.Key\r\n        })\r\n    }   \r\n\r\n    function setArea(e){\r\n\r\n        setProduct({\r\n            Area: e.target.value,\r\n            LatKey: product.LatKey,\r\n            Name: product.Name,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function saveProduct (e){\r\n\r\n        for (let key in lat.lats){\r\n       \r\n            if (lat.lats[key].Description === product.Area ){\r\n                setProduct({\r\n                    Area: product.Area,\r\n                    LatKey: lat.lats[key].Key,\r\n                    Name: product.Name,\r\n                    ProjectKey: product.ProjectKey,\r\n                    Status: product.Status,\r\n                    Key: product.Key\r\n                })        \r\n                break\r\n            }\r\n        }\r\n        \r\n        set(ref(db, 'Product/' + uuidv4(),product))\r\n\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n    function back(){\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n              <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Adicionar Producto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\r\n                <input type=\"text\" onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">LAT</label>\r\n                <select className=\"form-select\" onChange={setArea} aria-label=\"Default select example\">\r\n                    <option selected value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>\r\n                    <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n                    <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n                    <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n                    <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n                </select>\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\r\n                    <option selected value=\"Não Iniciado\">Não Iniciado</option>\r\n                    <option value=\"Em progresso\">Em progresso</option>\r\n                    <option value=\"Cancelado\">Cancelado</option>\r\n                    <option value=\"Concluido\">Concluido</option>\r\n                </select>\r\n            </div>\r\n        \r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Gravar Producto   </button>\r\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Submeter Producto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" onClick={saveProduct} className=\"btn btn-primary\">Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProducts","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx",["215"],"import React from 'react'\r\nimport './AddProject.css'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { ref,set } from \"firebase/database\"\r\nimport { useState } from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction AddProjectForm(){\r\n    \r\n    const [project, setProject] = useState({     \r\n            ProjectName: '',\r\n            DeadLine: '',\r\n            GeneralObjective: '',\r\n            Key: uuidv4(),\r\n            OperatorName: '',\r\n            PeopleInvolved: '',\r\n            Result: '',\r\n            SpecificObjective: '',\r\n            TypeOfActivity: '',\r\n            Implementadores: '',\r\n            Parceiros: '',\r\n            Financiadores: ''\r\n\r\n    })\r\n\r\n    function setProjectName(e){\r\n        setProject({\r\n                    ProjectName: e.target.value,\r\n                    DeadLine: project.DeadLine,\r\n                    GeneralObjective: project.GeneralObjective,\r\n                    Key: project.Key,\r\n                    OperatorName: project.OperatorName,\r\n                    PeopleInvolved: project.PeopleInvolved,\r\n                    Result: project.Result,\r\n                    SpecificObjective: project.SpecificObjective,\r\n                    TypeOfActivity: project.TypeOfActivity,\r\n                    Implementadores: project.Implementadores,\r\n                    Parceiros: project.Parceiros,\r\n                    Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: e.target.value,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setResult(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: e.target.value,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    function setOperatorName(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setTypeOfActivity(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: e.target.value,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setSpecificObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: e.target.value,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setPeopleInvolved(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: e.target.value,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    \r\n    function setDeadLine(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: e.target.value,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setImplementadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: e.target.value,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setParceiros(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: e.target.value,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setFinanciadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: e.target.value\r\n        })\r\n    }\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function submitProject(e){\r\n\r\n        console.log(project)\r\n\r\n        set(ref(db, 'Project/' + uuidv4()), project).then(() => {\r\n            alert('Projecto adicionado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao adicionar o Projecto')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='form-container'>\r\n\r\n            <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Adicionar Projecto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Projecto</label>\r\n                <input type=\"text\" onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">DeadLine</label>\r\n                <input type=\"date\" onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Objecto do projecto</label>\r\n                <input type=\"text\" onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Resultado</label>\r\n                <input type=\"text\" onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do operador</label>\r\n                <input type=\"text\" onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Tipo de actividade</label>\r\n                <input type=\"text\" onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\r\n                <input type=\"text\" onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n\r\n{/*\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Pessoal Envolvolvido</label>\r\n                <input type=\"text\" onChange={setPeopleInvolved} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n                    */}\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Implementadores</label>\r\n                <input type=\"text\" onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n          \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Parceiros</label>\r\n                <input type=\"text\" onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Financiadores</label>\r\n                <input type=\"text\" onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Gravar Projecto         </button>\r\n            <button type=\"button\" className=\"btn btn-secondary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Submeter Projecto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={submitProject}>Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProjectForm","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx",["216"],"import {useState} from 'react'\r\nimport React from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\n\r\nfunction back(e){\r\n    window.history.back()\r\n}\r\n\r\nfunction AddUser(){\r\n\r\n    const [user, setUser] = useState({\r\n        Role: 'Operacional',\r\n        Username: '',\r\n        Password: '',\r\n        Area: 'Urbanização e Regeneração Urbana'\r\n    })\r\n\r\n    function setUsername(e){\r\n\r\n        setUser({\r\n            Username: e.target.value,\r\n            Password: user.Password,\r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setPassword(e){\r\n        setUser({\r\n            Password: e.target.value,\r\n            Username: user.Username, \r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setRole(e){\r\n        setUser({\r\n            Username: user.Username,\r\n            Password: user.Password, \r\n            Role: e.target.value,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function setArea(e){\r\n        setUser({\r\n                Username: user.Username,\r\n                Password: user.Password, \r\n                Role: user.Role,\r\n                Area: e.target.value\r\n            })\r\n     }\r\n    function addUser(e){\r\n        set(ref(db, 'User/' + uuidv4()), user).then(() => {\r\n            alert('Usuario gravado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao gravar usuario')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n        <div className='title'> \r\n          <div className='back-icon'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                              marginRight: '20px'\r\n                  }} onClick={back}/>\r\n          </div>\r\n          <div className='form-title'>\r\n              Adicionar Usuario\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Username</label>\r\n          <input type=\"text\" onChange={setUsername} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Password</label>\r\n          <input type=\"text\" onChange={setPassword} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Tipo de Usuario</label>\r\n          <select className=\"form-select\"  onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Operacional</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Tatico</option>\r\n          </select>\r\n      </div>\r\n  \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Area</label>\r\n          <select className=\"form-select\"  onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Urbanização e Regeneração Urbana</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n              <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n              <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n              <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n           </select>\r\n      </div>\r\n\r\n      <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Gravar Usuario   </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          <form>\r\n              <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Submeter  Usuario ?</label>\r\n              </div>\r\n          </form>\r\n              </div>\r\n                  <div className=\"modal-footer\">\r\n                      <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                      <button type=\"button\" onClick={addUser} className=\"btn btn-primary\">Sim</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>    \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx",["217","218","219"],"import React from 'react'\r\nimport './AddNewsLetter.css'\r\nimport {useState} from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {Storage} from '../database/Storage'\r\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\r\n\r\nfunction AddNewsLetter(){\r\n    const [newsLetter, setNewsLetter] = useState({\r\n        Key: uuidv4(),\r\n        Title: '',\r\n        Body: '',\r\n        File: null \r\n    })\r\n\r\n    const [formElements, setFormElements ] = useState([\r\n        {Titulo:  '', Corpo: '', Imagem: null },\r\n    ])\r\n    \r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function setTitle(e){\r\n        setNewsLetter({\r\n            Key: newsLetter.Key,\r\n            Title: e.target.value,\r\n            Body: newsLetter.Body,\r\n            File: newsLetter.File   \r\n        })\r\n    }\r\n\r\n    function setBody(e){\r\n        setNewsLetter({\r\n            Key: newsLetter.Key,\r\n            Title: newsLetter.Title,\r\n            Body: e.target.value,\r\n            File: newsLetter.File   \r\n        })\r\n    }\r\n\r\n    function saveNewsLetter(e){\r\n\r\n        if (newsLetter.File !== null){\r\n            uploadBytes( refStorage(Storage,`Newsletter/${newsLetter.Key}`),newsLetter.File)\r\n        }\r\n\r\n        set(ref(db, 'NewsLetter/' + uuidv4()), newsLetter).then(\r\n            ()=> {\r\n                alert('Newsletter adicionado com sucesso')\r\n            }\r\n        )\r\n        set(ref(db, 'NewsLetter/' + uuidv4()), newsLetter)\r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    function setFile(e){\r\n        e.preventDefault()\r\n        setNewsLetter({\r\n            Key: newsLetter.Key,\r\n            Title: newsLetter.Title,\r\n            Body: newsLetter.Body,\r\n            File: e.target.files[0]\r\n        })\r\n    }\r\n\r\n\r\n    const  handleFormChange = (event, index) => {\r\n        const data = [...formElements]\r\n\r\n        data[index][event.target.name] = event.target.value\r\n     //   console.log(data[index][event.target.name])\r\n       \r\n        setFormElements(data)\r\n        console.log(formElements)\r\n    }\r\n\r\n    const removeField = (element) => {\r\n        let data = [...formElements]\r\n        const index = element.target.id\r\n\r\n        data.splice(index,1)\r\n\r\n        setFormElements(data)\r\n    }\r\n\r\n    function addField(e){\r\n        let element =  {Titulo: '', Corpo: '', Imagem: null}\r\n        setFormElements([...formElements,element])\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className='title-newsletter'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='newsletter-title' style={{fontSize: '1.1rem', fontWeight: '400'}}>\r\n                    Adicionar NewsLetter\r\n                </div>\r\n            </div>\r\n            <div id='newsletter-content'>\r\n                <form>\r\n                    {formElements.map((element, index) => {\r\n                       return ( <div key={index} style={{border: 'solid #ccc 0.1px', marginBottom: '10px'}}>\r\n            \r\n                            <div className=\"form-group\" style={{display: 'flex', flexDirection: 'column'}}>\r\n\r\n                                  <button type=\"button\" id={index} onClick={removeField} style={{width: '10%', marginBottom: '15px', marginLeft: '90%'}}className=\"btn btn-outline-secondary\">\r\n                                        Apagar \r\n                                  </button>\r\n                                <p>\r\n                                     <label for=\"exampleFormControlInput1\">Titulo</label>\r\n                                </p>\r\n                               \r\n                                {/*<input type=\"email\"  onChange={setTitle} onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Titulo do Newsletter\"/>*/}\r\n                                <input type=\"email\" value={element.Titulo} name='titulo' onChange={event => handleFormChange(event, index)} className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Titulo do Newsletter\"/>\r\n                      \r\n                            </div>\r\n                            <div className=\"form-group\" style={{'margin-top': '20px'}}>\r\n                                <label for=\"exampleFormControlTextarea1\" style={{'font-weight': '400'}}>Corpo</label>\r\n                                {/*<textarea className=\"form-control\" onChange={setBody} onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea> */}\r\n                                <textarea name='corpo' value={element.Corpo} className=\"form-control\" onChange={event => handleFormChange(event, index)} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Carregar Fotografia</label>\r\n                             {/*<input type=\"file\" accept='image/*' onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" /> */}\r\n                                <input name='ficheiro' value={element.Imagem} type=\"file\" accept='image/*' onChange={event => handleFormChange(event, index)} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                        </div> )         \r\n                    })}\r\n                \r\n                    <div className='buttons-container' style={{'margin-top': '20px'}}>\r\n                        <button type=\"button\"  className=\"btn btn-secondary\" onClick={addField}>\r\n                            Adicionar Campo \r\n                        </button>\r\n            \r\n                        <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                            Gravar Newsletter \r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-secundary\">Descartar</button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                               <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"exampleInputEmail1\">Submeter Newsletter ?</label>\r\n                            </div>\r\n                        </form>\r\n                            </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                                    <button type=\"button\" onClick={saveNewsLetter} className=\"btn btn-primary\">Sim</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx",["220"],"import { useEffect,useState } from \"react\"\r\nimport React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './Users.css'\r\n\r\nfunction Users(){\r\n\r\n    const [users, setUsers]  = useState({projs: []})\r\n    const history = useHistory()\r\n    \r\n    function handleButtonEvent(e){\r\n       \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        if (key[0] === 'delete'){\r\n            alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            alert('updating')\r\n        }    \r\n     }\r\n \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `User`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setUsers({projs: snapshot.val()})\r\n                else\r\n                    alert('no data to load from db server')\r\n        }\r\n        )},[])\r\n    \r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (users !== null ){\r\n            for(let key in users.projs){\r\n               values.push(\r\n                <button onClick={handleButtonEvent}\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${users.projs[key].Key}`}>\r\n                        <div className='colmns-report'id={`${count++}.${users.projs[key].Key}`} >\r\n                            <ul id={`${count++}.${users.projs[key].Key}`}>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {users.projs[key].Username}\r\n                                </li>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {users.projs[key].Role}\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${users.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-trash\" id={`delete.${count++}.${users.projs[key].Key}`} />\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${users.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${users.projs[key].Key}`}/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/adduser',\r\n            })\r\n        }\r\n        \r\n        return( \r\n        <div className='users-container'>\r\n            <div className='title' id='title'>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Usuario</div>\r\n                <div className='report-header'>Tipo</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Actualizar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n}\r\n\r\nexport default Users","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx",["221","222"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction ReadNewsNetter(){\r\n\r\n    const [newsletter, setnewsLetter] = useState({})\r\n    const newsletterkey = document.URL.split('=')[1]\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                if (snapshot.exists()){\r\n\r\n                    for (let key in snapshot.val() ){\r\n                      if( snapshot.val()[key].Key === newsletterkey)\r\n                        setnewsLetter(snapshot.val()[key])\r\n                    }\r\n                }\r\n            }\r\n        )},[])\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                    <div className='title' id='title'>\r\n                        <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                    </div>\r\n                \r\n                <div className='title'>\r\n                    {newsletter.Title}\r\n                </div>\r\n                <div className='body'>\r\n                        {newsletter.Body}\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n}\r\n\r\nexport default ReadNewsNetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ShowDashboard.jsx",["223"],"import React from 'react'\r\nimport {db} from './database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './ShowDashboard.css'\r\n\r\nfunction ShowDashboard(){\r\n    const history = useHistory()\r\n\r\n    const [projects, setProjects ] = useState({})\r\n    const [lats, setLats ] = useState({})\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Project`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setProjects(snapshot.val())\r\n                    }\r\n                    else{\r\n                        alert('no data to load from db server')\r\n                    }\r\n                })\r\n\r\n                get(child(dbRef, `LAT`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setLats(snapshot.val())\r\n                    }\r\n                    else{\r\n                        alert('no data to load from db server')\r\n                    }\r\n                })\r\n\r\n            }\r\n    ,[])\r\n\r\n    function gotoDashboardProduct(e){\r\n        history.push({\r\n            pathname: '/dashboard',\r\n            search: `?key=${e.target.id}`\r\n        })\r\n    }\r\n\r\n    let cards = []\r\n    let count = 0\r\n    for(let key in projects){\r\n            let la = []\r\n            \r\n            for (let latKey in lats){\r\n                count++\r\n                if (lats[latKey].ProjectKey === projects[key].Key){\r\n                    la.push (\r\n                        <div className='card-content'>\r\n                            {lats[latKey].Description}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            }\r\n                        \r\n            cards.push(\r\n                <div class=\"col-sm\">\r\n                     <div className=\"card\" style={{\r\n                         marginTop: '15px',\r\n                         textAlign: 'justify'\r\n                        }}>\r\n                             <h5 className=\"card-header\"\r\n                             style={{\r\n                                 color: 'white', \r\n                                 background: '#001489'\r\n                             }}>\r\n                                 {projects[key].ProjectName}\r\n                             </h5>\r\n                         <div className=\"card-body\">\r\n                             <h5 className=\"card-title\">Linha de Acção Tematica</h5>\r\n                               {la}\r\n                            <div style={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: '1fr 1fr', \r\n                                marginTop: '10px'  \r\n                            }}>\r\n                                <a  className=\"btn btn-primary\" onClick={gotoDashboardProduct} id={`${key}`}>\r\n                                    Ver Projecto\r\n                                </a> \r\n                                <h5 >Total : {count} </h5>\r\n                            </div>\r\n                       </div>\r\n                     </div>\r\n                 </div>\r\n            )\r\n        count = 0\r\n    }\r\n\r\n    return (\r\n        <div className='home-container'>\r\n            {cards}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDashboard","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\EditHomeContent.jsx",["224","225","226"],"import React from 'react' \r\nimport './EditHomeContent.css'\r\nimport {useState, useEffect} from 'react'\r\nimport {set,ref} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { child, get } from \"firebase/database\"\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport { uploadBytes, ref as refStorage } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction EditHomeContent(){\r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'HomeContent/')\r\n    const [image, setImages] = useState({})\r\n\r\n    const [aboutPomar, setPomar] = useState({\r\n            Key: uuidv4(),\r\n            About: ''}\r\n        )\r\n        \r\n    useEffect(()=>{\r\n        const dbRef = ref(db)\r\n        \r\n        listAll(listOfImages).then((response) => {\r\n            let urls = []\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                urls.push(url)\r\n                setImageList(urls)\r\n            }))\r\n         })\r\n    \r\n        get(child(dbRef,'HomeContent')).then((snapshot) => {\r\n            if (snapshot.exists())\r\n             for (let key in snapshot.val())\r\n                setPomar({Key: aboutPomar.Key, About: snapshot.val()[key].About})\r\n            }\r\n        )\r\n    }, [])\r\n    \r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function setFile(e){\r\n            setPomar({\r\n                Key: aboutPomar.Key,\r\n                About: aboutPomar.About,\r\n                File: e.target.files\r\n            })\r\n    }\r\n\r\n    function submitText(e){\r\n        set(ref(db, 'HomeContent/' + uuidv4()), aboutPomar).then(()=>\r\n            {\r\n                alert('Texto alterado com sucesso')\r\n            }\r\n        )\r\n  \r\n    }\r\n    function submit(e){\r\n\r\n        if (image !== null){\r\n            uploadBytes( refStorage(Storage,`HomeContent/${aboutPomar.Key}`),image)\r\n            .then(() => {\r\n                alert('Imagem adicionada com Sucesso')\r\n            })\r\n        }\r\n    }\r\n\r\n    function setAboutPomar(e){\r\n        setPomar({About: e.target.value, Key: aboutPomar.Key})\r\n    }\r\n\r\n    function setFile(e){\r\n        setImages(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className='edit-container'>\r\n              <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                        <p>Modificar Conteudo do Home</p>\r\n              </div> \r\n              \r\n            <div className='about-pomar'>\r\n                <label for=\"exampleInputEmail1\">Sobre o Pomar</label>\r\n                <textarea rows='10' type='text' onChange={setAboutPomar} \r\n                    className=\"form-control\" aria-describedby=\"emailHelp\"  value={aboutPomar.About}/>\r\n                <div className='submit-info'>\r\n                    <button className='btn btn-primary' onClick={submitText}>\r\n                        Gravar Texto\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className='upload-pic'>\r\n                <label for=\"exampleInputEmail1\">Carregar Imagem</label>\r\n                <input type=\"file\" onChange={setFile} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className='submit-info'>\r\n                <button className='btn btn-primary' onClick={submit}>\r\n                    Gravar Imagem\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditHomeContent\r\n","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProject.jsx",["227","228","229","230","231"],"import React, { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { ref,set,get,update,child } from \"firebase/database\"\r\nimport { useState } from 'react'\r\n\r\nfunction UpdateProject(){\r\n    \r\n    const [project, setProject] = useState({     \r\n            ProjectName: '',\r\n            Objective: '',\r\n            DeadLine: '',\r\n            GeneralObjective: '',\r\n            Key: '  ',\r\n            OperatorName: '',\r\n            PartnerOrganizations: '',\r\n            PeopleInvolved: '',\r\n            Result: '',\r\n            SpecificObjective: '',\r\n            TypeOfActivity: '',\r\n            Implementadores: ' ',\r\n            Parceiros: ' ',\r\n            Financiadores: ' '\r\n    })\r\n\r\n    function setProjectName(e){\r\n        setProject({\r\n                    ProjectName: e.target.value,\r\n                    Objective: project.Objective,\r\n                    DeadLine: project.DeadLine,\r\n                    GeneralObjective: project.GeneralObjective,\r\n                    Key: project.Key,\r\n                    OperatorName: project.OperatorName,\r\n                    PartnerOrganizations: project.PartnerOrganizations,\r\n                    PeopleInvolved: project.PeopleInvolved,\r\n                    Result: project.Result,\r\n                    SpecificObjective: project.SpecificObjective,\r\n                    TypeOfActivity: project.TypeOfActivity,\r\n                    Implementadores: project.Implementadores,\r\n                    Parceiros: project.Parceiros,\r\n                    Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: e.target.value,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setResult(e){\r\n        setProject({ProjectName: e.target.value,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: e.target.value,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n\r\n        })\r\n    }\r\n\r\n    function setOperatorName(e){\r\n        setProject({ProjectName: e.target.value,\r\n            Objective: e.target.value,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: e.target.value,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setTypeOfActivity(e){\r\n        setProject({ProjectName: e.target.value,\r\n            Objective: e.target.value,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: e.target.value,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setSpecificObjective(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: e.target.value,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setDeadLine(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: e.target.value,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: e.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    function setImplementadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: e.target.value,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setParceiros(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: e.target.value,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    \r\n    function setFinanciadores(e){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: e.target.value,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: e.target.value\r\n        })\r\n    }\r\n\r\n    function back(e){\r\n        window.history.back()\r\n    }\r\n\r\n    function updateProject(e){\r\n\r\n        update(ref(db, `Project/${e.target.value}` ), project).then(() => {\r\n            alert('Projecto Actualizado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao Actualizado com sucesso')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        back()\r\n    }\r\n\r\n    function setKey(){\r\n        setProject({\r\n            ProjectName: project.ProjectName,\r\n            Objective: project.Objective,\r\n            DeadLine: project.DeadLine,\r\n            GeneralObjective: project.GeneralObjective,\r\n            Key: project.Key,\r\n            OperatorName: project.OperatorName,\r\n            PartnerOrganizations: project.PartnerOrganizations,\r\n            PeopleInvolved: project.PeopleInvolved,\r\n            Result: project.Result,\r\n            SpecificObjective: project.SpecificObjective,\r\n            TypeOfActivity: project.TypeOfActivity,\r\n            Implementadores: project.Implementadores,\r\n            Parceiros: project.Parceiros,\r\n            Financiadores: project.Financiadores\r\n        })\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='form-container'>\r\n\r\n        <div className='title'> \r\n            <div className='back-icon'>\r\n                <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                marginRight: '20px'\r\n                    }} onClick={back}/>\r\n            </div>\r\n            <div className='form-title'>\r\n                Actualizar Projecto\r\n            </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome do Projecto</label>\r\n            <input type=\"text\" value={project.ProjectName} id='projectName'onChange={setProjectName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">DeadLine</label>\r\n            <input type=\"date\" id='deadLine' value={project.DeadLine} onChange={setDeadLine} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Objecto do projecto</label>\r\n            <input type=\"text\" id='projectObjective' value={project.GeneralObjective} onChange={setObjective} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Resultado</label>\r\n            <input type=\"text\" id='results' value={project.Result} onChange={setResult} className=\"form-control\" aria-describedby=\"emailHelp\"/>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Nome do operador</label>\r\n            <input type=\"text\" id='operatorName' value={project.OperatorName} onChange={setOperatorName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Tipo de actividade</label>\r\n            <input type=\"text\" id='typeOfActivity' value={project.TypeOfActivity} onChange={setTypeOfActivity} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Objectivo Especifico</label>\r\n            <input type=\"text\" id='specificObjective' value={project.SpecificObjective} onChange={setSpecificObjective} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Implementadores</label>\r\n            <input type=\"text\" id='implementadores' value={project.Implementadores} onChange={setImplementadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n      \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Parceiros</label>\r\n            <input type=\"text\" id='parceiros' value={project.Parceiros} onChange={setParceiros} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Financiadores</label>\r\n            <input type=\"text\" id='finaciadores' value={project.Financiadores} onChange={setFinanciadores} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n            Actualizar Projecto         </button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Actualizar Projecto ?</label>\r\n                </div>\r\n            </form>\r\n                </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                        <button type=\"button\" value={document.URL.split('=')[1]}className=\"btn btn-primary\" onClick={updateProject}>Sim</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProject","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\updateForms\\UpdateProducts.jsx",["232","233","234"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {set,ref,get,child,update} from 'firebase/database'\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nfunction UpdateProduct(){\r\n\r\n    const [product, setProduct] = useState({\r\n        Area: '',\r\n        LatKey: '',\r\n        Name: '',\r\n        ProjectKey: '',\r\n        Status: 'Não Iniciado',\r\n        Key: ''\r\n    })\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `Product`)).then((snapshot) => {\r\n            if (snapshot.exists())\r\n                for (let key in snapshot.val())\r\n                    if (document.URL.split('=')[1] === key)\r\n                        setProduct(snapshot.val()[key])\r\n        })},[])\r\n\r\n    function setProductName(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function setStatus(e){\r\n        setProduct({\r\n            Area: product.Area,\r\n            LatKey: product.LatKey,\r\n            Name: e.target.value,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: e.target.value,\r\n            Key: product.Key\r\n        })\r\n    }   \r\n\r\n    function setArea(e){\r\n        setProduct({\r\n            Area: e.target.value,\r\n            LatKey: product.LatKey,\r\n            Name: product.Name,\r\n            ProjectKey: product.ProjectKey,\r\n            Status: product.Status,\r\n            Key: product.Key\r\n        })\r\n    }\r\n\r\n    function updateProduct (e){\r\n        console.log(product)\r\n    }\r\n\r\n    function back(){\r\n        window.history.back()\r\n    }\r\n\r\n    function setLATs(){\r\n\r\n        let a = []\r\n\r\n        if (product.Area === 'Urbanização e Regeneração Urbana'){\r\n            a.push(<option selected value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }\r\n        if (product.Area === 'Recursos Hídricos e Resiliência'){\r\n            a.push(<option selected value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n          \r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Ambiente e Resíduos Sólidos'){\r\n            a.push(<option selected value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Educação Primária e Pré-Escolar'){\r\n            a.push(<option selected value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n        }else if (product.Area === 'Sustentabilidade'){\r\n            a.push(<option value=\"Sustentabilidade\">Sustentabilidade</option>)\r\n            a.push(<option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>)\r\n            a.push(<option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>)\r\n            a.push(<option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>)\r\n            a.push(<option  value=\"Urbanização e Regeneração Urbana\">Urbanização e Regeneração Urbana</option>)\r\n        }\r\n\r\n        return a\r\n    }\r\n\r\n    function setStates(){\r\n\r\n        let a = []\r\n\r\n        if (product.Status === 'Não Iniciado' ){\r\n            a.push(<option selected value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        } else if (product.Status === 'Em progresso'){\r\n            a.push(<option selected value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        }else if ( product.Status === 'Cancelado'){\r\n            a.push(<option selected value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option  value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n            a.push(<option value=\"Concluido\">Concluido</option>)\r\n        }else if (product.Status === 'Concluido'){\r\n            a.push(<option selected value=\"Concluido\">Concluido</option>)\r\n            a.push(<option value=\"Cancelado\">Cancelado</option>)\r\n            a.push(<option value=\"Em progresso\">Em progresso</option>)\r\n            a.push(<option value=\"\">Não Iniciado</option>)\r\n        }\r\n        return a\r\n    }\r\n\r\n    console.log(product)\r\n    \r\n    return (\r\n        <div className='form-container'>\r\n              <div className='title'> \r\n                <div className='back-icon'>\r\n                    <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                </div>\r\n                <div className='form-title'>\r\n                    Actualizar Producto\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Nome do Producto</label>\r\n                <input type=\"text\" value={product.Name} onChange={setProductName} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">LAT</label>\r\n                <select className=\"form-select\" onChange={setArea} aria-label=\"Default select example\">\r\n                    {setLATs()}\r\n                </select>\r\n            </div>\r\n    \r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputEmail1\">Estado do Producto</label>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" onChange={setStatus}>\r\n                    {setStates()}\r\n                </select>\r\n            </div>\r\n        \r\n            <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n                Actualizar   </button>\r\n            <button type=\"button\"  onClik={back} className=\"btn btn-secundary\">Descartar</button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Actualizar Producto ?</label>\r\n                    </div>\r\n                </form>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                            <button type=\"button\" onClick={updateProduct} className=\"btn btn-primary\">Sim</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct",{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":22,"column":26,"nodeType":"241","endLine":22,"endColumn":68},{"ruleId":"242","severity":1,"message":"243","line":4,"column":10,"nodeType":"244","messageId":"245","endLine":4,"endColumn":16},{"ruleId":"242","severity":1,"message":"246","line":9,"column":25,"nodeType":"244","messageId":"245","endLine":9,"endColumn":42},{"ruleId":"247","severity":1,"message":"248","line":32,"column":24,"nodeType":"249","messageId":"250","endLine":32,"endColumn":26},{"ruleId":"247","severity":1,"message":"251","line":46,"column":46,"nodeType":"249","messageId":"250","endLine":46,"endColumn":48},{"ruleId":"242","severity":1,"message":"252","line":4,"column":22,"nodeType":"244","messageId":"245","endLine":4,"endColumn":33},{"ruleId":"242","severity":1,"message":"253","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":15},{"ruleId":"242","severity":1,"message":"254","line":28,"column":14,"nodeType":"244","messageId":"245","endLine":28,"endColumn":31},{"ruleId":"242","severity":1,"message":"255","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":12},{"ruleId":"242","severity":1,"message":"256","line":27,"column":14,"nodeType":"244","messageId":"245","endLine":27,"endColumn":25},{"ruleId":"242","severity":1,"message":"257","line":3,"column":35,"nodeType":"244","messageId":"245","endLine":3,"endColumn":41},{"ruleId":"242","severity":1,"message":"253","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":15},{"ruleId":"242","severity":1,"message":"258","line":9,"column":8,"nodeType":"244","messageId":"245","endLine":9,"endColumn":16},{"ruleId":"242","severity":1,"message":"259","line":22,"column":29,"nodeType":"244","messageId":"245","endLine":22,"endColumn":33},{"ruleId":"242","severity":1,"message":"260","line":80,"column":17,"nodeType":"244","messageId":"245","endLine":80,"endColumn":28},{"ruleId":"242","severity":1,"message":"261","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":15},{"ruleId":"242","severity":1,"message":"262","line":5,"column":17,"nodeType":"244","messageId":"245","endLine":5,"endColumn":20},{"ruleId":"242","severity":1,"message":"263","line":5,"column":22,"nodeType":"244","messageId":"245","endLine":5,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":22,"column":7,"nodeType":"266","endLine":22,"endColumn":9,"suggestions":"267"},{"ruleId":"242","severity":1,"message":"253","line":5,"column":8,"nodeType":"244","messageId":"245","endLine":5,"endColumn":15},{"ruleId":"242","severity":1,"message":"252","line":3,"column":22,"nodeType":"244","messageId":"245","endLine":3,"endColumn":33},{"ruleId":"242","severity":1,"message":"252","line":4,"column":22,"nodeType":"244","messageId":"245","endLine":4,"endColumn":33},{"ruleId":"242","severity":1,"message":"257","line":4,"column":47,"nodeType":"244","messageId":"245","endLine":4,"endColumn":53},{"ruleId":"242","severity":1,"message":"268","line":7,"column":8,"nodeType":"244","messageId":"245","endLine":7,"endColumn":13},{"ruleId":"242","severity":1,"message":"269","line":47,"column":12,"nodeType":"244","messageId":"245","endLine":47,"endColumn":15},{"ruleId":"242","severity":1,"message":"253","line":6,"column":8,"nodeType":"244","messageId":"245","endLine":6,"endColumn":15},{"ruleId":"242","severity":1,"message":"270","line":13,"column":12,"nodeType":"244","messageId":"245","endLine":13,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":34,"column":7,"nodeType":"266","endLine":34,"endColumn":9,"suggestions":"271"},{"ruleId":"242","severity":1,"message":"272","line":58,"column":14,"nodeType":"244","messageId":"245","endLine":58,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":76,"column":33,"nodeType":"241","endLine":76,"endColumn":117},{"ruleId":"242","severity":1,"message":"269","line":85,"column":19,"nodeType":"244","messageId":"245","endLine":85,"endColumn":22},{"ruleId":"242","severity":1,"message":"275","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":20},{"ruleId":"242","severity":1,"message":"276","line":12,"column":12,"nodeType":"244","messageId":"245","endLine":12,"endColumn":27},{"ruleId":"242","severity":1,"message":"277","line":12,"column":29,"nodeType":"244","messageId":"245","endLine":12,"endColumn":47},{"ruleId":"242","severity":1,"message":"278","line":13,"column":12,"nodeType":"244","messageId":"245","endLine":13,"endColumn":23},{"ruleId":"242","severity":1,"message":"279","line":13,"column":25,"nodeType":"244","messageId":"245","endLine":13,"endColumn":39},{"ruleId":"264","severity":1,"message":"280","line":35,"column":6,"nodeType":"266","endLine":35,"endColumn":8,"suggestions":"281"},{"ruleId":"242","severity":1,"message":"282","line":40,"column":13,"nodeType":"244","messageId":"245","endLine":40,"endColumn":18},{"ruleId":"242","severity":1,"message":"283","line":8,"column":10,"nodeType":"244","messageId":"245","endLine":8,"endColumn":23},{"ruleId":"242","severity":1,"message":"284","line":129,"column":14,"nodeType":"244","messageId":"245","endLine":129,"endColumn":31},{"ruleId":"242","severity":1,"message":"285","line":50,"column":14,"nodeType":"244","messageId":"245","endLine":50,"endColumn":21},{"ruleId":"242","severity":1,"message":"286","line":26,"column":14,"nodeType":"244","messageId":"245","endLine":26,"endColumn":22},{"ruleId":"242","severity":1,"message":"287","line":35,"column":14,"nodeType":"244","messageId":"245","endLine":35,"endColumn":21},{"ruleId":"242","severity":1,"message":"288","line":60,"column":14,"nodeType":"244","messageId":"245","endLine":60,"endColumn":21},{"ruleId":"242","severity":1,"message":"252","line":4,"column":22,"nodeType":"244","messageId":"245","endLine":4,"endColumn":33},{"ruleId":"242","severity":1,"message":"275","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":20},{"ruleId":"264","severity":1,"message":"289","line":24,"column":12,"nodeType":"266","endLine":24,"endColumn":14,"suggestions":"290"},{"ruleId":"273","severity":1,"message":"274","line":83,"column":33,"nodeType":"241","endLine":83,"endColumn":110},{"ruleId":"242","severity":1,"message":"270","line":13,"column":12,"nodeType":"244","messageId":"245","endLine":13,"endColumn":21},{"ruleId":"264","severity":1,"message":"291","line":39,"column":8,"nodeType":"266","endLine":39,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":75,"column":14,"nodeType":"244","messageId":"295","endLine":75,"endColumn":21},{"ruleId":"242","severity":1,"message":"296","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"297","line":3,"column":14,"nodeType":"244","messageId":"245","endLine":3,"endColumn":17},{"ruleId":"242","severity":1,"message":"262","line":3,"column":18,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"242","severity":1,"message":"261","line":3,"column":29,"nodeType":"244","messageId":"245","endLine":3,"endColumn":34},{"ruleId":"242","severity":1,"message":"298","line":230,"column":14,"nodeType":"244","messageId":"245","endLine":230,"endColumn":20},{"ruleId":"242","severity":1,"message":"297","line":5,"column":9,"nodeType":"244","messageId":"245","endLine":5,"endColumn":12},{"ruleId":"242","severity":1,"message":"257","line":5,"column":27,"nodeType":"244","messageId":"245","endLine":5,"endColumn":33},{"ruleId":"242","severity":1,"message":"299","line":6,"column":15,"nodeType":"244","messageId":"245","endLine":6,"endColumn":21},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'setMenuVisibility' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'getDatabase' is defined but never used.","'TaskRow' is defined but never used.","'handleButtonEvent' is defined but never used.","'logo' is defined but never used.","'editContent' is defined but never used.","'update' is defined but never used.","'Projects' is defined but never used.","'acts' is assigned a value but never used.","'deleteIndex' is assigned a value but never used.","'child' is defined but never used.","'get' is defined but never used.","'ref' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listOfImages'. Either include it or remove the dependency array.","ArrayExpression",["302"],"'Modal' is defined but never used.","'key' is assigned a value but never used.","'imageList' is assigned a value but never used.",["303"],"'index' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useHistory' is defined but never used.","'activitiesCount' is assigned a value but never used.","'setActivitiesCount' is assigned a value but never used.","'mActivities' is assigned a value but never used.","'setMActivities' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activities'. Either include it or remove the dependency array.",["304"],"'count' is assigned a value but never used.","'consoleOrigin' is defined but never used.","'setPeopleInvolved' is defined but never used.","'setArea' is defined but never used.","'setTitle' is defined but never used.","'setBody' is defined but never used.","'setFile' is defined but never used.","React Hook useEffect has a missing dependency: 'newsletterkey'. Either include it or remove the dependency array.",["305"],"React Hook useEffect has missing dependencies: 'aboutPomar.Key' and 'listOfImages'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPomar' needs the current value of 'aboutPomar.Key'.",["306"],"no-redeclare","'setFile' is already defined.","redeclared","'useEffect' is defined but never used.","'set' is defined but never used.","'setKey' is defined but never used.","'uuidv4' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"307","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [listOfImages]",{"range":"316","text":"317"},{"range":"318","text":"317"},"Update the dependencies array to be: [activities]",{"range":"319","text":"320"},"Update the dependencies array to be: [newsletterkey]",{"range":"321","text":"322"},"Update the dependencies array to be: [aboutPomar.Key, listOfImages]",{"range":"323","text":"324"},[650,652],"[listOfImages]",[1305,1307],[1302,1304],"[activities]",[808,810],"[newsletterkey]",[1362,1364],"[aboutPomar.Key, listOfImages]"]