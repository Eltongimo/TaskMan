[{"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js":"1","C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js":"2","C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js":"3","C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx":"4","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx":"5","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx":"6","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx":"7","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx":"8","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx":"9","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx":"10","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx":"11","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx":"12","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx":"13","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx":"14","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx":"15","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx":"16","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx":"17","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js":"18","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js":"19","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx":"20","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx":"21","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js":"22","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx":"23","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx":"24","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx":"25","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx":"26","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx":"27","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx":"28","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx":"29","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx":"30","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx":"31","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx":"32","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx":"33"},{"size":517,"mtime":1672378282203,"results":"34","hashOfConfig":"35"},{"size":285,"mtime":1672311493009,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1672311493142,"results":"37","hashOfConfig":"35"},{"size":575,"mtime":1673256958091,"results":"38","hashOfConfig":"35"},{"size":3682,"mtime":1673532975248,"results":"39","hashOfConfig":"35"},{"size":1267,"mtime":1673592543391,"results":"40","hashOfConfig":"35"},{"size":868,"mtime":1673343647705,"results":"41","hashOfConfig":"35"},{"size":2853,"mtime":1673259509232,"results":"42","hashOfConfig":"35"},{"size":2230,"mtime":1672311493086,"results":"43","hashOfConfig":"35"},{"size":2133,"mtime":1673256957364,"results":"44","hashOfConfig":"35"},{"size":3154,"mtime":1671863399273,"results":"45","hashOfConfig":"35"},{"size":7688,"mtime":1673592952138,"results":"46","hashOfConfig":"35"},{"size":12033,"mtime":1673482344853,"results":"47","hashOfConfig":"35"},{"size":1647,"mtime":1673031736065,"results":"48","hashOfConfig":"35"},{"size":4556,"mtime":1672234904212,"results":"49","hashOfConfig":"35"},{"size":4295,"mtime":1673594273700,"results":"50","hashOfConfig":"35"},{"size":4666,"mtime":1672234915711,"results":"51","hashOfConfig":"35"},{"size":953,"mtime":1672311493054,"results":"52","hashOfConfig":"35"},{"size":772,"mtime":1672311493055,"results":"53","hashOfConfig":"35"},{"size":2497,"mtime":1673256957982,"results":"54","hashOfConfig":"35"},{"size":5240,"mtime":1673554746017,"results":"55","hashOfConfig":"35"},{"size":559,"mtime":1672638446461,"results":"56","hashOfConfig":"35"},{"size":4540,"mtime":1673531832235,"results":"57","hashOfConfig":"35"},{"size":2121,"mtime":1673531797050,"results":"58","hashOfConfig":"35"},{"size":6242,"mtime":1672235023739,"results":"59","hashOfConfig":"35"},{"size":10851,"mtime":1672378888297,"results":"60","hashOfConfig":"35"},{"size":3401,"mtime":1673030749553,"results":"61","hashOfConfig":"35"},{"size":5047,"mtime":1672629568010,"results":"62","hashOfConfig":"35"},{"size":5353,"mtime":1673032112380,"results":"63","hashOfConfig":"35"},{"size":19868,"mtime":1673885587070,"results":"64","hashOfConfig":"35"},{"size":3949,"mtime":1673248115442,"results":"65","hashOfConfig":"35"},{"size":1845,"mtime":1673530962495,"results":"66","hashOfConfig":"35"},{"size":1556,"mtime":1673581869468,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ihrqs0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},"C:\\Users\\Pina\\Desktop\\taskMan\\src\\index.js",[],["149","150"],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\App.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\reportWebVitals.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\main\\Main.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Board.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Header.jsx",["151","152"],"import React from 'react'\r\nimport './Header.css'\r\nimport logo from '../assets/logo/logo.png'\r\nimport {useState} from 'react'\r\n\r\nfunction Header() {\r\n\r\n     return (\r\n               <header className='header'>\r\n                    <div className=\"home\">\r\n                         <a href='/'>\r\n                              <i class=\"bi bi-house-door-fill\" style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}></i>\r\n                         </a>\r\n                    </div>\r\n                    <div className='search-input'>\r\n                         <div class=\"form-outline\">\r\n                              <input type=\"search\" id=\"form1\" class=\"form-control\" placeholder=\"Search...\"/>\r\n                         </div>    \r\n                    </div>\r\n                    <div className='logo'>\r\n                         <img src={logo}  width='120' height='50'/>\r\n                    </div>\r\n               <div>\r\n                    <label id='welcome' style={{\r\n                         color: 'white',\r\n                         fontSize: '1rem',\r\n                         padding: '10px',\r\n                         fontWeight: '500'\r\n\r\n                    }}/>\r\n               </div> \r\n          </header>\r\n     )\r\n}\r\n\r\n\r\nexport default Header\r\n   ","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Footer.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Menu.jsx",["153","154"],"import React from 'react'\r\nimport './Menu.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { Button } from 'bootstrap'\r\nimport { useState } from 'react'\r\n\r\nfunction Menu(props) {\r\n\r\n    const [menuVisible, setMenuVisibility ] = useState(true)\r\n\r\n    const menuKeys = ['dahboard','carousel','menu-home', 'menu-projects','newsletter','relatorios','usuarios']\r\n    let a = []\r\n\r\n    function activeBackGroud(e){\r\n        \r\n        const selectedId = e.target.id\r\n\r\n        for (let key in menuKeys){\r\n            \r\n            if ( menuKeys[key] === selectedId){\r\n                document.getElementById(selectedId).parentElement.style.backgroundColor = '#00c6ff'\r\n            }else{\r\n                document.getElementById(menuKeys[key]).parentElement.style.backgroundColor = 'transparent'\r\n            }\r\n        }\r\n\r\n    }\r\n      a.push(\r\n            <div className='navigation'>\r\n                <nav >\r\n                    <ul>\r\n\r\n                        <li className='home'>\r\n                            <Link id={menuKeys[0]} onClick={activeBackGroud}  className='link' to=\"/\" exact=\"true\"> \r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li  className='dashboard' hidden = {menuVisible} >\r\n                            <Link id={menuKeys[1]} onClick={activeBackGroud}  className='link' to=\"/dashboard\" exact=\"true\"> \r\n                                Dashboard\r\n                            </Link>\r\n                        </li>\r\n                        <li  className='projects' hidden={menuVisible}>\r\n                            <Link id={menuKeys[2]} onClick={activeBackGroud} className='link' to=\"/projects\" exact=\"true\" >\r\n                                Projectos\r\n                            </Link>\r\n                        </li>\r\n                        <li className='newsletter' hidden={menuVisible}>\r\n                            <Link id={menuKeys[3]} onClick={activeBackGroud}  className='link' to=\"/newsletter\" exact=\"true\"> \r\n                                NewsLetter\r\n                            </Link>\r\n                        </li>\r\n                        <li className='relatorios' hidden={menuVisible}>\r\n                            <Link id={menuKeys[4]} onClick={activeBackGroud}  className='link' to='/relatorios' exact=\"true\"> \r\n                                Relatorios\r\n                            </Link>\r\n                        </li>\r\n                        <li className='usuarios' hidden={menuVisible}>\r\n                            <Link id={menuKeys[5]} onClick={activeBackGroud}  className='link' to='/usuarios' exact=\"true\"> \r\n                                Usuarios\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n            </nav>\r\n        </div>)\r\n\r\n    return a\r\n}\r\nexport default Menu","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\loginpage\\Login.jsx",["155"],"import React from 'react'\r\nimport './Login.css'\r\n\r\nclass FluidInput extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        focused: false,\r\n        value: \"\"\r\n      };\r\n    }\r\n    focusField() {\r\n      const { focused } = this.state;\r\n      this.setState({\r\n        focused: !focused\r\n      });\r\n    }\r\n    handleChange(event) {\r\n      const { target } = event;\r\n      const { value } = target;\r\n      this.setState({\r\n        value: value\r\n      });\r\n    }\r\n    render() {\r\n      const { type, label, style, id } = this.props;\r\n      const { focused, value } = this.state;\r\n      \r\n      let inputClass = \"fluid-input\";\r\n      if (focused) {\r\n        inputClass += \" fluid-input--focus\";\r\n      } else if (value != \"\") {\r\n        inputClass += \" fluid-input--open\";\r\n      }\r\n      \r\n      return (\r\n        <div className={inputClass} style={style}>\r\n          <div className=\"fluid-input-holder\">\r\n            \r\n            <input \r\n              className=\"fluid-input-input\"\r\n              type={type}\r\n              id={id}\r\n              onFocus={this.focusField.bind(this)}\r\n              onBlur={this.focusField.bind(this)}\r\n              onChange={this.handleChange.bind(this)}\r\n              autocomplete=\"off\"\r\n            />\r\n            <label className=\"fluid-input-label\" forHtml={id}>{label}</label>\r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Button extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className={`button ${this.props.buttonClass}`} onClick={this.props.onClick}>\r\n          {this.props.buttonText}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Login extends React.Component {\r\n    render() {\r\n      \r\n      const style = {\r\n        margin: \"15px 0\"\r\n      };\r\n      return (\r\n        <div className=\"login-container\">\r\n          <div className=\"title\">\r\n           Login\r\n          </div>\r\n          <FluidInput type=\"text\" label=\"name\" id=\"name\" style={style} />\r\n          <FluidInput type=\"password\" label=\"password\" id=\"password\" style={style} />\r\n          <Button buttonText=\"log in\" buttonClass=\"login-button\" />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Login","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Dashboard.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\LAT.jsx",["156","157","158"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Lat (){\r\n   const [products, setProducts] = useState({products:  []}) \r\n\r\n   const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setProducts({projects: snapshot.val()})\r\n                    }\r\n                    else{\r\n                        alert('no data to load from db server')\r\n                   }\r\n                })\r\n        }\r\n    ,[])\r\n\r\n    function handleButtonEvent(e){\r\n       \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n       \r\n       history.push({\r\n        pathname: '/macroactivities',\r\n        search: `?key=${key[1]}`,\r\n      })\r\n    }\r\n\r\n    function filterProducts(prods){\r\n        let prodArray = []\r\n    \r\n        for(let p in prods.projects){\r\n            \r\n            if (prods.projects[p].LatKey === document.URL.split('=')[1]){\r\n                prodArray.push(prods.projects[p])\r\n                console.log(true)\r\n             }\r\n        }\r\n        return prodArray\r\n    }\r\n\r\n    function convertStatusToPercentage(percentage){\r\n\r\n        if (percentage === 'Não Iniciado'){\r\n            percentage = 0\r\n        }else if (percentage === 'Em progresso'){\r\n            percentage = 0.5\r\n        }else if (percentage === 'Cancelado'){\r\n            percentage = 0\r\n        }else if (percentage === 'Concluido'){\r\n            percentage = 1\r\n        }\r\n        return percentage\r\n    }\r\n\r\n    function buildTable(){\r\n        \r\n        let values = []\r\n        let prods = filterProducts(products)\r\n        \r\n        if (products !== null ){\r\n            for(let index in prods){\r\n                values.push(\r\n                    <div className='rows-report' >\r\n                        <div className='colmns-report'>\r\n                        <ul >\r\n                            <li >\r\n                                {prods[index].Name}\r\n                            </li>\r\n                            <li >\r\n                                {prods[index].Status}\r\n                            </li>\r\n                            <li>\r\n                                {convertStatusToPercentage(prods[index].Status) * 100}%\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n        return( \r\n        <div className='table-container'>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nome do Producto</div>\r\n                <div className='report-header'>Estado</div>\r\n                <div className='report-header'>%</div>\r\n            </div>\r\n            {values}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n}\r\n\r\nexport default Lat","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Home.jsx",["159"],"import React from 'react'\r\nimport './Home.css'\r\nimport {db} from './database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get,ref } from \"firebase/database\"\r\nimport Carousel from './projectviews/Carousel'\r\nimport logo from '../assets/logo/logo.png'\r\n\r\n\r\nfunction Home(){\r\n    const [user, setUser ] = useState({})\r\n    const [projects, setProjects] = useState({\r\n        \r\n    })\r\n    const [typedUser, setTypedUser] = useState({})\r\n\r\n    function getUsername(e){\r\n        setTypedUser({username: e.target.value, password:typedUser.password})\r\n    }\r\n\r\n    function getPassword(e){\r\n        setTypedUser({username: typedUser.username, password: e.target.value})\r\n    }\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `User`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                        setUser({users: snapshot.val()})\r\n                    else\r\n                        alert('No Users')\r\n            })\r\n            get(child(dbRef, 'Project')).then( snapshot => {\r\n                if (snapshot.exists()){\r\n                    setProjects({p: snapshot.val()})\r\n                }\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function login(e){\r\n        \r\n        for (let u in user.users){\r\n\r\n            if ( user.users[u].Username === typedUser.username && user.users[u].Password === typedUser.password){\r\n                e.target.isVisible = false\r\n                document.getElementById('closemodal').click()\r\n                document.getElementById('welcome').innerHTML = `${typedUser.username}, Bem vindo  ao POMAR!`\r\n                enableMenus()\r\n                clearForm()\r\n                return \r\n            }\r\n        }    \r\n        \r\n        alert('username and Password not correct')\r\n    }\r\n\r\n    function enableMenus(){\r\n        document.getElementsByClassName('dashboard')[0].hidden = false\r\n        document.getElementsByClassName('projects')[0].hidden = false\r\n        document.getElementsByClassName('newsletter')[0].hidden = false\r\n        document.getElementsByClassName('relatorios')[0].hidden = false\r\n        document.getElementsByClassName('usuarios')[0].hidden = false\r\n    }\r\n\r\n    function clearForm(){\r\n        document.getElementById('username').value = ''\r\n        document.getElementById('password').value = ''\r\n    }\r\n\r\n    function loadprojects(){\r\n        let a = []\r\n        let count = 0\r\n        for (let key in projects.p){\r\n            a.push(\r\n                <li>\r\n                    <button type=\"button\" className='btn btn-outline-secondary' data-toggle=\"modal\" data-target={`#exampleModal${count}`}> {projects.p[key].ProjectName}     </button>\r\n                      <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Projecto  {projects.p[key].ProjectName}</h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                <div className=\"modal-body\">\r\n                                    <strong>Tipo de Actividade</strong>\r\n                                    <p> \r\n                                        {projects.p[key].TypeOfActivity}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Geral do Projecto</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].GeneralObjective}\r\n                                    </p>\r\n\r\n                                    <strong>Objectivo Especifico</strong>\r\n\r\n                                    <p> \r\n                                          {projects.p[key].SpecificObjective}\r\n                                    </p>\r\n                                \r\n                                    <strong>Resultado Esperado</strong>\r\n                                    <p> \r\n                                        {projects.p[key].Result}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n            count++\r\n        }\r\n        return a\r\n    }\r\n\r\n    return (<div className='homeContainer'>\r\n\r\n        <div className='carousel-home'>\r\n            <Carousel/>\r\n        </div>\r\n    \r\n        <div className='image' style={{textAlign: 'justify', padding: '10px'}}> \r\n            <b>Projectos</b>\r\n            <p/>\r\n            <ul>\r\n                {loadprojects()}\r\n            </ul>\r\n        </div>\r\n        <div className='text' style={{textAlign: 'justify', padding: '10px'}}>\r\n            <b>Informação sobre o Pomar</b>\r\n            <p/>\r\n        Contrary to popular belief, Lorem Ipsum is not simply random text. \r\n        It has roots in a piece of classical Latin literature from 45 BC, \r\n        making it over 2000 years old. Richard McClintock, a Latin professor at \r\n        Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words,\r\n\r\n<p>Desenvolvido por Eltonug\r\n\r\n</p>\r\n\r\n<button type=\"button\" onClick={clearForm} className=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n  Login\r\n</button>\r\n    <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"false\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Login</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            <div className=\"modal-body\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label >Username</label> \r\n                        <input type=\"email\" id='username' onChange={getUsername} className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Usermane\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Password</label>\r\n                        <input type=\"password\" id='password' onChange= {getPassword} className=\"form-control\" placeholder=\"Password\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={login}>Entrar</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n    </div>\r\n</div>)\r\n}\r\n\r\nexport default Home","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Activities.jsx",["160","161"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport {useState,useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport './Activity.css'\r\nimport ActivitySinglePDF from '../ReportsPDF/ActivitySinglePDF'\r\n\r\nfunction Activities (){\r\n    \r\n        const [activity, setActivity ] = useState({activities: []})\r\n        const history =  useHistory()\r\n        \r\n\r\n    \r\n    useEffect(() => {\r\n            const dbRef = ref(db)\r\n            \r\n            get(child(dbRef,`Activity`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                    {\r\n                        let acts = []\r\n                        const vals = snapshot.val()\r\n\r\n                     /*   for (let a in vals){\r\n                            if (document.URL.split('=')[1] == vals[a].MacroActivityKey){\r\n                                acts.push(vals[a])\r\n                            }\r\n                        }*/\r\n                        setActivity({activities: vals})\r\n                    }            \r\n                    else{\r\n                        alert('Sem actividades para carregar')\r\n                    }\r\n            })\r\n        },[]\r\n    )\r\n\r\n    function handleButtonEvent(e){\r\n\r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n \r\n        if (key[0] === 'delete'){\r\n         alert('deleting')\r\n         }\r\n         else if (key[0] === 'update'){\r\n             alert('updating')\r\n         } \r\n   }\r\n\r\n   // create single page report with details from acticit\r\n   function createPDF(e){\r\n\r\n        ActivitySinglePDF(activity.activities[e.target.id.split('.')[1]])\r\n    \r\n    }\r\n\r\n\r\n    function buildTable (){\r\n        \r\n        var values = []\r\n\r\n        if (activity.activities !== null ){\r\n            let count = 0\r\n            let index = 0\r\n\r\n            for(let key in activity.activities){\r\n\r\n               values.push( \r\n                <div>\r\n                    <button onClick={handleButtonEvent}\r\n                        style={{background: 'transparent',\r\n                                border: 'none',\r\n                                width: '100%',\r\n                                outline: 'none',\r\n                            }}\r\n                        >\r\n                        <div className='rows-report' id={`${count++}.${activity.activities[key].Key}`}>\r\n                            <div className='colmns-report'id={`${count++}.${activity.activities[key].Key}`} >\r\n                                <ul id={`${count++}.${activity.activities[key].Key}`}>\r\n\r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {++index}\r\n                                    </li>\r\n                                   \r\n                                    <li id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        {activity.activities[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-pencil\" id={`update.${count++}.${activity.activities[key].Key}`}\r\n                                          />\r\n                                    </li>\r\n\r\n                                    <li className='project-icons' id={`${count++}.${activity.activities[key].Key}`}>\r\n                                        <i className=\"bi bi-trash\" id={`delete.${count++}.${activity.activities[key].Key}`} \r\n                                          \r\n                                        />\r\n                                    </li>\r\n                                    \r\n                                    <li className='project-icons' data-toggle=\"modal\" id={`${count}`} >\r\n                                        <i className=\"bi bi-info\" data-toggle=\"modal\" data-target={`#exampleModal${count}`}\r\n                                          \r\n                                        />\r\n                                    </li>\r\n                                    <li id={`${count + 1}.${key}`}>\r\n                                        <i class=\"bi bi-file-earmark-arrow-down\" style={{\r\n                                                fontSize: '1.3rem',\r\n                                                color: 'blue'\r\n                                            }}\r\n                                            onClick={createPDF}\r\n                                            id={`${count + 10}.${key}`}\r\n                                        />   \r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                    <div className=\"modal fade\" id={`exampleModal${count}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Detalhes da actividade</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <form>\r\n                                <ul >\r\n                                    <li className='modal-details-row'>\r\n                                        <label>Actividade </label> <div className='activity-detail'>{activity.activities[key].Name} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Descrição </label> <div className='activity-detail'>{activity.activities[key].Description} </div> \r\n                                    </li> \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Lugar </label> <div className='activity-detail'>{activity.activities[key].Location} </div> \r\n                                    </li> \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Data de Inicio </label> <div className='activity-detail'>{activity.activities[key].StartTime} </div> \r\n                                    </li> \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Data Final </label> <div className='activity-detail'>{activity.activities[key].DeadLine} </div> \r\n                                    </li> \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Hora </label> <div className='activity-detail'>{activity.activities[key].Time} </div> \r\n                                    </li > \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Duração </label> <div className='activity-detail'>{activity.activities[key].Duration} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Homens </label>  <div className='activity-detail'>{activity.activities[key].Men} </div> \r\n                                    </li > \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Mulher </label> <div className='activity-detail'>{activity.activities[key].Women} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Meninos </label> <div className='activity-detail'>{activity.activities[key].Boys} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Meninas </label> <div className='activity-detail'>{activity.activities[key].Girls} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Esperado </label>  <div className='activity-detail'>{activity.activities[key].Waited} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Etereonidade </label> <div className='activity-detail'>{activity.activities[key].Heterogenity} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Proximos passos </label> <div className='activity-detail'>{activity.activities[key].NextSteps} </div> \r\n                                    </li> \r\n                                    \r\n                                    <li className='modal-details-row'>\r\n                                        <label>Comentarios </label>  <div className='activity-detail'>{activity.activities[key].Comments} </div> \r\n                                    </li> \r\n                                </ul>\r\n                                </form>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                )\r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        \r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div classNameName='table-container'>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='header-container'>\r\n                 <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Actividade</div>\r\n                <div className='report-header'>Editar</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Mostrar</div>\r\n                <div className='report-header'>Relatorio</div>\r\n                \r\n                <i className=\"bi bi-info-circle-fill\"\r\n                              style={{'cursor':'pointer','fontSize': '2rem', 'color': 'white'}}\r\n                              />  \r\n            </div>\r\n            {values}\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Activities","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Carousel.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Products.jsx",["162"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\n\r\nfunction Product (){\r\n   const [products, setProducts] = useState({products:  []}) \r\n\r\n   const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `Product`)).then((snapshot) => {\r\n                    if (snapshot.exists())\r\n                        setProducts({projects: snapshot.val()})\r\n                    else\r\n                        alert('no data to load from db server')\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function handleButtonEvent(e){\r\n       \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n\r\n       if (key[0] === 'delete'){\r\n        alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            alert('updating')\r\n        }   \r\n        else{\r\n        \r\n            history.push({\r\n                pathname: '/macroactivities',\r\n                search: `?key=${key[1]}`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function buildTable(){\r\n        \r\n        var values = []\r\n        let count = 0\r\n\r\n        if (products !== null ){\r\n            for(let key in products.projects){\r\n               values.push(\r\n                <button onClick={handleButtonEvent}\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${products.projects[key].Key}`} >\r\n                        <div className='colmns-report'>\r\n                        <ul id={`${count++}.${products.projects[key].Key}`} >\r\n                            <li id={`${count++}.${products.projects[key].Key}`} >\r\n                                {products.projects[key].Area}\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`}>\r\n                                {products.projects[key].Name}\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`}>\r\n                                {products.projects[key].Status}\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`} >\r\n                                 <i className=\"bi bi-trash\" id={`delete.${count++}.${products.projects[key].Key}`} />\r\n                            </li>\r\n                            <li id={`${count++}.${products.projects[key].Key}`}>\r\n                                  <i className=\"bi bi-pencil\" id={`update.${count++}.${products.projects[key].Name}`}/>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                </button>\r\n            )\r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproducts',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div>\r\n            <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Area</div>\r\n                    <div className='report-header'>Nome do Producto</div>\r\n                    <div className='report-header'>Estado</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                </div>\r\n                {values}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n\r\n}\r\n\r\nexport default Product","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Projects.jsx",["163"],"import React, { useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport './Projects.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\nimport { useState } from 'react'\r\n\r\nfunction Projects (){\r\n    \r\n    const [projects, setProjects]  = useState({projs: []})\r\n    const history = useHistory()\r\n    \r\n    function handleButtonEvent(e){\r\n       \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        if (key[0] === 'delete'){\r\n            alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            alert('updating')\r\n        }   \r\n        else{\r\n            history.push({\r\n                pathname: '/products',\r\n                search: `?key=${key[1]}`,\r\n              })\r\n        }    \r\n     }\r\n \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `Project`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setProjects({projs: snapshot.val()})\r\n                else\r\n                    alert('no data to load from db server')\r\n        }\r\n        )},[])\r\n    \r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (projects !== null ){\r\n            for(let key in projects.projs){\r\n               values.push(\r\n                <button onClick={handleButtonEvent}\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${projects.projs[key].Key}`}>\r\n                        <div className='colmns-report'id={`${count++}.${projects.projs[key].Key}`} >\r\n                            <ul id={`${count++}.${projects.projs[key].Key}`}>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {projects.projs[key].ProjectName}\r\n                                </li>\r\n                                <li id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    {projects.projs[key].TypeOfActivity}\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-trash\" id={`delete.${count++}.${projects.projs[key].Key}`} />\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${projects.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${projects.projs[key].Key}`}\r\n                                    />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/addproject',\r\n            })\r\n        }\r\n        \r\n        return( \r\n        <div >\r\n            <div className='title' id='title'>\r\n                \r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Nome do Projecto</div>\r\n                <div className='report-header'>Tipo de Actividade</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Actualizar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n    return buildTable()\r\n}\r\n\r\nexport default Projects","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\MacroActivities.jsx",["164","165"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport '../TaskRow.css'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport Modal from 'react-modal'\r\n\r\nfunction MacroActivity(){\r\n    \r\n    const [macroActivities, setMacroActivities] = useState({mcs: []})\r\n    const history = useHistory()\r\n\r\n    useEffect( () => {\r\n         const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        const mcs = snapshot.val()\r\n                        let macroA = []\r\n                        for(let key in mcs){\r\n                            if (mcs[key].ProductKey === document.URL.split('=')[1])\r\n                                macroA.push(mcs[key])\r\n                        }\r\n                        setMacroActivities({mcs: macroA})\r\n                    }\r\n                    else{\r\n                     alert('no data to load from db server')\r\n                    }\r\n                })\r\n            },[]\r\n    )\r\n\r\n   function handleButtonEvent(e){\r\n      \r\n       let productKey = e.target.id\r\n       let key  = productKey.split('.')\r\n\r\n       if (key[0] === 'delete'){\r\n        alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            alert('updating')\r\n        }   \r\n        else{\r\n    \r\n        history.push({\r\n                pathname: '/activities',\r\n                search: `?key=${key[1]}`,\r\n            })\r\n        }\r\n    }\r\n    function buildTableforMcs(){\r\n        \r\n        var values = []\r\n        let count = 0\r\n\r\n        if (macroActivities !== null ){\r\n            for(let data in macroActivities.mcs){\r\n               values.push( \r\n                <button               \r\n                    style={{background: 'transparent',\r\n                        border: 'none',\r\n                        width: '100%',\r\n                        outline: 'none',\r\n                    }}\r\n                    onClick={handleButtonEvent}\r\n                 >\r\n                    <div className='rows-report' id={`${count++}.${macroActivities.mcs[data].Key}`}>\r\n                        <div className='colmns-report' id={`${count++}.${macroActivities.mcs[data].Key}`} >\r\n                            <ul id={`${count++}.${macroActivities.mcs[data].Key}`} >\r\n                                <li id={`${count++}.${macroActivities.mcs[data].Key}`}>\r\n                                    {macroActivities.mcs[data].Name}\r\n                                </li>\r\n                                <li id={`${count++}.${macroActivities.mcs[data].Key}`} >\r\n                                 <i className=\"bi bi-trash\" id={`delete.${count++}.${macroActivities.mcs[data].Key}`} />\r\n                                </li>\r\n                                <li id={`${count++}.${macroActivities.mcs[data].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${macroActivities.mcs[data].Key}`}/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n                )\r\n            }\r\n        }\r\n\r\n        function add(){\r\n            history.push({\r\n                pathname: '/addmacroactivities',\r\n                search: `?key=${document.URL.split('/')[3].split('=')[1]}`,\r\n            })\r\n        }\r\n\r\n        function back()\r\n        {\r\n            window.history.back()\r\n        }\r\n\r\n        return( \r\n        <div>\r\n             <div className='title' id='title'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                         marginRight: '20px'\r\n                }} onClick={back}/>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n           \r\n            <div className='table-container'>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nome da Macro Actividade</div>\r\n                    <div className='report-header'>Apagar</div>\r\n                    <div className='report-header'>Actualizar</div>\r\n                </div>\r\n                    {values}\r\n            </div>\r\n        </div>        \r\n        )\r\n    }\r\n    return buildTableforMcs()\r\n}\r\n\r\nexport default MacroActivity","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\TaskRow.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\DatabaseHelper.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\Sticky.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\NewsLetter.jsx",["166","167","168","169","170","171","172","173","174","175"],"import React from 'react'\r\nimport './NewsLetter.css'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport TaskRow from '../TaskRow'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer'\r\nimport { getDownloadURL, listAll, ref as storageRef } from 'firebase/storage'\r\nimport {Storage} from '../database/Storage'\r\n\r\nfunction NewsLetter (){\r\n    const [newsLetter, setnewsLetter] = useState({newsLetters:  []}) \r\n    const [imageList, setImageList] = useState([])\r\n    const listOfImages = storageRef(Storage, 'Newsletter/')\r\n    const history = useHistory()\r\n\r\n    const styles = StyleSheet.create({\r\n        header: {\r\n            fontWeight: 600,\r\n            padding: 10,\r\n            marginTop: 20,\r\n            flexDirection: 'row',\r\n            border: 'solid 0.1 black'\r\n        },\r\n        body: {\r\n          margin: 10,\r\n          padding: 10,\r\n          flexGrow: 1\r\n        }\r\n      });\r\n    \r\n      useEffect( () => {\r\n         const dbRef = ref(db)\r\n         listAll(listOfImages).then((response) => {\r\n            response.items.forEach(item => getDownloadURL(item).then(url =>{\r\n                setImageList((prev) => [...prev,url])\r\n            }))\r\n         })\r\n\r\n             get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                     if (snapshot.exists())\r\n                         setnewsLetter({newsLetters: snapshot.val()})\r\n                     else\r\n                         alert('no data to load from db server')\r\n             })\r\n         }\r\n     ,[])\r\n \r\n     function handleButtonEvent(e){\r\n        \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n \r\n         if (key[0] === 'delete'){\r\n            alert('deleting')\r\n         }\r\n         else if (key[0] === 'update'){\r\n             alert('updating')\r\n         }else{\r\n            history.push({\r\n                pathname: '/readnewsletter',\r\n                search: `?key=${key[1]}`\r\n            })\r\n         }\r\n     }\r\n \r\n     function buildTable(){\r\n         \r\n         var values = []\r\n         let count = 0\r\n         let index = 0\r\n \r\n         if (newsLetter !== null ){\r\n             for(let key in newsLetter.newsLetters){\r\n                values.push(\r\n                 \r\n                 <div> \r\n                    <button onClick={handleButtonEvent}\r\n                     style={{background: 'transparent',\r\n                             border: 'none',\r\n                             width: '100%',\r\n                             outline: 'none',\r\n                         }}\r\n                 >\r\n                        <div className='rows-report' id={`${count++}.${newsLetter.newsLetters[key].Key}`} >\r\n                            <div className='colmns-report'>\r\n                                <ul id={`${count++}.${newsLetter.newsLetters[key].Key}`} >\r\n                                    <li id={`${count++}.${newsLetter.newsLetters[key].Key}`} >\r\n                                        {++index}\r\n                                    </li>\r\n                                \r\n                                    <li id={`${count++}.${newsLetter.newsLetters[key].Key}`} >\r\n                                        {newsLetter.newsLetters[key].Title}\r\n                                    </li>\r\n                                    <li id={`${count++}.${newsLetter.newsLetters[key].Key}`}>\r\n                                        <i className=\"bi bi-trash\" id={`delete.${count++}.${newsLetter.newsLetters[key].Key}`} />\r\n                                    </li>\r\n                                    <li id={`${count++}.${newsLetter.newsLetters[key].Key}`}>\r\n                                        <i className=\"bi bi-pencil\" id={`update.${count++}.$${newsLetter.newsLetters[key].Key}`} />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n                )\r\n            }\r\n         }\r\n\r\n         function add(e){\r\n\r\n            const key = e.terget.id.split('.')\r\n            history.push({\r\n                pathname: '/addnewsletter',\r\n              })\r\n         }\r\n\r\n         return( \r\n         <div className='table-container'>\r\n            <div className='title' id='title'>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n             <div className='header-container'>\r\n                 <div className='report-header'>Nr</div>\r\n                 <div className='report-header'>Titulo</div>\r\n                 <div className='report-header'>Apagar</div>\r\n                 <div className='report-header'>Actualizar</div>\r\n               </div>\r\n             {values}\r\n         </div>\r\n         )\r\n     }\r\n \r\n     return buildTable()\r\n \r\n }\r\n\r\nexport default NewsLetter","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\database\\Storage.js",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Reports.jsx",["176","177","178","179","180","181","182"],"import React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport {useState, useEffect} from 'react'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport ActivityPDF from '../ReportsPDF/ActivityPDF'\r\n\r\nfunction Reports(){\r\n\r\n    const [macroActivities, setmacroActivities ] = useState({mcs: []})\r\n    const [activities, setActivities ] = useState({acts: []})\r\n    const [activitiesCount, setActivitiesCount] = useState({})\r\n    const [mActivities, setMActivities] = useState({})\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n           \r\n            get(child(dbRef, `MacroActivity`)).then((snapshot) => {\r\n                    if (snapshot.exists()){\r\n                        setmacroActivities({mcs: snapshot.val()})\r\n                    }\r\n                    else\r\n                        alert('no data to load from db server')\r\n            }).catch(()=>{\r\n                alert('Verifique a conexão com a internet')\r\n            })\r\n\r\n            get(child(dbRef, 'Activity')).then( snapshot => {\r\n\r\n                if (snapshot.exists()){\r\n                    setActivities({acts: snapshot.val()})\r\n                }\r\n                console.log(activities)\r\n            })\r\n        }\r\n    ,[])\r\n\r\n    function getActivities(mcs){\r\n\r\n        let a = []\r\n        let count = 0\r\n        for (let index in activities.acts){\r\n            if (mcs.Key === activities.acts[index].MacroActivityKey){\r\n                a.push(activities.acts[index])\r\n            }\r\n        }\r\n        \r\n        console.log(a)\r\n\r\n        return a\r\n    }\r\n\r\n    function handleButtonEvent(){\r\n\r\n    }\r\n\r\n    function generatePDF(e){\r\n        \r\n        const key = e.target.id.split('.')[1]\r\n        \r\n        const macroAct = macroActivities.mcs[key]\r\n        \r\n        const acts = getActivities(macroAct)\r\n\r\n        ActivityPDF(acts, macroAct)\r\n\r\n    }\r\n\r\n    function getRows(){\r\n        let values = []\r\n        let index = 0\r\n        let count = 0\r\n\r\n        for(let key in macroActivities.mcs){\r\n                values.push(                 \r\n                 <div> \r\n                    <button onClick={handleButtonEvent}\r\n                                style={{background: 'transparent',\r\n                                    border: 'none',\r\n                                    width: '100%',\r\n                                    outline: 'none',\r\n                                }}>\r\n\r\n                        <div className='rows-report' id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                            <div className='colmns-report'>\r\n                                <ul id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {++index}\r\n                                    </li>\r\n                                \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`} >\r\n                                        {macroActivities.mcs[key].Name}\r\n                                    </li>\r\n                                    \r\n                                    <li id={`${count++}.${macroActivities.mcs[key].Key}`}>\r\n                                        <i id={`${count++}.${key}`} className=\"bi bi-file-earmark-arrow-down\" style={{color: 'blue', fontSize: '1.2rem'}}\r\n                                            onClick={generatePDF}\r\n                                        />\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </div>)\r\n             }\r\n        return values    \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='table-container'>\r\n                <div className='title' id='title'>\r\n                    <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                </div>\r\n                <div className='header-container'>\r\n                    <div className='report-header'>Nr</div>\r\n                    <div className='report-header'>Macro Actividade</div>\r\n                    <div className='report-header'>Baixar Relatorio</div>\r\n                </div>\r\n                {\r\n                    getRows()\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reports\r\n","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivityPDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProducts.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddProject.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddMacroActivities.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddUser.jsx",["183"],"import {useState} from 'react'\r\nimport React from 'react'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ref,set} from 'firebase/database'\r\nimport {db} from '../database/DatabaseHelper'\r\n\r\nfunction back(e){\r\n    window.history.back()\r\n}\r\n\r\nfunction AddUser(){\r\n\r\n    const [user, setUser] = useState({\r\n        Role: 'Operacional',\r\n        Username: '',\r\n        Password: '',\r\n        Area: 'Urbanização e Regeneração Urbana'\r\n    })\r\n\r\n    function setUsername(e){\r\n\r\n        setUser({\r\n            Username: e.target.value,\r\n            Password: user.Password,\r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setPassword(e){\r\n        setUser({\r\n            Password: e.target.value,\r\n            Username: user.Username, \r\n            Role: user.Role,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n    function setRole(e){\r\n        setUser({\r\n            Username: user.Username,\r\n            Password: user.Password, \r\n            Role: e.target.value,\r\n            Area: user.Area\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function setArea(e){\r\n        setUser({\r\n                Username: user.Username,\r\n                Password: user.Password, \r\n                Role: user.Role,\r\n                Area: e.target.value\r\n            })\r\n     }\r\n    function addUser(e){\r\n        set(ref(db, 'User/' + uuidv4()), user).then(() => {\r\n            alert('Usuario gravado com sucesso')\r\n        }).catch(() => {\r\n            alert('Erro ao gravar usuario')\r\n        })\r\n        document.getElementById('closemodal').click()\r\n        window.history.back()\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n        <div className='title'> \r\n          <div className='back-icon'>\r\n              <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                              marginRight: '20px'\r\n                  }} onClick={back}/>\r\n          </div>\r\n          <div className='form-title'>\r\n              Adicionar Usuario\r\n          </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Username</label>\r\n          <input type=\"text\" onChange={setUsername} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n      \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Password</label>\r\n          <input type=\"text\" onChange={setPassword} className=\"form-control\" aria-describedby=\"emailHelp\" />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Tipo de Usuario</label>\r\n          <select className=\"form-select\"  onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Operacional</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Tatico</option>\r\n          </select>\r\n      </div>\r\n  \r\n      <div className=\"form-group\">\r\n          <label for=\"exampleInputEmail1\">Area</label>\r\n          <select className=\"form-select\"  onChange={setRole} aria-label=\"Default select example\">\r\n              <option selected value=\"Urbanização e Regeneração Urbana\" defaultChecked>Urbanização e Regeneração Urbana</option>\r\n              <option value=\"Recursos Hídricos e Resiliência\">Recursos Hídricos e Resiliência</option>\r\n              <option value=\"Ambiente e Resíduos Sólidos\">Ambiente e Resíduos Sólidos</option>\r\n              <option value=\"Educação Primária e Pré-Escolar\">Educação Primária e Pré-Escolar</option>\r\n              <option value=\"Sustentabilidade\">Sustentabilidade</option>\r\n           </select>\r\n      </div>\r\n\r\n      <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\"> Gravar Usuario   </button>\r\n\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Confirmação</h5>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          <form>\r\n              <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Submeter  Usuario ?</label>\r\n              </div>\r\n          </form>\r\n              </div>\r\n                  <div className=\"modal-footer\">\r\n                      <button type=\"button\" id='closemodal' className=\"btn btn-secondary\" data-dismiss=\"modal\">Não</button>\r\n                      <button type=\"button\" onClick={addUser} className=\"btn btn-primary\">Sim</button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>    \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddNewsLetter.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\forms\\AddActivitiy.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\Users.jsx",["184"],"import { useEffect,useState } from \"react\"\r\nimport React from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, getDatabase, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom'\r\n\r\nfunction Users(){\r\n\r\n    const [users, setUsers]  = useState({projs: []})\r\n    const history = useHistory()\r\n    \r\n    function handleButtonEvent(e){\r\n       \r\n        let productKey = e.target.id\r\n        let key  = productKey.split('.')\r\n        \r\n        if (key[0] === 'delete'){\r\n            alert('deleting')\r\n        }\r\n        else if (key[0] === 'update'){\r\n            alert('updating')\r\n        }    \r\n     }\r\n \r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `User`)).then((snapshot) => {\r\n                if (snapshot.exists())\r\n                    setUsers({projs: snapshot.val()})\r\n                else\r\n                    alert('no data to load from db server')\r\n        }\r\n        )},[])\r\n    \r\n    function buildTable(){\r\n        var values = []\r\n        let count = 0\r\n        if (users !== null ){\r\n            for(let key in users.projs){\r\n               values.push(\r\n                <button onClick={handleButtonEvent}\r\n                    style={{background: 'transparent',\r\n                            border: 'none',\r\n                            width: '100%',\r\n                            outline: 'none',\r\n                        }}\r\n                >\r\n                    <div className='rows-report' id={`${count++}.${users.projs[key].Key}`}>\r\n                        <div className='colmns-report'id={`${count++}.${users.projs[key].Key}`} >\r\n                            <ul id={`${count++}.${users.projs[key].Key}`}>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {values.length + 1}\r\n                                </li>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {users.projs[key].Username}\r\n                                </li>\r\n                                <li id={`${count++}.${users.projs[key].Key}`}>\r\n                                    {users.projs[key].Role}\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${users.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-trash\" id={`delete.${count++}.${users.projs[key].Key}`} />\r\n                                </li>\r\n                                <li className='project-icons' id={`${count++}.${users.projs[key].Key}`}>\r\n                                    <i className=\"bi bi-pencil\" id={`update.${count++}.${users.projs[key].Key}`}/>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </button>\r\n               )    \r\n            }\r\n        }\r\n\r\n        function add(e){\r\n            history.push({\r\n                pathname: '/adduser',\r\n            })\r\n        }\r\n        \r\n        return( \r\n        <div >\r\n            <div className='title' id='title'>\r\n                <input type='tex' className=\"form-control\" id=\"search\" aria-describedby=\"emailHelp\" placeholder=\"Procurar..\"></input>\r\n                <button type=\"button\" className=\"btn btn-light\" id='addbutton' onClick={add}>Adicionar</button>\r\n            </div>\r\n            <div className='header-container'>\r\n                <div className='report-header'>Nr</div>\r\n                <div className='report-header'>Usuario</div>\r\n                <div className='report-header'>Tipo</div>\r\n                <div className='report-header'>Apagar</div>\r\n                <div className='report-header'>Actualizar</div>\r\n            </div>\r\n                {values}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return buildTable()\r\n}\r\n\r\nexport default Users","C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\ReportsPDF\\ActivitySinglePDF.jsx",[],"C:\\Users\\Pina\\Desktop\\taskMan\\src\\components\\projectviews\\ReadNewsLetter.jsx",["185","186"],"import React from 'react'\r\nimport { useState,useEffect } from 'react'\r\nimport {db} from '../database/DatabaseHelper'\r\nimport { child, get, ref } from \"firebase/database\"\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nfunction ReadNewsNetter(){\r\n\r\n    const [newsletter, setnewsLetter] = useState({})\r\n    const newsletterkey = document.URL.split('=')[1]\r\n\r\n    useEffect( () => {\r\n        const dbRef = ref(db)\r\n        \r\n        get(child(dbRef, `NewsLetter`)).then((snapshot) => {\r\n                if (snapshot.exists()){\r\n\r\n                    for (let key in snapshot.val() ){\r\n                      if( snapshot.val()[key].Key === newsletterkey)\r\n                        setnewsLetter(snapshot.val()[key])\r\n                    }\r\n                }\r\n            }\r\n        )},[])\r\n\r\n        function back(e){\r\n            window.history.back()\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                    <div className='title' id='title'>\r\n                        <i className=\"bi bi-arrow-left\" style={{cursor: 'pointer',\r\n                                                                    marginRight: '20px'\r\n                        }} onClick={back}/>\r\n                    </div>\r\n                \r\n                <div className='title'>\r\n                    {newsletter.Title}\r\n                </div>\r\n                <div className='body'>\r\n                        {newsletter.Body}\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n}\r\n\r\nexport default ReadNewsNetter",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":4,"column":9,"nodeType":"193","messageId":"194","endLine":4,"endColumn":17},{"ruleId":"195","severity":1,"message":"196","line":21,"column":26,"nodeType":"197","endLine":21,"endColumn":68},{"ruleId":"191","severity":1,"message":"198","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":16},{"ruleId":"191","severity":1,"message":"199","line":9,"column":25,"nodeType":"193","messageId":"194","endLine":9,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":32,"column":24,"nodeType":"202","messageId":"203","endLine":32,"endColumn":26},{"ruleId":"191","severity":1,"message":"204","line":4,"column":22,"nodeType":"193","messageId":"194","endLine":4,"endColumn":33},{"ruleId":"191","severity":1,"message":"205","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":15},{"ruleId":"191","severity":1,"message":"206","line":28,"column":14,"nodeType":"193","messageId":"194","endLine":28,"endColumn":31},{"ruleId":"191","severity":1,"message":"207","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":12},{"ruleId":"191","severity":1,"message":"205","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":15},{"ruleId":"191","severity":1,"message":"208","line":23,"column":29,"nodeType":"193","messageId":"194","endLine":23,"endColumn":33},{"ruleId":"191","severity":1,"message":"205","line":5,"column":8,"nodeType":"193","messageId":"194","endLine":5,"endColumn":15},{"ruleId":"191","severity":1,"message":"204","line":3,"column":22,"nodeType":"193","messageId":"194","endLine":3,"endColumn":33},{"ruleId":"191","severity":1,"message":"204","line":4,"column":22,"nodeType":"193","messageId":"194","endLine":4,"endColumn":33},{"ruleId":"191","severity":1,"message":"209","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":13},{"ruleId":"191","severity":1,"message":"205","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":15},{"ruleId":"191","severity":1,"message":"210","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":14},{"ruleId":"191","severity":1,"message":"211","line":8,"column":16,"nodeType":"193","messageId":"194","endLine":8,"endColumn":20},{"ruleId":"191","severity":1,"message":"212","line":8,"column":22,"nodeType":"193","messageId":"194","endLine":8,"endColumn":26},{"ruleId":"191","severity":1,"message":"213","line":8,"column":28,"nodeType":"193","messageId":"194","endLine":8,"endColumn":36},{"ruleId":"191","severity":1,"message":"214","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":25},{"ruleId":"191","severity":1,"message":"215","line":15,"column":12,"nodeType":"193","messageId":"194","endLine":15,"endColumn":21},{"ruleId":"191","severity":1,"message":"216","line":19,"column":11,"nodeType":"193","messageId":"194","endLine":19,"endColumn":17},{"ruleId":"217","severity":1,"message":"218","line":49,"column":7,"nodeType":"219","endLine":49,"endColumn":9,"suggestions":"220"},{"ruleId":"191","severity":1,"message":"221","line":114,"column":19,"nodeType":"193","messageId":"194","endLine":114,"endColumn":22},{"ruleId":"191","severity":1,"message":"222","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":20},{"ruleId":"191","severity":1,"message":"223","line":12,"column":12,"nodeType":"193","messageId":"194","endLine":12,"endColumn":27},{"ruleId":"191","severity":1,"message":"224","line":12,"column":29,"nodeType":"193","messageId":"194","endLine":12,"endColumn":47},{"ruleId":"191","severity":1,"message":"225","line":13,"column":12,"nodeType":"193","messageId":"194","endLine":13,"endColumn":23},{"ruleId":"191","severity":1,"message":"226","line":13,"column":25,"nodeType":"193","messageId":"194","endLine":13,"endColumn":39},{"ruleId":"217","severity":1,"message":"227","line":35,"column":6,"nodeType":"219","endLine":35,"endColumn":8,"suggestions":"228"},{"ruleId":"191","severity":1,"message":"229","line":40,"column":13,"nodeType":"193","messageId":"194","endLine":40,"endColumn":18},{"ruleId":"191","severity":1,"message":"230","line":50,"column":14,"nodeType":"193","messageId":"194","endLine":50,"endColumn":21},{"ruleId":"191","severity":1,"message":"204","line":4,"column":22,"nodeType":"193","messageId":"194","endLine":4,"endColumn":33},{"ruleId":"191","severity":1,"message":"222","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":20},{"ruleId":"217","severity":1,"message":"231","line":24,"column":12,"nodeType":"219","endLine":24,"endColumn":14,"suggestions":"232"},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'setMenuVisibility' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getDatabase' is defined but never used.","'TaskRow' is defined but never used.","'handleButtonEvent' is defined but never used.","'logo' is defined but never used.","'acts' is assigned a value but never used.","'Modal' is defined but never used.","'Page' is defined but never used.","'Text' is defined but never used.","'View' is defined but never used.","'Document' is defined but never used.","'PDFDownloadLink' is defined but never used.","'imageList' is assigned a value but never used.","'styles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listOfImages'. Either include it or remove the dependency array.","ArrayExpression",["235"],"'key' is assigned a value but never used.","'useHistory' is defined but never used.","'activitiesCount' is assigned a value but never used.","'setActivitiesCount' is assigned a value but never used.","'mActivities' is assigned a value but never used.","'setMActivities' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activities'. Either include it or remove the dependency array.",["236"],"'count' is assigned a value but never used.","'setArea' is defined but never used.","React Hook useEffect has a missing dependency: 'newsletterkey'. Either include it or remove the dependency array.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [listOfImages]",{"range":"244","text":"245"},"Update the dependencies array to be: [activities]",{"range":"246","text":"247"},"Update the dependencies array to be: [newsletterkey]",{"range":"248","text":"249"},[1739,1741],"[listOfImages]",[1302,1304],"[activities]",[808,810],"[newsletterkey]"]